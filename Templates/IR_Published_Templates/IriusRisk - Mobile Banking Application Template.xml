<?xml version="1.0" encoding="UTF-8"?>
<template ref="iriusrisk - mobile banking application template" name="Iriusrisk   mobile banking application template" tags="" modelUpdated="2024-12-30 10:24:49">
  <desc>Involves handling sensitive financial transactions and personal data, requiring stringent security protocols.</desc>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="API gateway -&gt; Out Of Scope" ref="271e1bb3-c7b1-4b9b-9dd0-621043558852" source="b3cef635-6285-4c34-aee7-0eecf7c94841" target="13a37286-a00d-4b30-956c-a1b4b032a40c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="API gateway -&gt; Out Of Scope" ref="834376d0-f3bd-4a4e-8bf9-4ab824a3cc92" source="b3cef635-6285-4c34-aee7-0eecf7c94841" target="fc18a151-507a-4ce9-9fcb-66e09ace4125">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Mobile Device Client -&gt; API gateway" ref="b37c6d51-218b-428f-bf4a-2937a8880dfd" source="abd4644b-4b8a-4fd0-85d1-f9f70259ad4d" target="b3cef635-6285-4c34-aee7-0eecf7c94841">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="API gateway -&gt; Out Of Scope" ref="cfa8373d-c8ca-4675-81cc-1f913288840d" source="b3cef635-6285-4c34-aee7-0eecf7c94841" target="b9246691-7274-46c9-8950-1164bb546e16">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="pc--project-marker" value=""/>
  </customFields>
  <components>
    <component uuid="7de0757f-31aa-4576-abb9-f7189684691a" diagramComponentId="f88dec9f-b14c-4a7f-8505-6b4b531f45cc" ref="c2f17c07-d346-4dcd-96b2-133fcaa2276c" name="Accounts" desc="" library="IR-Functional-Components" parentComponentRef="b9246691-7274-46c9-8950-1164bb546e16" componentDefinitionRef="CD-GENERIC-FUNCTIONAL-COMPONENT">
      <tags/>
      <questions>
        <question ref="fc.answer.generic.functional.component.access.control.centralized.implemented" answer="true" manuallyModified="false"/>
        <question ref="fc.answer.generic.functional.component.limit.unsure" answer="true" manuallyModified="false"/>
        <question ref="fc.answer.generic.functional.component.logging.features.required" answer="true" manuallyModified="false"/>
        <question ref="fc.answer.generic.functional.component.multithreading.implemented" answer="true" manuallyModified="false"/>
      </questions>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-AUTHZ-AFTER-AUTHN" name="Authorize after you authenticate" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Authorization should be conducted as an explicit check, and as necessary even after an initial authentication has been completed. Authorization depends not only on the privileges associated with an authenticated user, but also on the context of the request. The time of the request and the location of the requesting user may both need to be taken into account.&lt;/p&gt;&lt;p&gt;Sometimes a user's authorization for a system or service needs to be revoked, for example, when an employee leaves a company. If the authorization mechanism fails to allow for such revocation, the system is vulnerable to abuse by authenticated users exercising out-of-date authorizations.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authorize After You Authenticate" url="https://cybersecurity.ieee.org/blog/2015/11/13/authorize-after-you-authenticate/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate that no authorization process is conducted before an authentication process has previously finished.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:43.860">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-603" name="Deploy a robust server-side validation and authentication system" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When authentication is performed solely on the client-side, the user's credentials (e.g., username and password) are sent to the server for verification. However, an attacker can intercept and modify these credentials before they are sent to the server, allowing them to gain unauthorized access to the application.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Furthermore, client-side authentication does not provide any protection against attacks that target the server-side of the application. For example, an attacker could exploit a vulnerability in the server-side code to gain access to sensitive data or functionality without needing to authenticate at all.&lt;/p&gt;&lt;p&gt;All data on the client-side must be considered tainted. As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated on the server-side to prevent their subversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure credentials are passed securely from client to server.&lt;/li&gt;&lt;li&gt;The server should compare the credentials with those stored on the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt;&lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt;&lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt;&lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify which functions the service provides which are authenticated or performing a privileged action.&lt;/li&gt;&lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A clear example of what you should look for would be an API endpoint which allows a client to update a resource, you should ensure this call checks the authentication on the server side (by checking the session having validated the authentication credentials previously).&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:43.945">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.&lt;/p&gt;&lt;p&gt;One of the ways to enforce this is by following the deny-by-default principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny-by-default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:44.007">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="36" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:43.832">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="39" state="Implemented" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:43.811">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="36" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:44.061">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="39" state="Required" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:44.314">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-THREAD-CONCURRENCY" name="Implement threading, concurrency and asynchronicity" issueId="" issueLink="" platform="" cost="0" risk="36" state="Implemented" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;In order to make your application more responsive to a user and maximize the performance of your user's computer, we have different coding techniques. Not so long ago, apps got faster simply by buying a newer PC or server and then that trend has reversed. Users still want responsive UI and business owners want servers that scale with their business. The transition to mobile and cloud and an internet-connected population of &amp;gt;3B users has resulted in a new set of software patterns.&lt;/p&gt;&lt;p&gt;Using multiple threads of execution is one of the most powerful ways to keep your application responsive to the user and at the same time make use of the processor in between or even during user events.&lt;/p&gt;&lt;p&gt;We use concurrency to take advantage of the hardware, so you can parallelize your code to distribute work across multiple processors.&lt;/p&gt;&lt;p&gt;Async programming is a key technique that makes it straightforward to handle blocking I/O and concurrent operations on multiple cores.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Parallel Processing, Concurrency, and Async Programming in .NET" url="https://docs.microsoft.com/en-us/dotnet/standard/parallel-processing-and-concurrency"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for bottlenecks in the workflow of the application that may cause a denial of service attack if exploited such as a misconfigured file reader that blocks the main thread if more than one file is uploaded to the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:43.935">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:39.228">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-29T12:55:39.501">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1190" url="https://attack.mitre.org/techniques/T1190"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                <countermeasure ref="DATA-VAL" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130-DOS-AUTH" name="Attackers can execute Denial of Service attacks to prevent valid users from accessing the system" state="Partly-Mitigate" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker leverages the security functionality of the system aimed at thwarting potential attacks (like automatic block of accounts after a number of failed login attempts) to launch a denial of service attack against a legitimate system user.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="25"/>
                <countermeasure ref="C-THREAD-CONCURRENCY" mitigation="25"/>
                <countermeasure ref="network-rate-limit" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-115-LOGIN-BYPASS" name="Attackers can bypass the login system using a less hardened alternative for accessing the system" state="Partly-Mitigate" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The basic way to take advantage of the application's access control flaws is called "forced browsing".&lt;/p&gt;&lt;p&gt;Let's say that the website http://mysite.com It is a website that supports the authenticity of the user and the administrator will be taken to the appropriate webpage after validation. But if an attacker knows the URL, he or she can enter it in their browser, for example&lt;/p&gt;&lt;p&gt;http://mysite.com/admin_page or http://mysite.com/user_page&lt;/p&gt;&lt;p&gt;If it is a secure website, it will be redirected to the login page. But if those pages are allowed to be accessed, it will be incomplete access control and will cause damage.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="20"/>
                <countermeasure ref="C-AUTHZ-AFTER-AUTHN" mitigation="20"/>
                <countermeasure ref="CWE-603" mitigation="20"/>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3634dcd0-dff1-4f8b-9e1f-8ec553192f83" diagramComponentId="8cee13e5-c7e3-4243-bdfc-889b42fba84b" ref="b9246691-7274-46c9-8950-1164bb546e16" name="Account Service" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="out-of-scope">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="17f2402a-4825-4111-bbb4-4339bc993586" diagramComponentId="3a841ff4-f52b-4439-ba5c-e133ef36812f" ref="b3cef635-6285-4c34-aee7-0eecf7c94841" name="API gateway" desc="" library="microservices-library-dev" parentComponentRef="" componentDefinitionRef="api-gateway-microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="33f27747-331a-42d9-81c2-90ae75c0dab7" diagramComponentId="1ce8a365-2d4c-4990-a98b-1747bd115a18" ref="13a37286-a00d-4b30-956c-a1b4b032a40c" name="Authentication" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="out-of-scope">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="b4f5c5fc-d211-40e9-b20c-0938c6c22711" diagramComponentId="ccd5158d-fb6b-497c-9782-db60da0be9bd" ref="7446a692-07e9-4d10-921e-27e7f69da0a8" name="Financial Transaction" desc="" library="financial-services-components" parentComponentRef="fc18a151-507a-4ce9-9fcb-66e09ace4125" componentDefinitionRef="CD-V2-FINANCIAL-TRANSACTION">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-285" name="CWE-285" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-285: Improper Authorization
The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.840">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306 CWE-285" name="CWE-306 CWE-285" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-306: Missing Authentication for Critical Function
The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.

				
CWE-285: Improper Authorization
The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.840">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="CWE-400" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-400: Uncontrolled Resource Consumption
The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.840">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-451" name="CWE-451" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-451: User Interface (UI) Misrepresentation of Critical Information
The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.840">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-639" name="CWE-639" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-639: Authorization Bypass Through User-Controlled Key
The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.840">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-USER-CONTROLLABLE-DATA" name="Avoid incorporating user-controllable data into redirection targets" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To effectively avoid incorporating user-controllable data into redirection targets within your financial transaction software, follow these actionable steps. This practice is essential to prevent open redirect vulnerabilities, where an attacker might exploit user-controllable data to redirect victims to malicious sites, potentially leading to phishing attacks, theft of sensitive information, or distribution of malware.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Validate All Redirection Targets&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that any redirection target URLs constructed using user input are validated against a list of allowed URLs or patterns.&lt;/li&gt;
 &lt;li&gt;Use a server-side list of legitimate URLs or URI patterns to validate redirection requests. This prevents attackers from specifying unauthorized destinations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Employ URL Mapping for Redirection&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement a mapping system where user input is mapped to a valid destination, rather than directly inserting user input into redirect URLs. For example, assign a numeric or token identifier to each legitimate redirect target and use these identifiers in user-facing inputs.&lt;/li&gt;
 &lt;li&gt;This approach ensures that the application controls the actual redirect destinations, making it impossible for attackers to inject malicious URLs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Use Allowlists for Dynamic Redirection&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;When dynamic redirection based on user input is necessary, create an allowlist of approved URLs or domain patterns. Only allow redirections to URLs that match the allowlist criteria.&lt;/li&gt;
 &lt;li&gt;Regularly review and update the allowlist to ensure it includes all necessary legitimate redirection targets and excludes any potential threats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Sanitize and Encode URL Parameters&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Before using any user input to construct redirection URLs, sanitize the input to remove or escape potentially harmful characters. Use encoding methods appropriate for the context (e.g., URL encoding) to ensure special characters do not lead to unintended URL parsing behavior.&lt;/li&gt;
 &lt;li&gt;Apply strict type checking where applicable, ensuring that input parameters (e.g., identifiers or tokens) match the expected format, further reducing the attack surface.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Implement Server-Side Checks and Redirects&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Where possible, avoid client-side redirects that rely on user input. Instead, handle redirection logic server-side where stricter control and validation can be applied.&lt;/li&gt;
 &lt;li&gt;If client-side redirects are necessary, ensure the data used to determine the target URL is securely transmitted and validated server-side before being sent to the client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Regularly Audit and Test Redirection Logic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Periodically review your redirection mechanisms and validation logic to ensure they are secure against new and evolving threats.&lt;/li&gt;
 &lt;li&gt;Employ automated testing tools to detect open redirection vulnerabilities and manual penetration testing to understand the practical exploitability of your application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Educate and Train Developers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that all developers are aware of the risks associated with user-controllable redirection targets and are trained in secure coding practices.&lt;/li&gt;
 &lt;li&gt;Promote a security-aware culture that encourages constant vigilance and adherence to best practices in handling user input and redirection mechanisms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;References to Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;OWASP (Open Web Application Security Project)&lt;/strong&gt;: Offers comprehensive resources on secure coding practices, including avoiding open redirection vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;CWE (Common Weakness Enumeration)&lt;/strong&gt;: Provides detailed information on common software weaknesses and methods to prevent them, including CWE-601: URL Redirection to Untrusted Site ('Open Redirect').&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing these steps will significantly reduce the risk of open redirection vulnerabilities in your financial transaction software, thereby protecting both the application and its users from potential threats.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Unvalidated Redirects and Forwards Cheat Sheet" url="https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"/>
          </references>
          <standards>
            <standard ref="232-217" supportedStandardRef="OpenCRE"/>
            <standard ref="601" supportedStandardRef="cwe-standard"/>
            <standard ref="Input Validation Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Mass Assignment Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-CLNT-04" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK ICS - M0818 - Validate Program Inputs"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V5.1.5"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DETECTION-MECHANISMS" name="Create detection mechanisms that alerts upon detection of anomalous behavior" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To create detection mechanisms that alert upon detection of anomalous behavior in a financial transaction system, follow these steps to implement a comprehensive and actionable security countermeasure:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Identify Normal Behavior:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define what constitutes normal transaction behavior within your system. Consider factors such as transaction frequency, amount ranges, time patterns, and typical user actions.&lt;/li&gt;
 &lt;li&gt;Use historical transaction data to establish baseline profiles for normal activities. This may involve analyzing transaction volumes, amounts, and patterns over specific periods.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Select a Detection Method:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Choose a detection method that suits your system's needs. Options include statistical anomaly detection, machine learning models, and rule-based systems.&lt;/li&gt;
 &lt;li&gt;For statistical methods, calculate the statistical thresholds that signify normal operations. For machine learning, train your model with historical data labeled as normal or anomalous.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Logging and Monitoring:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure comprehensive logging of all transactions and user actions within the system. Logs should include transaction details, user identifiers, timestamps, and access points.&lt;/li&gt;
 &lt;li&gt;Use monitoring tools to track real-time transaction data against your baseline of normal behavior.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configure Alerting Mechanisms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Set up alerting mechanisms that trigger notifications when anomalous behavior is detected. Alerts can be configured to notify system administrators, security teams, or even users, depending on the nature of the anomaly.&lt;/li&gt;
 &lt;li&gt;Determine the criteria for alerts, such as transactions that exceed certain amounts, patterns of rapid successive transactions, or logins from geographically improbable locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Automate Response Actions:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Where possible, automate initial response actions to anomalous behavior. This might include temporarily locking user accounts, flagging transactions for review, or initiating additional authentication processes.&lt;/li&gt;
 &lt;li&gt;Ensure that automated responses are proportional and do not unduly interfere with legitimate user activities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Regularly Update and Train Your System:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continuously update your detection mechanisms with new transaction data to refine your baseline and improve detection accuracy.&lt;/li&gt;
 &lt;li&gt;For machine learning models, retrain regularly with updated datasets to adapt to changing patterns in transaction behavior.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Conduct Regular Audits and Reviews:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Periodically audit the detection system to evaluate its effectiveness and adjust detection methods, thresholds, and response protocols as necessary.&lt;/li&gt;
 &lt;li&gt;Review false positives and false negatives to refine your detection mechanisms and reduce unnecessary alerts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate Users and Employees:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Educate users and employees about the importance of security practices and how to respond to alerts regarding anomalous transactions.&lt;/li&gt;
 &lt;li&gt;Provide guidance on secure transaction habits and the steps to take if they suspect fraudulent activity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compliance and Best Practices:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure your detection mechanisms comply with relevant financial regulations and industry standards for data protection and privacy.&lt;/li&gt;
 &lt;li&gt;Stay informed about emerging threats and incorporate insights from industry best practices and security research to continually enhance your detection capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, you can create effective detection mechanisms to alert upon detection of anomalous behavior in financial transactions, enhancing the security and integrity of your financial transaction system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Secure Software Standard" url="https://www.pcisecuritystandards.org/documents/Secure-Software-Program-Guide-v1.pdf"/>
          </references>
          <standards>
            <standard ref="028-254" supportedStandardRef="OpenCRE"/>
            <standard ref="16" supportedStandardRef="cwe-standard"/>
            <standard ref="Docker Security Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V10.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1031 - Network Intrusion Prevention||ATT&amp;CK Enterprise - M1019 - Threat Intelligence Program||ATT&amp;CK Enterprise - M1040 - Behavior Prevention on Endpoint||ATT&amp;CK Enterprise - M1056 - Pre-compromise"/>
            <customField ref="SF-C-SCOPE" value="Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V10.3.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SERVER-SIDE-VALIDATION" name="Deploy a robust server-side validation and authentication system" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploying a robust server-side validation and authentication system is essential for securing your financial transaction software against various security threats, including unauthorized access and data manipulation. Follow these actionable steps to implement this countermeasure effectively:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Establish Strong Authentication Mechanisms&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement Multi-Factor Authentication (MFA)&lt;/strong&gt;: Require users to provide two or more verification factors to gain access to their accounts, significantly enhancing security beyond just username and password.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Industry-Standard Protocols&lt;/strong&gt;: Adopt secure, widely accepted authentication protocols such as OAuth 2.0 for third-party authentications and OpenID Connect for identity verification.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Enforce Strong Password Policies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Require complex passwords that include a mix of letters, numbers, and special characters. Enforce minimum length requirements (at least 8 characters, preferably more).&lt;/li&gt;
 &lt;li&gt;Implement account lockout mechanisms after a certain number of unsuccessful login attempts to prevent brute force attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Secure Password Storage&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Never store passwords in plaintext. Use strong, adaptive hash functions such as bcrypt, scrypt, or Argon2 to hash passwords before storing them.&lt;/li&gt;
 &lt;li&gt;Implement salt uniquely for each password to prevent rainbow table attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Implement Comprehensive Input Validation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Validate all user inputs server-side to prevent common vulnerabilities such as SQL injection, XSS (Cross-Site Scripting), and command injection. Use allowlists for validation and avoid relying solely on denylists.&lt;/li&gt;
 &lt;li&gt;Validate input formats using regular expressions and check for data types, lengths, and ranges as appropriate for the context.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Utilize HTTPS for All Transactions&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure all data in transit, especially authentication data and transaction details, are encrypted using HTTPS. This prevents man-in-the-middle attacks and eavesdropping.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Employ Session Management Best Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Generate a new session identifier with secure, random values at login. Ensure session identifiers are securely stored and transmitted.&lt;/li&gt;
 &lt;li&gt;Implement session timeout limits and explicit logout functionality. Invalidate session identifiers immediately after logout or timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Regularly Update and Patch Systems&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Keep all server software, libraries, and dependencies up-to-date to protect against known vulnerabilities.&lt;/li&gt;
 &lt;li&gt;Regularly review security advisories and apply necessary patches promptly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Conduct Security Audits and Penetration Testing&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Regularly perform security audits of your authentication system and overall application to identify and mitigate potential vulnerabilities.&lt;/li&gt;
 &lt;li&gt;Engage in penetration testing with the help of external security experts to uncover and address security weaknesses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;9. Educate Users on Security Best Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Provide users with guidance on creating strong passwords, recognizing phishing attempts, and securing their devices and network connections.&lt;/li&gt;
 &lt;li&gt;Encourage users to report any suspicious activities or security concerns immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;References to Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;OWASP (Open Web Application Security Project)&lt;/strong&gt;: Provides extensive resources on authentication, session management, and input validation best practices.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;NIST (National Institute of Standards and Technology)&lt;/strong&gt;: Offers guidelines for digital identity and authentication, including recommendations for password security and user authentication methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, you'll create a strong foundation for your financial transaction software's security, effectively mitigating risks associated with authentication and input validation vulnerabilities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="102-811" supportedStandardRef="OpenCRE"/>
            <standard ref="256" supportedStandardRef="cwe-standard"/>
            <standard ref="342-764" supportedStandardRef="OpenCRE"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="523" supportedStandardRef="cwe-standard"/>
            <standard ref="602" supportedStandardRef="cwe-standard"/>
            <standard ref="640-364" supportedStandardRef="OpenCRE"/>
            <standard ref="Docker Security Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Forgot Password Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1043 - Credential Access Protection||ATT&amp;CK ICS - M0800 - Authorization Enforcement"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V2.7.4||V2.7.5||V1.4.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-TRACEABLE-CRITICAL-ASSETS" name="Ensure that all access attempts and usage of critical assets are tracked and traceable to a unique individual" issueId="" issueLink="" platform="" cost="2" risk="28" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To ensure that all access attempts and usage of critical assets are tracked and traceable to a unique individual, implement the following countermeasures:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enforce Unique User Identification:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Require that each user accessing the system has a unique identifier (UID), such as a username or employee ID. This UID must be used for all system access attempts and activities.&lt;/li&gt;
 &lt;li&gt;Prohibit sharing of user accounts and credentials. Implement strict policies and technical controls to enforce this, such as automatic session timeouts and multi-factor authentication (MFA).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Strong Authentication Mechanisms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Deploy robust authentication mechanisms that verify the identity of users before granting access to critical assets. Consider using MFA, which requires two or more verification factors, combining something the user knows (password), something the user has (security token, mobile device), and something the user is (biometrics).&lt;/li&gt;
 &lt;li&gt;Regularly review and update authentication policies to ensure they align with current best practices and security standards.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Comprehensive Access Control Policies:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define access control policies based on the principle of least privilege, ensuring users have access only to the resources necessary for their role.&lt;/li&gt;
 &lt;li&gt;Employ Role-Based Access Control (RBAC) or Attribute-Based Access Control (ABAC) to manage permissions efficiently and effectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Deploy Audit Logging and Monitoring Solutions:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement detailed audit logging for all system interactions, especially those involving critical assets. Ensure logs capture who accessed what, when, and what actions were performed.&lt;/li&gt;
 &lt;li&gt;Use automated monitoring tools to analyze logs in real-time, identifying unauthorized or suspicious access attempts and triggering alerts as necessary.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Regularly Review and Analyze Logs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Conduct regular reviews of access logs to verify compliance with access policies and detect any anomalies or unauthorized access attempts.&lt;/li&gt;
 &lt;li&gt;Use log analysis tools and services to manage and interpret the vast amount of data, focusing on patterns that may indicate security incidents.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Secure and Back Up Logs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that logs are stored securely, with access to them tightly controlled and monitored. Protect logs from unauthorized access, modification, and deletion.&lt;/li&gt;
 &lt;li&gt;Regularly back up log data to a separate, secure location to prevent loss due to system failures or cyber attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Train and Educate Users:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Educate users about the importance of security practices, such as using strong passwords and securing their authentication factors (e.g., not sharing tokens or keys).&lt;/li&gt;
 &lt;li&gt;Provide training on recognizing phishing attempts and other social engineering tactics that may threaten system security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Respond to Incidents Appropriately:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Establish clear procedures for responding to security incidents, including potential unauthorized access attempts. Ensure that responses include investigating the incident, taking corrective action, and reporting as necessary according to regulatory requirements and internal policies.&lt;/li&gt;
 &lt;li&gt;Review and refine these procedures regularly, incorporating lessons learned from past incidents.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Comply with Legal and Regulatory Requirements:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure your tracking, logging, and monitoring practices comply with relevant legal and regulatory requirements regarding data protection, privacy, and cybersecurity.&lt;/li&gt;
 &lt;li&gt;Stay informed about changes in compliance requirements and adjust your practices accordingly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By implementing these countermeasures, you can ensure that all access attempts and usage of critical assets in your financial transaction system are tracked and traceable to a unique individual, enhancing accountability and security.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Secure Software Standard" url="https://www.pcisecuritystandards.org/documents/Secure-Software-Program-Guide-v1.pdf"/>
          </references>
          <standards>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.7.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="184-284" supportedStandardRef="OpenCRE"/>
            <standard ref="555-048" supportedStandardRef="OpenCRE"/>
            <standard ref="778" supportedStandardRef="cwe-standard"/>
            <standard ref="A3.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="C9" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Logging Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-CONF-02" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1018 - User Account Management||ATT&amp;CK Enterprise - M1047 - Audit"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V7.1.3||V7.1.4"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SECURE-AUTH" name="Ensure the application uses a single vetted authentication mechanism that is known to be secure" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensuring your application uses a single vetted authentication mechanism that is known to be secure is crucial for maintaining a standardized and strong security posture. This approach minimizes the complexity and potential vulnerabilities associated with managing multiple authentication systems. Here’s how to implement this countermeasure effectively:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Evaluate and Select a Secure Authentication Mechanism&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Research and Compare&lt;/strong&gt;: Evaluate various authentication mechanisms focusing on security features, industry acceptance, and compatibility with your application. Consider mechanisms that support Multi-Factor Authentication (MFA) and have a proven track record of security.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Consult Security Standards&lt;/strong&gt;: Refer to security standards and guidelines from reputable organizations like OWASP, NIST, or similar, to choose an authentication mechanism known for its security strengths.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Implement the Chosen Authentication Mechanism&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Follow Best Practices&lt;/strong&gt;: Implement the authentication mechanism according to the vendor’s or developer community’s best practices. Ensure it is configured to use strong encryption for storing and transmitting credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Single Sign-On (SSO)&lt;/strong&gt;: If applicable, consider using Single Sign-On (SSO) technologies that allow users to authenticate once and gain access to multiple systems securely. Ensure the SSO solution adheres to secure protocols like SAML or OpenID Connect.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Secure Configuration&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Default Settings&lt;/strong&gt;: Change all default configurations as they may be well-known and represent a security risk. This includes default passwords, user names, and any sample accounts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Security Parameters&lt;/strong&gt;: Configure security-related parameters to enhance security, such as password complexity requirements, session timeout settings, and account lockout policies after a number of failed attempts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Regular Security Updates and Patch Management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Keep the authentication system up-to-date with the latest patches and updates. Regularly review the security advisories for the authentication mechanism and apply updates as recommended by the vendor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Test and Audit&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Penetration Testing&lt;/strong&gt;: Regularly perform penetration testing focusing on the authentication process to uncover any vulnerabilities or misconfigurations.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Audit&lt;/strong&gt;: Conduct regular audits of the authentication mechanism to ensure it complies with your organization's security policies and standards.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. User Education&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Educate users on the importance of secure authentication practices, including the need for strong, unique passwords and the risks associated with phishing attacks.&lt;/li&gt;
 &lt;li&gt;Provide training on how to use the authentication mechanism securely, especially if it involves MFA or biometric data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Monitor and Review&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement monitoring solutions to detect and alert on abnormal authentication attempts or patterns that may indicate an attack or compromise.&lt;/li&gt;
 &lt;li&gt;Regularly review authentication logs and metrics to identify potential security issues or the need for adjustments in the authentication process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;References to Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;OWASP Authentication Cheat Sheet&lt;/strong&gt;: Offers practical advice on implementing secure authentication.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;NIST Digital Identity Guidelines (SP 800-63)&lt;/strong&gt;: Provides comprehensive guidance on digital identity and authentication processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By adhering to these steps, you ensure that your application relies on a single, secure, and vetted authentication mechanism, significantly reducing the attack surface and streamlining user access management. This approach not only enhances security but also simplifies the user experience and administrative overhead.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Testing Guide v4. Testing for authentication" url="https://www.owasp.org/index.php/Testing_for_authentication"/>
          </references>
          <standards>
            <standard ref="113-133" supportedStandardRef="OpenCRE"/>
            <standard ref="306" supportedStandardRef="cwe-standard"/>
            <standard ref="576-042" supportedStandardRef="OpenCRE"/>
            <standard ref="V1.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V1.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1027 - Password Policies"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V1.2.4||V1.2.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ACCESS-CONTROL-SYSTEM" name="Implement an access control system" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing an access control system within a financial transaction environment requires careful planning and execution to ensure that sensitive data and operations are securely managed. Follow these actionable steps, oriented towards developers with or without previous security experience, to establish a robust access control system:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Define Security Requirements and Objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Identify the assets that require protection, including data, applications, and systems.&lt;/li&gt;
 &lt;li&gt;Determine the security requirements for each asset based on its sensitivity and the potential impact of unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Classify Users and Assets:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Classify users into roles based on their job functions and responsibilities within the organization.&lt;/li&gt;
 &lt;li&gt;Assign sensitivity levels to assets (e.g., public, internal, confidential, highly confidential) to facilitate appropriate access control measures.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Select an Access Control Model:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Choose an access control model that best fits your organizational needs and security objectives. Common models include: 
  &lt;ul&gt;
   &lt;li&gt;Discretionary Access Control (DAC): Access is based on the identity of the users and/or the groups to which they belong.&lt;/li&gt;
   &lt;li&gt;Role-Based Access Control (RBAC): Access permissions are based on roles assigned to users. Users can have multiple roles, and roles can have multiple users.&lt;/li&gt;
   &lt;li&gt;Attribute-Based Access Control (ABAC): Access decisions are based on attributes (user attributes, resource attributes, and environment conditions).&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Authentication Mechanisms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Deploy strong authentication methods to verify the identity of users attempting to access the system. Consider multi-factor authentication (MFA) to add an extra layer of security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Design and Implement Authorization Mechanisms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Once authenticated, users should be granted access only to the resources necessary for their roles. Implement permissions and access controls based on the selected access control model.&lt;/li&gt;
 &lt;li&gt;Ensure that the principle of least privilege is applied, providing users with the minimum levels of access or permissions needed to perform their tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Develop Secure Administration Procedures:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Establish secure procedures for administering access controls, including how roles are assigned, changed, and revoked.&lt;/li&gt;
 &lt;li&gt;Ensure that changes to access control policies and configurations are logged and auditable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ensure Scalability and Flexibility:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Design the access control system to be scalable and flexible, allowing for the addition of new users, roles, and resources without compromising security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Monitor and Audit Access:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement monitoring and logging to detect and record access attempts, both successful and unsuccessful. This helps in identifying potential security incidents and ensuring compliance with policies.&lt;/li&gt;
 &lt;li&gt;Regularly audit access controls and logs to ensure that only authorized users are accessing sensitive resources and that the access control system is functioning as intended.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate Users and Enforce Policies:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Train users on the importance of security policies and the proper handling of sensitive information.&lt;/li&gt;
 &lt;li&gt;Enforce security policies and access controls consistently across the organization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Review and Update Access Controls:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Regularly review and update access controls in response to changes in the organizational structure, user roles, or security requirements.&lt;/li&gt;
 &lt;li&gt;Adjust policies and permissions as necessary to address new threats, vulnerabilities, and changes in regulatory requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing an access control system is a dynamic process that requires ongoing attention and maintenance. By following these steps, you can create a secure and efficient environment that protects sensitive financial transactions and data from unauthorized access while facilitating legitimate business activities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Payment Card Industry Data Security Standard (PCI-DSS) v4.0" url="https://www.pcisecuritystandards.org/documents/PCI-DSS-v4_0.pdf"/>
          </references>
          <standards>
            <standard ref="128-128" supportedStandardRef="OpenCRE"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-3 ACCESS ENFORCEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="Executable Allowlisting" supportedStandardRef="D3FEND"/>
            <standard ref="Executable Denylisting" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-3: The principle of least functionality is incorporated by configuring systems to provide only essential capabilities" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="System Call Filtering" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1018 - User Account Management"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-3 ACCESS ENFORCEMENT"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.740">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-BU-LIMITS" name="Implement and monitor Business Logic Limits for actions and transactions" issueId="" issueLink="" platform="" cost="2" risk="27" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing and monitoring Business Logic Limits for actions and transactions is a crucial step in protecting your application from abuse and ensuring it operates within its intended use case and capacity. This involves defining constraints and behaviors that reflect the real-world operations of your business, thereby preventing misuse that could lead to fraud, data leakage, or service disruption. Here's how to approach this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Identify Critical Transactions and Actions&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Map Out Business Processes&lt;/strong&gt;: Understand and document all critical business processes and actions within your application, particularly those related to financial transactions, user management, and data access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Determine Normal Operation Parameters&lt;/strong&gt;: For each critical process, define what constitutes normal operation, including frequency of actions, volume of transactions, and access levels.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Define Business Logic Limits&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Set Thresholds&lt;/strong&gt;: Based on the normal operation parameters, set limits on how often transactions can be made, the volume of data that can be processed within a certain timeframe, and the access levels for different user roles.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement Multi-Factor Authentication (MFA) for Sensitive Actions&lt;/strong&gt;: For transactions or actions that are particularly sensitive or prone to abuse, require additional authentication steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Implement Limit Checks in Application Logic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Code Implementation&lt;/strong&gt;: Within your application’s backend logic, implement checks that enforce the defined business logic limits. This can involve rate limiting, transaction volume checks, and role-based access controls.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Feedback Mechanisms&lt;/strong&gt;: Provide immediate feedback to users when a limit is reached, explaining why the action was blocked and what steps, if any, they can take.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Monitor for Anomalies and Abuse&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Automated Monitoring Tools&lt;/strong&gt;: Utilize automated tools to monitor application usage patterns and detect deviations from normal behavior that might indicate an attempt to bypass business logic limits.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Alerting Mechanisms&lt;/strong&gt;: Implement alerting mechanisms to notify administrators of potential abuse or anomalous activities, allowing for rapid response.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Regularly Review and Adjust Limits&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Performance Reviews&lt;/strong&gt;: Regularly review the effectiveness of your business logic limits in preventing abuse and ensuring normal operation. This includes analyzing logs, user feedback, and performance metrics.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Adjust Limits as Needed&lt;/strong&gt;: Based on your reviews, adjust limits to better match the evolving nature of your business operations and threat landscape.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Educate Your Users&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;User Guidelines&lt;/strong&gt;: Provide clear guidelines and documentation to users about the limits of transactions and actions within your application, including the rationale behind these limits.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Support Channels&lt;/strong&gt;: Offer support channels for users who encounter legitimate reasons to exceed these limits, ensuring they can complete necessary actions without resorting to workarounds that could harm the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;References to Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;OWASP (Open Web Application Security Project)&lt;/strong&gt;: Provides resources on implementing security measures, including business logic security.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;CWE (Common Weakness Enumeration)&lt;/strong&gt;: Lists software and hardware weakness types, offering insight into potential areas where business logic limits can be beneficial.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing and monitoring business logic limits is not just about preventing abuse; it's also about ensuring that your application remains performant, reliable, and true to its intended use, enhancing both security and user experience.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="418-853" supportedStandardRef="OpenCRE"/>
            <standard ref="660-867" supportedStandardRef="OpenCRE"/>
            <standard ref="746-705" supportedStandardRef="OpenCRE"/>
            <standard ref="754" supportedStandardRef="cwe-standard"/>
            <standard ref="770" supportedStandardRef="cwe-standard"/>
            <standard ref="841" supportedStandardRef="cwe-standard"/>
            <standard ref="Abuse Case Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="C9" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="V11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V11.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-BUSL-$$" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management||ATT&amp;CK Enterprise - M1030 - Network Segmentation||ATT&amp;CK Enterprise - M1022 - Restrict File and Directory Permissions"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V11.1.7||V11.1.3||V11.1.5"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ANTI-PHISHING-MEASURES" name="Implement anti-phishing measures such as email validation and verification processes" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing anti-phishing measures, specifically focusing on email validation and verification processes, is crucial for protecting against fraudulent attempts to gain sensitive information. Follow these steps to bolster your defenses against phishing within your financial transaction system or organizational communication channels:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Educate Your Users:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Conduct regular training sessions for all employees to recognize the signs of phishing emails, such as unexpected attachments, suspicious links, urgent or threatening language, and sender email addresses that don't match the organization's domain.&lt;/li&gt;
 &lt;li&gt;Encourage a culture of caution where users verify the legitimacy of requests for sensitive information, especially those coming from email.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Strong Email Filtering:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Use advanced email filtering solutions that can detect and block phishing attempts before they reach the user's inbox. Look for solutions that include signature-based detection, anomaly detection, and machine learning capabilities to identify new and evolving phishing threats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Deploy Sender Policy Framework (SPF) and DomainKeys Identified Mail (DKIM):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement SPF and DKIM to authenticate outgoing emails from your domain, making it harder for attackers to spoof emails pretending to be from your organization.&lt;/li&gt;
 &lt;li&gt;SPF allows you to specify which mail servers are permitted to send email on behalf of your domain, while DKIM provides a digital signature that verifies that an email message was not altered in transit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Domain-based Message Authentication, Reporting, and Conformance (DMARC):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement DMARC to build on SPF and DKIM, adding a reporting function that lets you know who is sending emails from your domain. DMARC policies also allow you to specify how receiving mail servers should handle emails that fail SPF and DKIM checks, such as rejecting them or marking them as spam.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enable Multi-Factor Authentication (MFA):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Require MFA for accessing email accounts. This adds an additional layer of security, ensuring that even if credentials are compromised, attackers cannot easily gain access to email accounts without the second factor of authentication.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Regularly Update and Patch Systems:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that email servers, clients, and any associated software are regularly updated and patched to fix vulnerabilities that could be exploited by phishing attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Email Verification Processes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;For emails requesting sensitive information or instructing financial transactions, implement a verification process such as follow-up phone calls using known numbers (not numbers provided in the email) to confirm the legitimacy of the request.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Email Encryption:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Encrypt sensitive emails to protect their contents during transit. This ensures that intercepted emails cannot be read by unauthorized parties.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Monitor and Analyze Email Traffic:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continuously monitor email traffic for patterns indicative of phishing, such as spikes in emails containing certain keywords or coming from certain domains. Use this analysis to adjust filters and rules accordingly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Create an Incident Response Plan:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Develop and implement an incident response plan for suspected phishing attempts. This plan should include steps for reporting suspicious emails, assessing potential breaches, containing threats, and communicating with affected parties.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By implementing these anti-phishing measures, organizations can significantly reduce the risk of successful phishing attacks, protecting sensitive data and financial transactions from unauthorized access. Remember, security is an ongoing process that requires continuous vigilance, education, and adaptation to new threats.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="TrendMictro Phishing" url="https://www.trendmicro.com/en_us/research/20/i/tricky-forms-of-phishing.html"/>
          </references>
          <standards>
            <standard ref="031-447" supportedStandardRef="OpenCRE"/>
            <standard ref="042-550" supportedStandardRef="OpenCRE"/>
            <standard ref="20" supportedStandardRef="cwe-standard"/>
            <standard ref="915" supportedStandardRef="cwe-standard"/>
            <standard ref="C5" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Input Validation Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Mass Assignment Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-INPV-00" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content||ATT&amp;CK Enterprise - M1017 - User Training"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V5.1.2||V5.1.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ACTIVITY-RECORDS" name="Implement secure retention of detailed activity records" issueId="" issueLink="" platform="" cost="2" risk="28" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing secure retention of detailed activity records is essential for maintaining the integrity, confidentiality, and availability of logs that capture user activities, system events, and transactions. These records are vital for auditing, compliance, forensic analysis, and understanding user behavior. Follow these steps to ensure your activity records are securely retained:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Define Retention Policies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Identify Legal and Regulatory Requirements&lt;/strong&gt;: Determine the minimum retention period for your activity records based on industry regulations, legal requirements, and business needs.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Establish Retention Periods&lt;/strong&gt;: Define how long different types of records should be retained, considering both operational needs and compliance requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Ensure Comprehensive Logging&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Determine Log Scope&lt;/strong&gt;: Identify which actions and events need to be logged. This typically includes user actions, system changes, access to sensitive information, and transactions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Include Relevant Details&lt;/strong&gt;: Ensure logs capture sufficient details such as timestamps, user identifiers, action types, and outcomes. Avoid logging sensitive information like passwords.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Protect Log Integrity&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Immutable Storage&lt;/strong&gt;: Use write-once, read-many (WORM) storage or similar mechanisms to prevent tampering with the logs once they are written.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Checksums and Digital Signatures&lt;/strong&gt;: Implement checksums or digital signatures to detect any unauthorized modifications to the logs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Secure Log Access&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Access Controls&lt;/strong&gt;: Implement strict access controls to ensure only authorized personnel can view or manage the logs. Use role-based access control (RBAC) to limit access based on job functions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Audit Log Access&lt;/strong&gt;: Keep an audit trail of who accessed the logs and what actions they performed, to detect potential misuse or unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Encrypt Sensitive Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Data Encryption&lt;/strong&gt;: Encrypt sensitive data within the logs to protect it from unauthorized access. Use strong encryption standards like AES-256.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Secure Transmission&lt;/strong&gt;: Ensure logs are securely transmitted to the storage or monitoring systems using encryption, such as TLS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Regularly Review and Audit Logs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Routine Audits&lt;/strong&gt;: Conduct regular audits of the logs to check for any anomalies or indicators of security incidents.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automated Monitoring and Alerts&lt;/strong&gt;: Use automated tools to monitor the logs for suspicious activities and configure alerts for anomalies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Plan for Log Storage and Archiving&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scalable Storage Solution&lt;/strong&gt;: Ensure your log storage solution can scale with the volume of logs generated. Consider cloud storage options for flexibility and scalability.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Archiving Strategy&lt;/strong&gt;: Implement an archiving strategy for older logs that need to be retained but are not accessed frequently. Ensure archives are also protected and encrypted.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Compliance and Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Document Policies and Procedures&lt;/strong&gt;: Document your log retention and security policies, procedures, and configurations. This documentation is crucial for compliance audits and internal training.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Compliance Checks&lt;/strong&gt;: Regularly review your policies and practices against compliance standards relevant to your industry, such as GDPR, HIPAA, or PCI DSS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;References to Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;NIST (National Institute of Standards and Technology)&lt;/strong&gt;: Provides guidelines for log management, including retention, protection, and disposal.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;OWASP (Open Web Application Security Project)&lt;/strong&gt;: Offers insights into secure logging practices and how to protect log information.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By implementing these steps, you ensure the secure retention of detailed activity records, protecting them from unauthorized access, tampering, and loss. This not only helps in maintaining regulatory compliance but also strengthens your security posture by enabling effective incident response and analysis.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Secure Software Standard" url="https://www.pcisecuritystandards.org/documents/Secure-Software-Program-Guide-v1.pdf"/>
          </references>
          <standards>
            <standard ref="10.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="200" supportedStandardRef="cwe-standard"/>
            <standard ref="713-683" supportedStandardRef="OpenCRE"/>
            <standard ref="C9" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Logging Cheat Sheet.htmlhttps://cheatsheetseries.owasp.org/cheatsheets/Logging Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-ATHZ-03" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1053 - Data Backup"/>
            <customField ref="SF-C-SCOPE" value="Data Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V7.3.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DETAILED-LOGS" name="Logs should capture enough detail to describe what happened in a specific operation" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To ensure logs capture enough detail to describe what happened in a specific operation, particularly in sensitive environments like financial transactions, it's crucial to design and implement a logging strategy that balances thoroughness with privacy and performance considerations. Here's how to accomplish this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Define Log Levels:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Establish different log levels (e.g., DEBUG, INFO, WARN, ERROR, CRITICAL) to categorize the verbosity of log messages. This allows for more granular control over what is logged and when, optimizing storage and processing while ensuring critical information is always captured.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Determine Log Content:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Identify key data points that need to be logged to reconstruct events. For financial transactions, this may include transaction IDs, timestamps, user IDs, action types (e.g., transfer, deposit, withdrawal), amounts, and status codes. Avoid logging sensitive personal information (PII) or financial details (like full account numbers) in clear text.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Structured Logging:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Use structured logging formats (such as JSON) to make logs easier to search, analyze, and process. Structured logs should include consistent key-value pairs that describe each operation comprehensively.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Incorporate Contextual Information:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Include contextual information in logs to provide clarity on operations. This can involve user session data, IP addresses, device information, and the execution path within the application. Ensure that this practice complies with privacy laws and regulations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ensure Accuracy and Precision:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Synchronize system clocks and use high-resolution timestamps in logs to ensure that event sequences are accurately recorded and can be precisely reconstructed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Secure and Manage Log Access:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Protect log integrity and confidentiality by implementing strict access controls and encryption, both in transit and at rest. Ensure that only authorized personnel can access or modify logs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Regularly Review and Audit Logs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Schedule regular reviews and audits of logs to validate their effectiveness in capturing necessary details. This process can help identify gaps in log coverage and opportunities for optimization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Automate Log Analysis:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Employ log analysis tools to automatically detect anomalies, patterns, or signs of malicious activity within log data. Automated analysis can help surface relevant details buried in large volumes of log data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Retention and Rotation Policies:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define log retention policies based on regulatory requirements and operational needs. Implement log rotation to manage storage efficiently while ensuring that logs are retained long enough to be useful for investigations or audits.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compliance with Regulations:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure your logging practices comply with relevant legal, regulatory, and industry standards, such as GDPR, PCI DSS, and HIPAA. This includes capturing necessary operation details without violating privacy regulations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these guidelines, you can create a logging system that captures enough detail to describe what happened in specific operations, supporting both day-to-day management and post-incident investigations without compromising on security or privacy.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Secure Software Standard" url="https://www.pcisecuritystandards.org/documents/Secure-Software-Program-Guide-v1.pdf"/>
          </references>
          <standards>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.4.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.7.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="184-284" supportedStandardRef="OpenCRE"/>
            <standard ref="555-048" supportedStandardRef="OpenCRE"/>
            <standard ref="778" supportedStandardRef="cwe-standard"/>
            <standard ref="A3.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="C9" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Logging Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-CONF-02" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1036 - Account Use Policies"/>
            <customField ref="SF-C-SCOPE" value="Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V7.1.3||V7.1.4"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-RECORDS-INTEGRITY" name="Preserve the integrity of existing activity records by handling failures in activity-tracking mechanisms" issueId="" issueLink="" platform="" cost="2" risk="28" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Preserving the integrity of existing activity records, especially in the face of failures in activity-tracking mechanisms, is crucial for ensuring the reliability and trustworthiness of audit trails and logs. Here's a comprehensive approach to achieving this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Implement Redundant Logging Mechanisms&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Redundancy&lt;/strong&gt;: Deploy redundant logging systems or mechanisms to ensure that if one system fails, another continues to capture critical activity data without interruption.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Diverse Technologies&lt;/strong&gt;: Use different technologies or solutions for redundant logging to reduce the risk of simultaneous failure due to common vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Utilize Transactional Logging&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Atomic Operations&lt;/strong&gt;: Ensure that log entries are written in atomic operations so that either the entire log entry is written successfully, or it fails entirely without partial writes, to avoid corrupting the log files.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Write-Ahead Logging&lt;/strong&gt;: Implement a write-ahead logging mechanism where changes are first recorded in a log before they are applied, ensuring that transactions can be reconstructed in the event of a system failure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Regularly Monitor Health and Performance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Monitoring Systems&lt;/strong&gt;: Use monitoring tools to continuously check the health and performance of your activity-tracking mechanisms. Set up alerts for system errors, failures, or significant changes in logging behavior that could indicate issues.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Log Verification&lt;/strong&gt;: Regularly verify the integrity and consistency of log files to detect any signs of failure or tampering.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Employ Data Replication and Backup&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Replication&lt;/strong&gt;: Use data replication techniques to maintain copies of your activity records in different locations or systems, ensuring that if one set of logs is lost due to a system failure, copies remain accessible.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Backups&lt;/strong&gt;: Schedule regular backups of activity records, and ensure these backups are stored securely in a different physical or logical location from the primary logs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Ensure Fault Tolerance and High Availability&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Clustered or Distributed Systems&lt;/strong&gt;: Design your logging infrastructure with fault tolerance in mind, using clustered or distributed systems that can continue to operate even if individual components fail.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;High Availability Setup&lt;/strong&gt;: Implement a high availability setup for critical components of your activity-tracking system to minimize downtime and ensure continuous log collection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Failover Procedures&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Automated Failover&lt;/strong&gt;: Configure automated failover mechanisms to quickly switch to backup systems or redundant logging mechanisms without manual intervention in case of a failure.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Manual Intervention Plans&lt;/strong&gt;: Have a documented plan for manual intervention if automated failover does not work as expected, including steps for restoring service and securing data integrity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Test Failure Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Disaster Recovery Drills&lt;/strong&gt;: Regularly conduct disaster recovery drills and tests to ensure that your activity-tracking system can withstand failures and that procedures for preserving log integrity are effective.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Update and Refine&lt;/strong&gt;: Use insights from these tests to refine and update your failure handling procedures, ensuring they remain effective against evolving threats and technologies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Audit and Compliance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Audit Trails for Failures&lt;/strong&gt;: Maintain detailed audit trails of any failures and the actions taken to address them, ensuring accountability and providing a clear record for compliance purposes.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Compliance with Standards&lt;/strong&gt;: Ensure that your approach to handling failures in activity-tracking mechanisms complies with relevant standards and regulations, such as ISO/IEC 27001 for information security management.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing these strategies will help preserve the integrity of existing activity records against failures, ensuring that your organization maintains a reliable and trustworthy system for activity tracking.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Secure Software Standard" url="https://www.pcisecuritystandards.org/documents/Secure-Software-Program-Guide-v1.pdf"/>
          </references>
          <standards>
            <standard ref="048-612" supportedStandardRef="OpenCRE"/>
            <standard ref="10.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="117" supportedStandardRef="cwe-standard"/>
            <standard ref="200" supportedStandardRef="cwe-standard"/>
            <standard ref="713-683" supportedStandardRef="OpenCRE"/>
            <standard ref="C9" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Logging Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Logging Cheat Sheet.htmlhttps://cheatsheetseries.owasp.org/cheatsheets/Logging Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-ATHZ-03" supportedStandardRef="owasp-wstg"/>
            <standard ref="WSTG-BUSL-03" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1036 - Account Use Policies||ATT&amp;CK Enterprise - M1045 - Code Signing||ATT&amp;CK Enterprise - M1047 - Audit"/>
            <customField ref="SF-C-SCOPE" value="Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V7.3.1||V7.3.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SESS-REAUTH" name="Require additional authentication for sensitive operations / high value transactions" issueId="" issueLink="" platform="" cost="1" risk="27" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;o enhance the security of financial transaction systems by requiring additional authentication for sensitive operations or high-value transactions, follow these actionable and technically oriented steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Identify Sensitive Operations and High-Value Transaction Thresholds:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Start by categorizing which operations are considered sensitive (e.g., wire transfers, changes to account information) and determining what transaction values warrant additional authentication. This classification should be based on risk assessments and regulatory requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Define Additional Authentication Methods:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Choose robust authentication methods that can be used for additional verification. Common options include: 
  &lt;ul&gt;
   &lt;li&gt;One-Time Passwords (OTPs) sent via SMS or email, though SMS is less secure due to SIM swapping risks.&lt;/li&gt;
   &lt;li&gt;Authentication apps generating TOTP (Time-based One-Time Passwords).&lt;/li&gt;
   &lt;li&gt;Biometric authentication, such as fingerprint or facial recognition, where hardware supports it.&lt;/li&gt;
   &lt;li&gt;Hardware tokens that generate a secure login code.&lt;/li&gt;
   &lt;li&gt;Push notifications to a trusted device that the user can approve or deny.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Multi-Factor Authentication (MFA):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement an MFA solution that requires at least two of the following: something the user knows (password), something the user has (security token, mobile app), and something the user is (biometric identification).&lt;/li&gt;
 &lt;li&gt;Ensure the MFA solution integrates seamlessly with your existing authentication system for a smooth user experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Develop Contextual Authentication Flows:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Create authentication flows that trigger additional authentication steps based on the context of the transaction. Factors can include transaction amount, the geographic location of the user, device being used, and transaction frequency.&lt;/li&gt;
 &lt;li&gt;Utilize risk-based authentication techniques to dynamically adjust the authentication requirements based on the assessed risk of the transaction.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enforce Additional Authentication at the Application Layer:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Modify your application's authentication logic to recognize situations where additional authentication is required. Ensure the system can invoke the secondary authentication mechanism when these conditions are met.&lt;/li&gt;
 &lt;li&gt;Implement clear user prompts and instructions for completing additional authentication steps, ensuring a good user experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Test and Validate Implementation:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Conduct thorough testing to ensure that additional authentication mechanisms are invoked correctly under the defined conditions. Include tests for both expected and unexpected user behavior.&lt;/li&gt;
 &lt;li&gt;Validate that the system gracefully handles failures or user errors during the additional authentication process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate Users:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Inform users about the new security features and why they're necessary. Provide guidance on how to use the additional authentication methods, emphasizing the benefits of enhanced security for their transactions.&lt;/li&gt;
 &lt;li&gt;Offer support channels for users who encounter issues with the new authentication steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Monitor and Audit:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continuously monitor the performance and effectiveness of the additional authentication mechanisms. Look for patterns that might indicate usability issues or attempts to bypass security.&lt;/li&gt;
 &lt;li&gt;Regularly audit system logs to ensure that additional authentication steps are functioning as intended and to verify compliance with security policies and regulations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Review and Adjust Policies Regularly:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Regularly review and update your authentication policies based on new security trends, user feedback, and evolving threats. Be prepared to adjust thresholds for high-value transactions and sensitive operations as needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By requiring additional authentication for sensitive operations and high-value transactions, you significantly enhance the security of financial transactions against unauthorized access and fraud, building trust with your users while complying with regulatory standards.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
          </references>
          <standards>
            <standard ref="284-521" supportedStandardRef="OpenCRE"/>
            <standard ref="306" supportedStandardRef="cwe-standard"/>
            <standard ref="582-541" supportedStandardRef="OpenCRE"/>
            <standard ref="732" supportedStandardRef="cwe-standard"/>
            <standard ref="8.2.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="REST Assessment Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Session Management Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Transaction Authorization Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V3.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-SESS-01" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1032 - Multi-factor Authentication"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V4.3.3||V3.7.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ADM-TRUST" name="Restrict access to administrative interfaces" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restricting access to administrative interfaces is crucial for securing sensitive areas of your application from unauthorized access and potential misuse. Here's a step-by-step guide on how to effectively implement this security measure:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Define Access Control Policies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Identify Roles and Responsibilities&lt;/strong&gt;: Clearly define roles within your organization and assign specific permissions and access levels based on the principle of least privilege. Only users who need access to perform their job should have it.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Access Control Lists (ACLs)&lt;/strong&gt;: Create Access Control Lists that specify which roles or users have access to the administrative interfaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Implement Strong Authentication Mechanisms&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Multi-Factor Authentication (MFA)&lt;/strong&gt;: Enforce MFA for all users accessing the administrative interfaces to add an extra layer of security beyond just usernames and passwords.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Complex Password Policies&lt;/strong&gt;: Implement and enforce policies that require complex passwords, including a mix of uppercase and lowercase letters, numbers, and special characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Use Secure Connection Protocols&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;HTTPS&lt;/strong&gt;: Ensure that connections to administrative interfaces are always secured using HTTPS to protect data in transit from being intercepted.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;VPN Access&lt;/strong&gt;: Require the use of Virtual Private Networks (VPNs) for accessing administrative interfaces, especially when accessing from outside the organization's internal network, to provide a secure connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Limit Access by IP Address&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Whitelisting&lt;/strong&gt;: Implement IP whitelisting to allow access to the administrative interfaces only from trusted IP addresses, such as those within your corporate network.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Geofencing&lt;/strong&gt;: Consider using geofencing to restrict access to users within certain geographical locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Session Management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Timeouts&lt;/strong&gt;: Implement automatic session timeouts for administrative interfaces to reduce the risk of sessions being hijacked if left unattended.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Session Tracking&lt;/strong&gt;: Track active sessions and provide the ability to terminate any session as needed for security reasons.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Audit and Monitor Access&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;: Ensure that all access attempts and actions performed within the administrative interfaces are logged with sufficient detail, including user identifiers, timestamps, and the nature of the action.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Audits&lt;/strong&gt;: Conduct regular audits of the access logs to identify any unusual or unauthorized access patterns.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Regularly Update and Patch&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Software Updates&lt;/strong&gt;: Keep all software related to the administrative interfaces, such as content management systems or server software, up to date with the latest security patches and updates.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Security Scans&lt;/strong&gt;: Regularly perform security scans and penetration testing on the administrative interfaces to identify and remediate vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Educate and Train Administrators&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Security Training&lt;/strong&gt;: Provide regular security awareness training to administrators, focusing on the risks associated with administrative interfaces and best practices for secure management.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Incident Response&lt;/strong&gt;: Train administrators on the proper incident response procedures in case of a suspected breach or unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;9. Use Role-Based Access Control (RBAC)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;RBAC Implementation&lt;/strong&gt;: Implement Role-Based Access Control to ensure that users are granted access only to the resources necessary for their roles. This minimizes the risk of unauthorized access to sensitive functions and data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, you can significantly enhance the security of your administrative interfaces, protecting them from unauthorized access and potential security breaches. Remember, the goal is to make these interfaces as secure and as private as possible while ensuring that authorized users can perform their tasks efficiently.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
          </references>
          <standards>
            <standard ref="201-246" supportedStandardRef="OpenCRE"/>
            <standard ref="419" supportedStandardRef="cwe-standard"/>
            <standard ref="REST Assessment Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V4.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1036 - Account Use Policies||ATT&amp;CK Enterprise - M1035 - Limit Access to Resource Over Network||ATT&amp;CK Enterprise - M1022 - Restrict File and Directory Permissions"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V4.3.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-MFA" name="Use multi-factor (MFA) or two-factor (2FA) authentication" issueId="" issueLink="" platform="" cost="1" risk="27" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing Multi-Factor Authentication (MFA) or Two-Factor Authentication (2FA) is a critical security measure to protect access to systems and data, especially in environments handling sensitive information like financial transactions. Here's how to do it:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Evaluate Authentication Needs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Assess your system's security requirements to determine if MFA or 2FA is more suitable. MFA requires two or more verification factors, while 2FA requires exactly two. Consider MFA for higher security needs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Select Authentication Factors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Choose from the three main types of authentication factors: 
  &lt;ul&gt;
   &lt;li&gt;&lt;strong&gt;Something the user knows&lt;/strong&gt; (e.g., passwords, PINs).&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Something the user has&lt;/strong&gt; (e.g., security tokens, mobile devices).&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Something the user is&lt;/strong&gt; (biometric verification like fingerprints or facial recognition).&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;Ensure chosen factors are diverse (e.g., not using two knowledge-based factors for 2FA).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Choose an MFA/2FA Solution:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Select an MFA/2FA solution that integrates well with your existing systems and meets your security requirements. Popular options include Google Authenticator, Authy, Duo Security, and hardware tokens like YubiKey.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement the MFA/2FA System:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Integrate the chosen MFA/2FA solution into your authentication system. This might involve SDKs or APIs provided by the MFA/2FA solution vendor.&lt;/li&gt;
 &lt;li&gt;Ensure the solution works across all necessary access points, including web interfaces, mobile applications, and VPN access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Design User Registration for MFA/2FA:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Create a user-friendly registration process for setting up MFA/2FA. This may involve scanning a QR code with an app, registering a phone number for SMS verification, or enrolling biometric data.&lt;/li&gt;
 &lt;li&gt;Provide clear instructions and support for users during the setup process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enforce MFA/2FA for Access:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Enforce MFA/2FA at login and, optionally, for performing sensitive operations within the system. Ensure the enforcement mechanism is robust and does not allow bypass.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Backup and Recovery Mechanisms:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Provide methods for users to recover access if they lose their second factor (e.g., backup codes, alternative verification methods). Ensure these mechanisms are secure to prevent exploitation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate Users About MFA/2FA:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Conduct training sessions and provide documentation to educate users about the importance of MFA/2FA and how to use it effectively. Highlight the role of MFA/2FA in protecting against unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Monitor and Audit MFA/2FA Usage:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Regularly monitor and audit the usage of MFA/2FA in your system to ensure it is working as expected. Look for any unusual patterns or failed authentication attempts that might indicate an attack.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Review and Update Security Policies:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continuously review and update your security policies and MFA/2FA settings to adapt to new threats and technological advancements. Adjust the MFA/2FA requirements as necessary to maintain a balance between security and usability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By carefully implementing MFA or 2FA, you can significantly enhance the security of your financial transaction system, protecting both user data and the integrity of the system against a wide range of threats.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="076-470" supportedStandardRef="OpenCRE"/>
            <standard ref="308" supportedStandardRef="cwe-standard"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="525-361" supportedStandardRef="OpenCRE"/>
            <standard ref="553-413" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="8.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="Authentication Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="TLS Cipher String Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Transport Layer Protection Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="V2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1032 - Multi-factor Authentication"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V2.8.7||V2.3.2||V2.2.7"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DDOS-PROTECTION" name="Use of a DDoS protection service for Payment System" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty@iriusrisk.com" library="financial-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing a DDoS (Distributed Denial of Service) protection service for your Payment System is critical in safeguarding your infrastructure from attacks designed to overwhelm it with traffic, potentially disrupting payment processing and affecting revenue and reputation. Here's a strategic approach to integrating a DDoS protection service:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Assess Your Risk and Needs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Understand Your Vulnerabilities&lt;/strong&gt;: Assess your payment system's infrastructure to understand potential vulnerabilities to DDoS attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Determine Protection Levels&lt;/strong&gt;: Based on your assessment, decide on the level of protection needed. Consider the size of your business, transaction volume, and the potential impact of downtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Choose a Reputable DDoS Protection Service&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Research Providers&lt;/strong&gt;: Look for DDoS protection services with a strong reputation and proven track record in protecting payment systems. Evaluate their mitigation capacity, response time, and the sophistication of their detection algorithms.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Consider Service Features&lt;/strong&gt;: Choose a service that offers comprehensive protection features, including high-capacity network bandwidth, behavioral analysis for anomaly detection, and real-time traffic monitoring.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Implement the DDoS Protection Service&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt;: Work closely with the DDoS protection provider to integrate their service with your payment system. This may involve changes to your DNS settings, deploying hardware or software-based solutions, or rerouting traffic through the provider's scrubbing centers.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Configuration&lt;/strong&gt;: Configure the protection service according to your specific requirements. Set thresholds for automatic mitigation and customize rules based on typical traffic patterns and behaviors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Test the Implementation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Simulate Attacks&lt;/strong&gt;: With the help of your DDoS protection provider, simulate various DDoS attack scenarios to test the resilience of your payment system and the effectiveness of the mitigation strategies.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Adjust Settings&lt;/strong&gt;: Based on the test results, fine-tune the configuration settings of your DDoS protection service to ensure optimal protection without affecting legitimate traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Monitor and Review&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Continuous Monitoring&lt;/strong&gt;: Utilize the DDoS protection service’s dashboard and alerts to monitor traffic and potential threats in real-time. Keep an eye on performance metrics and logs.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Reviews&lt;/strong&gt;: Schedule regular reviews of your DDoS protection measures to ensure they remain effective against evolving attack vectors. Update your protection strategies as needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Educate Your Team&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Training&lt;/strong&gt;: Ensure that your IT and security teams are trained in identifying the early signs of DDoS attacks and are familiar with the response procedures.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Incident Response Plan&lt;/strong&gt;: Develop a clear incident response plan that includes steps to take during and after a DDoS attack. Ensure that this plan integrates seamlessly with your DDoS protection service’s capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Ensure Compliance and Data Security&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Compliance&lt;/strong&gt;: Verify that the DDoS protection service complies with industry standards and regulations relevant to your payment system, such as PCI DSS.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Security&lt;/strong&gt;: Ensure that the implementation of DDoS protection measures does not compromise data security. Confirm that encrypted traffic remains secure and that customer data is protected.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Communicate with Stakeholders&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Inform Customers&lt;/strong&gt;: Let your customers know about the measures you are taking to protect your payment system against DDoS attacks. This can help build trust and reassure them of the reliability and security of your services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, you can significantly enhance the resilience of your payment system against DDoS attacks, ensuring uninterrupted service and maintaining customer trust and satisfaction.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Advanced DDoS Mitigation Techniques" url="https://www.nist.gov/programs-projects/advanced-ddos-mitigation-techniques"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="623-550" supportedStandardRef="OpenCRE"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-5 DENIAL-OF-SERVICE PROTECTION" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1037 - Filter Network Traffic||ATT&amp;CK Enterprise - M1035 - Limit Access to Resource Over Network||ATT&amp;CK Enterprise - M1048 - Application Isolation and Sandboxing"/>
            <customField ref="SF-C-SCOPE" value="Network Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-5 DENIAL-OF-SERVICE PROTECTION"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-DENIAL-OF-SERVICE" name="Denial of Service" desc="Denial of Service attacks aim to disrupt the availability of services or resources to legitimate users. Attackers overwhelm systems with excessive traffic or requests, causing them to become unresponsive or unavailable to users." library="financial-services-components">
          <threats>
            <threat ref="T-DOS-ATTACK" name="Attackers perform a Denial of Service (DoS)" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="financial-services-components" editable="true">
              <desc>&lt;p&gt;A Denial of Service (DoS) attack targets a financial transaction system with the primary goal of disrupting its services, rendering it unavailable to legitimate users. This is achieved by overwhelming the system with a flood of unnecessary requests, which consumes the system's resources to the point where it can no longer process legitimate requests. DoS attacks can be particularly damaging to financial services, as they rely on availability for timely transactions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The threat agents behind DoS attacks range from individual hackers to organized crime groups and, in some cases, state-sponsored actors. The attack vectors are diverse, including but not limited to, direct network flooding, exploitation of software vulnerabilities to cause system crashes, and amplification attacks that use the normal functionality of third-party networks to generate massive amounts of traffic.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Service Disruption&lt;/strong&gt;: The primary impact is the disruption of service, preventing users from carrying out transactions, which can lead to financial losses for both the service provider and the users.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Resource Exhaustion&lt;/strong&gt;: Significant resources are required to mitigate and recover from the attack, including hardware, software, and human resources.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage&lt;/strong&gt;: Repeated or high-profile attacks can lead to a loss of trust in the financial service provider by its customers.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss&lt;/strong&gt;: Beyond the direct impact on transactions, there can be financial losses associated with customer compensation, increased security measures, and potential legal liabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker might target a financial institution's online banking service, using a network of compromised computers (botnet) to flood the login page with more requests than the server can handle. This would prevent legitimate users from accessing their accounts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: In a more sophisticated amplification attack, an attacker could exploit vulnerabilities in the network's infrastructure to multiply the traffic sent to the financial transaction system exponentially. For example, by sending small queries to a third-party service that replies with much larger responses to the victim's system, significantly amplifying the volume of traffic.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: An attacker targets the API endpoints used for mobile transactions, sending high volumes of fake transaction requests that exhaust the server resources, leading to service unavailability for legitimate mobile banking users.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mitigating these attacks requires a multi-layered approach, including robust network infrastructure, traffic analysis and filtering, and emergency response plans. Collaboration with ISPs and cloud service providers for traffic scrubbing and DDoS protection services is also crucial in defending against large-scale DoS attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="C-DDOS-PROTECTION" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-DDOS-PROTECTION" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1498 - Network Denial of Service||ATT&amp;CK Enterprise - T1499 - Endpoint Denial of Service"/>
                <customField ref="SF-T-STRIDE-LM" value="Denial of Service"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-REPUDIATION" name="Repudiation" desc="Repudiation involves denying an action or event that has taken place. In a security context, repudiation threats can occur when a user denies performing a specific action, such as denying sending a message or making a transaction." library="financial-services-components">
          <threats>
            <threat ref="T-UNAUTHORIZED-ACCESS-SYSTEMS" name="Attackers access the systems without being detected" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="financial-services-components" editable="true">
              <desc>&lt;p&gt;This threat involves attackers gaining unauthorized access to financial transaction systems without being detected by the security mechanisms in place. It often exploits vulnerabilities in software, networks, or system configurations. Once inside, attackers can monitor, manipulate, or steal sensitive financial data, disrupt operations, or implant malware for long-term access. This type of threat is particularly concerning due to the stealth aspect, allowing attackers to remain within the system undetected for extended periods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Cybercriminals and Fraudsters:&lt;/strong&gt; Individuals or groups motivated by financial gain, using sophisticated methods to bypass security measures.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Insider Threats:&lt;/strong&gt; Employees or contractors who exploit their access to the system for malicious purposes or unintentionally provide access through negligence.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Phishing Attacks:&lt;/strong&gt; Deceptive communications designed to trick employees into divulging credentials or installing malware.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Exploitation of Vulnerabilities:&lt;/strong&gt; Utilizing known or zero-day vulnerabilities within software, hardware, or network configurations to gain unauthorized access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Advanced Persistent Threats (APTs):&lt;/strong&gt; State-sponsored or highly organized crime groups using advanced techniques for espionage or financial theft.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss:&lt;/strong&gt; Direct theft of funds, manipulation of financial transactions, or extortion through ransomware.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach:&lt;/strong&gt; Unauthorized access to sensitive customer data, leading to identity theft and regulatory fines.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage:&lt;/strong&gt; Loss of customer trust and confidence, negatively impacting the business long-term.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Operational Disruption:&lt;/strong&gt; Hindrance or complete halt of financial operations, affecting the business’s ability to function.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Compliance Violations:&lt;/strong&gt; Non-compliance with financial regulations and standards, resulting in legal penalties and fines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Credential Stuffing:&lt;/strong&gt; Attackers use previously breached username-password pairs to gain unauthorized access to financial systems. By exploiting individuals' tendency to reuse passwords, attackers attempt access on multiple platforms until successful, all without triggering security alerts due to the legitimate appearance of their login attempts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zero-Day Exploit:&lt;/strong&gt; Attackers discover a previously unknown vulnerability in the transaction system’s software and develop a code to exploit it. They gain unauthorized access and maintain a low profile to avoid detection, siphoning off sensitive data over time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Insider Threat:&lt;/strong&gt; A disgruntled employee with access to the financial transaction system intentionally bypasses internal controls to divert funds into an external account. The actions are disguised as regular transactions, making detection difficult.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supply Chain Attack:&lt;/strong&gt; Through compromising a third-party vendor with weaker security controls, attackers gain access to the financial institution's network. This indirect approach allows them to bypass the institution’s primary defenses and access the transaction system undetected.&lt;/p&gt;
&lt;p&gt;To mitigate such threats, financial institutions must implement a multi-layered security approach that includes regular vulnerability assessments, robust detection and response systems, employee training on security awareness, strict access controls, and continuous monitoring of network activity.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-639">
                  <countermeasures>
                    <countermeasure ref="C-DETECTION-MECHANISMS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-DETECTION-MECHANISMS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1040 - Network Sniffing||ATT&amp;CK Enterprise - T1212 - Exploitation for Credential Access"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing||Repudiation"/>
              </customFields>
            </threat>
            <threat ref="T-INSUFFICIENT-LOGGING" name="Attackers rely on the lack of monitoring and timely response" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="financial-services-components" editable="true">
              <desc>&lt;p&gt;The threat emerges from attackers exploiting the absence or insufficiency of real-time monitoring and timely response mechanisms in financial transaction systems. Without adequate monitoring, malicious activities can go undetected, and without prompt responses, these activities can cause significant damage. This vulnerability allows attackers to carry out fraudulent transactions, data theft, or other malicious activities with a lower risk of detection and intervention.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents&lt;/strong&gt;: Include cybercriminals targeting financial gain, insider threats seeking to exploit their access, or competitors aiming to sabotage.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors&lt;/strong&gt;: These can range from sophisticated malware that siphons off data stealthily, to manual intrusion attempts that exploit known vulnerabilities or social engineering tactics to gain unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss&lt;/strong&gt;: Unauthorized transactions or theft can lead to direct financial losses.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach&lt;/strong&gt;: Sensitive customer information can be stolen, leading to further financial fraud or identity theft.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regulatory Penalties&lt;/strong&gt;: Failure to detect and respond to incidents promptly can result in violations of financial regulations, leading to fines and legal action.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage&lt;/strong&gt;: The perceived lack of security can erode customer trust and confidence, potentially resulting in a loss of business.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker exploits a vulnerability in the transaction system to insert a backdoor. Due to inadequate monitoring, the intrusion goes unnoticed, allowing the attacker to manipulate transaction data and divert funds.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: Through phishing, attackers gain access to an employee's credentials and perform unauthorized transactions. The lack of real-time monitoring delays the detection, enabling the attackers to withdraw or transfer substantial amounts of money.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: Malware is introduced into the system, slowly exfiltrating sensitive customer data. The malware's activities blend in with normal network traffic, and without proper monitoring tools, the breach remains undetected for an extended period, causing widespread data leakage and financial fraud.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Addressing this threat requires implementing comprehensive monitoring solutions capable of detecting unusual activities or transactions in real-time. This should be complemented by an incident response plan that outlines clear procedures for responding to detected threats swiftly, minimizing potential damage and ensuring regulatory compliance. Training for staff to recognize and respond to security incidents promptly is also crucial.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="25"/>
              <references>
                <reference name="Coders Conquer Security OWASP Top 10 API Series - Insufficient Logging and Monitoring" url="https://www.securecodewarrior.com/article/coders-conquer-security-owasp-top-10-api-series-insufficient-logging-and-monitoring"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-639">
                  <countermeasures>
                    <countermeasure ref="C-ACTIVITY-RECORDS" mitigation="25"/>
                    <countermeasure ref="C-DETAILED-LOGS" mitigation="25"/>
                    <countermeasure ref="C-RECORDS-INTEGRITY" mitigation="25"/>
                    <countermeasure ref="C-TRACEABLE-CRITICAL-ASSETS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ACTIVITY-RECORDS" mitigation="25"/>
                <countermeasure ref="C-DETAILED-LOGS" mitigation="25"/>
                <countermeasure ref="C-RECORDS-INTEGRITY" mitigation="25"/>
                <countermeasure ref="C-TRACEABLE-CRITICAL-ASSETS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1490 - Inhibit System Recovery||ATT&amp;CK Enterprise - TA0005 - Defense Evasion||ATT&amp;CK Enterprise - T1562.011 - Spoof Security Alerting"/>
                <customField ref="SF-T-STRIDE-LM" value="Repudiation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-SPOOFING" name="Spoofing" desc="Spoofing involves an attacker pretending to be someone else by falsifying data or identity. This can include spoofing email addresses, IP addresses, or user identities to gain unauthorized access to systems or information." library="financial-services-components">
          <threats>
            <threat ref="T-ACCOUNT-TAKEOVER" name="Attackers gain unauthorized access to user accounts and make fraudulent transactions" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="financial-services-components" editable="true">
              <desc>&lt;p&gt;This threat involves attackers gaining unauthorized access to user accounts within financial systems to execute fraudulent transactions. It typically occurs when attackers compromise account credentials through various means, such as phishing, malware, or exploiting system vulnerabilities. Once inside an account, they can transfer funds, make unauthorized purchases, or steal sensitive financial information. This threat not only leads to direct financial loss for the users affected but also undermines the integrity and trust in the financial institution's security measures.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Phishing and Social Engineering:&lt;/strong&gt; Attackers deceive users into providing their login credentials through fake emails, messages, or websites that mimic legitimate financial institutions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Stuffing:&lt;/strong&gt; Utilizing breached username-password pairs from other services to access accounts, banking on the reuse of passwords across platforms.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Malware and Spyware:&lt;/strong&gt; Software specifically designed to infect users’ devices, capturing keystrokes (keyloggers) or directly accessing stored credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;SIM Swapping:&lt;/strong&gt; Attackers trick mobile carriers into transferring a victim’s phone number to their control, enabling them to intercept two-factor authentication (2FA) codes.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Public Wi-Fi Snooping:&lt;/strong&gt; Intercepting data transmitted over unsecured public Wi-Fi networks to capture login credentials.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Direct Financial Loss:&lt;/strong&gt; Unauthorized transactions can lead to significant financial loss for both the users and the financial institution, including the cost of reimbursing affected customers.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Loss of Customer Trust:&lt;/strong&gt; Users may lose trust in the financial institution’s ability to protect their assets, leading to a loss of business.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regulatory Fines and Legal Action:&lt;/strong&gt; Failure to protect user accounts can result in violations of financial regulations and privacy laws, leading to hefty fines and legal challenges.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage:&lt;/strong&gt; Negative publicity surrounding a security breach can have long-term effects on the institution's reputation and customer loyalty.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Phishing Campaign:&lt;/strong&gt; An attacker sends an email to users pretending to be from their bank, asking them to update their security details via a link. The link redirects to a fraudulent website that looks identical to the bank’s official site. Users enter their credentials, which are then captured by the attackers, allowing them to access the users’ real accounts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Credential Stuffing Attack:&lt;/strong&gt; After obtaining a database of usernames and passwords from a breached website, attackers use automated tools to attempt logins on a variety of financial platforms. They gain access to several accounts where users have reused their passwords and proceed to make unauthorized transactions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SIM Swap Fraud:&lt;/strong&gt; An attacker gathers enough personal information about a victim to convince a mobile phone carrier to switch the victim’s phone number to a SIM card in the attacker's possession. Once the phone number is hijacked, the attacker receives all messages and calls, including those containing 2FA codes for banking transactions, which they use to access and drain the victim’s accounts.&lt;/p&gt;
&lt;p&gt;To combat these threats, financial institutions should implement strong, multi-factor authentication methods, educate users about the risks of phishing and credential reuse, employ advanced fraud detection systems that monitor for unusual account activity, and maintain robust incident response plans to mitigate impacts swiftly in the event of a breach.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references>
                <reference name="OWASP OAT-008 Credential Stuffing" url="https://owasp.org/www-project-automated-threats-to-web-applications/assets/oats/EN/OAT-008_Credential_Stuffing"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-306 CWE-285">
                  <countermeasures>
                    <countermeasure ref="C-ACCESS-CONTROL-SYSTEM" mitigation="25"/>
                    <countermeasure ref="C-ADM-TRUST" mitigation="25"/>
                    <countermeasure ref="C-SECURE-AUTH" mitigation="25"/>
                    <countermeasure ref="C-SERVER-SIDE-VALIDATION" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ACCESS-CONTROL-SYSTEM" mitigation="25"/>
                <countermeasure ref="C-ADM-TRUST" mitigation="25"/>
                <countermeasure ref="C-SECURE-AUTH" mitigation="25"/>
                <countermeasure ref="C-SERVER-SIDE-VALIDATION" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - TA0001 - Initial Access||ATT&amp;CK Enterprise - T1098 - Account Manipulation||ATT&amp;CK Enterprise - T1087 - Account Discovery"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
            <threat ref="T-INSIDER-FRAUD" name="Malicious actions by employees or insiders manipulate transactions" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="financial-services-components" editable="true">
              <desc>&lt;p&gt;This threat involves employees or insiders within a financial institution who exploit their access to systems, data, or knowledge of internal processes to manipulate transactions for personal gain, commit fraud, or cause harm to the organization. Insiders may alter, fabricate, delete, or misuse financial records and transactions, often leveraging their privileged access and understanding of the institution's controls and weaknesses. This insider threat is particularly challenging to detect and prevent because it originates from within the organization, bypassing external security measures designed to ward off external attackers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Disgruntled Employees:&lt;/strong&gt; Individuals who may feel wronged by the company and seek revenge or compensation through malicious activities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Financially Motivated Insiders:&lt;/strong&gt; Employees who, driven by personal financial problems or greed, decide to commit fraud.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Unintentional Insiders:&lt;/strong&gt; Employees who, without malicious intent, accidentally manipulate transactions due to error or negligence.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Third-party Vendors and Contractors:&lt;/strong&gt; External parties with inside access who may exploit their positions to manipulate transactions or data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss:&lt;/strong&gt; Direct loss from manipulated transactions, including unauthorized fund transfers, fraudulent claims, or theft of financial assets.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Loss of Integrity and Trust:&lt;/strong&gt; Damage to the integrity of financial records and loss of trust from customers, investors, and regulatory bodies.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Legal and Regulatory Consequences:&lt;/strong&gt; Non-compliance with financial regulations, leading to investigations, fines, and legal action.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage:&lt;/strong&gt; Negative publicity and loss of reputation, potentially resulting in lost business and decreased stakeholder confidence.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fraudulent Wire Transfers:&lt;/strong&gt; An employee in the finance department manipulates transaction records to divert customer payments to a personal account, covering their tracks by altering digital logs to match the legitimate account flow.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Manipulation of Financial Data:&lt;/strong&gt; An insider with access to the transaction processing system inserts fraudulent transactions or alters existing ones to benefit personally, such as by embezzling funds or inflating sales figures to achieve bonuses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Collusion with External Fraudsters:&lt;/strong&gt; An employee colludes with external parties to provide them with unauthorized access to customer accounts or sensitive information, facilitating external fraud or theft.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Countermeasures&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement Least Privilege Access:&lt;/strong&gt; Ensure that employees have only the minimum level of access necessary to perform their job functions, reducing the potential for abuse.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Segregation of Duties:&lt;/strong&gt; Separate responsibilities among different employees or departments to prevent any single individual from having the ability to both initiate and approve significant transactions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Audits and Monitoring:&lt;/strong&gt; Conduct regular audits of financial transactions and system access logs to detect anomalies or irregularities indicative of manipulation. Use automated monitoring tools to track unusual activities in real-time.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Employee Background Checks:&lt;/strong&gt; Perform thorough background checks on all employees, especially those who will have access to sensitive financial systems and data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Security Awareness and Training:&lt;/strong&gt; Educate employees about the risks of insider threats, the importance of safeguarding financial data, and the consequences of fraudulent activities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Incident Response Plan:&lt;/strong&gt; Develop and maintain an incident response plan specifically addressing insider threats, ensuring a swift and coordinated response to minimize damage.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Whistleblower Policies:&lt;/strong&gt; Establish secure and anonymous channels for employees to report suspicious activities without fear of retaliation, encouraging internal reporting of potential insider threats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mitigating malicious insider threats requires a combination of technical controls, procedural safeguards, and a culture of security awareness and ethics within the organization. By recognizing the potential for insider threats and implementing these countermeasures, financial institutions can better protect themselves against the risks posed by malicious insiders.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references>
                <reference name="Insider Fraud in Financial Services" url="https://resources.sei.cmu.edu/asset_files/WhitePaper/2012_019_001_887049.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-285">
                  <countermeasures>
                    <countermeasure ref="C-BU-LIMITS" mitigation="34"/>
                    <countermeasure ref="C-MFA" mitigation="33"/>
                    <countermeasure ref="C-SESS-REAUTH" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-BU-LIMITS" mitigation="34"/>
                <countermeasure ref="C-MFA" mitigation="33"/>
                <countermeasure ref="C-SESS-REAUTH" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1565 - Data Manipulation||ATT&amp;CK Enterprise - T1078 - Valid Accounts||ATT&amp;CK Enterprise - T1005 - Data from Local System||ATT&amp;CK Enterprise - TA0006 - Credential Access"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
            <threat ref="T-SENSITIVE-INFO-LEAK" name="Attackers reveal sensitive information by impersonating a legitimate source" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="financial-services-components" editable="true">
              <desc>&lt;p&gt;This threat involves attackers masquerading as a legitimate source, such as a financial institution or service provider, to trick individuals or systems into disclosing sensitive information. Commonly referred to as phishing or spear-phishing when targeted, these attacks exploit trust to gain access to confidential data such as login credentials, financial information, or personal identification details. In the context of financial transactions, this can lead to unauthorized access to accounts, fraudulent transactions, or identity theft.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents&lt;/strong&gt;: Typically, these are cybercriminals or fraudsters seeking financial gain, but they can also include insiders or competitors aiming for sabotage.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors&lt;/strong&gt;: Email is the most common medium, but attackers also use phone calls (vishing), text messages (smishing), and social media. They create messages and websites that mimic those of reputable entities, complete with logos and branding, to appear legitimate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss&lt;/strong&gt;: Direct loss from fraudulent transactions or indirectly through the sale of stolen data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Identity Theft&lt;/strong&gt;: Unauthorized use of personal information can lead to credit fraud and other forms of identity theft.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage&lt;/strong&gt;: Loss of customer trust and confidence in the financial institution’s ability to secure their information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regulatory Penalties&lt;/strong&gt;: Non-compliance with data protection regulations can lead to fines and sanctions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker sends an email to customers of a bank, claiming that their accounts have been compromised and directing them to a fake website to verify their identity. The website captures their login information, which the attacker then uses to access the real accounts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: A targeted attack (spear-phishing) on a company’s finance department, where an email purportedly from the CEO requests an urgent wire transfer to a fraudulent account.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: An attacker impersonates a customer support agent from a financial service provider, contacting customers via phone or text, asking them to confirm their account details for a supposed security check, thereby collecting sensitive information.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mitigating this threat involves a combination of technical measures and user education. Technical measures include email filtering to block known phishing domains, using web and email content scanning to detect phishing attempts, and implementing multi-factor authentication (MFA) to reduce the impact of compromised credentials. Education should focus on raising awareness about the nature of phishing attacks and training users to recognize and report suspected phishing attempts. Encouraging a culture of verification, where unsolicited requests for sensitive information are met with scrutiny, is also key.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-451">
                  <countermeasures>
                    <countermeasure ref="C-ANTI-PHISHING-MEASURES" mitigation="50"/>
                    <countermeasure ref="C-USER-CONTROLLABLE-DATA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ANTI-PHISHING-MEASURES" mitigation="50"/>
                <countermeasure ref="C-USER-CONTROLLABLE-DATA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1566 - Phishing||ATT&amp;CK Enterprise - T1036 - Masquerading||ATT&amp;CK Enterprise - T1566.001 - Spearphishing Attachment"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="19fe9b3e-bc00-4aee-8a96-bb2a0c565988" diagramComponentId="dfc950ae-fbb2-4035-a6ea-e5645fa117f4" ref="a6e58cea-0ded-434f-8643-91730ecfc9ca" name="Login" desc="" library="functional-components" parentComponentRef="13a37286-a00d-4b30-956c-a1b4b032a40c" componentDefinitionRef="CD-V2-LOGIN">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1047" name="CWE-1047" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-1047: Modules with Circular Dependencies
The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.626">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-308" name="CWE-308" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-308: Use of Single-factor Authentication
The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.
While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.626">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="CWE-311" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-311: Missing Encryption of Sensitive Data
The product does not encrypt sensitive or critical information before storage or transmission.
The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-613" name="CWE-613" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-613: Insufficient Session Expiration
According to WASC, "Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization."
</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-638" name="CWE-638" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-638: Not Using Complete Mediation
The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.
</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-LOGIN-CM5" name="Conduct regular security audits and reviews" issueId="" issueLink="" platform="" cost="1" risk="44" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Conducting regular security audits and reviews of your login system is a critical step in ensuring its ongoing security and integrity. These audits help identify vulnerabilities, assess the effectiveness of current security measures, and ensure compliance with best practices and regulations. Here’s a step-by-step guide on how to implement this countermeasure effectively:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Establish an Audit Schedule&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Define Frequency&lt;/strong&gt;: Determine how often security audits and reviews should be conducted. The frequency can depend on various factors, including the sensitivity of the data handled by the login system, regulatory requirements, and the system's complexity.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Plan for Regular Reviews&lt;/strong&gt;: In addition to full audits, plan for more frequent, less formal security reviews to quickly catch and address potential issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Outline Audit Scope&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Identify Components&lt;/strong&gt;: List all components of the login system to be audited. This includes the authentication mechanism, database storage of credentials, session management, and any multi-factor authentication (MFA) integrations.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Determine Audit Criteria&lt;/strong&gt;: Define what standards, regulations, and best practices the audit will use as benchmarks for evaluation. Common references include OWASP Top 10, ISO/IEC 27001, and specific compliance mandates like GDPR or HIPAA.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Conduct the Security Audit&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Review Code&lt;/strong&gt;: Perform a thorough code review focusing on authentication flows, data validation, and session management. Look for common vulnerabilities like SQL injection, cross-site scripting (XSS), and insecure direct object references (IDOR).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Test Authentication Mechanisms&lt;/strong&gt;: Assess the strength and implementation of password policies, MFA, and session management practices. Use both automated tools and manual testing techniques.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Evaluate Configuration and Deployment&lt;/strong&gt;: Check the configuration of servers, databases, and any third-party services used in the login process. Ensure that only necessary services are exposed and securely configured.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Assess Incident Response Mechanisms&lt;/strong&gt;: Review how the system detects, logs, and responds to security incidents. Ensure that adequate logging is in place and that alerts are configured for suspicious activities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Document Findings and Recommendations&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Compile a Report&lt;/strong&gt;: Document all findings from the audit, including vulnerabilities discovered, areas for improvement, and adherence to best practices and compliance requirements.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Prioritize Issues&lt;/strong&gt;: Rank the identified issues based on their potential impact and the effort required to address them. High-risk vulnerabilities should be prioritized for immediate remediation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Implement Recommendations&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Develop a Remediation Plan&lt;/strong&gt;: For each identified issue, outline a plan for remediation. Assign responsibilities and set deadlines for addressing the vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Monitor Progress&lt;/strong&gt;: Track the implementation of the remediation plan, ensuring that all issues are addressed in a timely manner.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Review and Iterate&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Post-Implementation Review&lt;/strong&gt;: After implementing the recommendations, conduct a follow-up review to ensure that the changes have effectively addressed the vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Continuous Improvement&lt;/strong&gt;: Use the insights gained from each audit to refine the audit process and improve the security of the login system continuously.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Train and Educate&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Educate Developers&lt;/strong&gt;: Share the findings and lessons learned from the audit with the development team. Use this as an opportunity to improve secure coding practices.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Awareness for All Stakeholders&lt;/strong&gt;: Ensure that all stakeholders understand the importance of the security audit process and their role in maintaining the security of the login system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conducting regular security audits and reviews is an essential practice for maintaining the security of your login system. It helps identify vulnerabilities, ensures compliance with security standards, and fosters a culture of continuous improvement in security practices.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="732-148" supportedStandardRef="OpenCRE"/>
            <standard ref="Agency Audits (b)" supportedStandardRef="ccpa"/>
            <standard ref="Application Vulnerability Remediation" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="Contract Requirements for Service Providers and Contractors (a)" supportedStandardRef="ccpa"/>
            <standard ref="Defect Tracking" supportedStandardRef="SAMM"/>
            <standard ref="Firmware Verification" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-1: Asset vulnerabilities are identified and documented" supportedStandardRef="nist-csf"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Management of technical vulnerabilities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Metrics and Feedback" supportedStandardRef="SAMM"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.IP-12: A vulnerability management plan is developed and implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Peripheral Firmware Verification" supportedStandardRef="D3FEND"/>
            <standard ref="RV.1.1" supportedStandardRef="nist-ssdf"/>
            <standard ref="RV.2.1" supportedStandardRef="nist-ssdf"/>
            <standard ref="RV.2.2" supportedStandardRef="nist-ssdf"/>
            <standard ref="RV.3.1" supportedStandardRef="nist-ssdf"/>
            <standard ref="RV.3.2" supportedStandardRef="nist-ssdf"/>
            <standard ref="RV.3.3" supportedStandardRef="nist-ssdf"/>
            <standard ref="SI-2 Flaw Remediation" supportedStandardRef="NIST 800-53"/>
            <standard ref="Software Update" supportedStandardRef="D3FEND"/>
            <standard ref="System Firmware Verification" supportedStandardRef="D3FEND"/>
            <standard ref="Threat &amp; Vulnerability Management" supportedStandardRef="cloud-control-matrix"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1047 - Audit"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SI-2 Flaw Remediation"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.567">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGIN-CM1" name="Implement Multi-Factor Authentication (MFA)" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing Multi-Factor Authentication (MFA) significantly enhances security by requiring users to provide two or more verification factors to gain access to a resource, such as a login system. This countermeasure makes it harder for attackers to gain unauthorized access, as they would need to compromise multiple authentication mechanisms. Here's how to implement it:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Choose an MFA Method&lt;/strong&gt;: Decide on the types of factors you will use. Common types include something you know (password or PIN), something you have (a mobile device or security token), and something you are (biometrics such as fingerprints or facial recognition).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Integrate MFA into Your Login Flow&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Use a reputable MFA library or service that aligns with your development stack. For web applications, consider OAuth 2.0 or OpenID Connect with support for MFA.&lt;/li&gt;
 &lt;li&gt;Ensure the library or service is well-documented and actively maintained.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Set Up the Primary Authentication Factor&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continue using passwords as the first factor but enforce strong password policies (e.g., minimum length, complexity requirements).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement the Secondary Authentication Factor&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;For something you have: Send a one-time passcode (OTP) to the user's phone via SMS or an authentication app.&lt;/li&gt;
 &lt;li&gt;For something you are: Integrate biometric authentication if the platform supports it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Fallback Mechanisms&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Provide options for users to authenticate through another method if their primary MFA method is unavailable (e.g., using backup codes).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;User Registration and Recovery&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;During registration or first login, prompt users to set up MFA.&lt;/li&gt;
 &lt;li&gt;Offer a clear, secure process for users to recover access to their account if they lose their MFA device.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Test and Deploy&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Rigorously test the MFA implementation to ensure it works smoothly across different devices and scenarios.&lt;/li&gt;
 &lt;li&gt;Monitor and review authentication logs for any unusual activities or failed login attempts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate Users&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Provide guidance and training for users on setting up and using MFA. Explain the benefits and the process clearly to encourage adoption.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compliance and Best Practices&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Adhere to relevant security standards and regulations for your industry that may mandate the use of MFA.&lt;/li&gt;
 &lt;li&gt;Regularly review and update your MFA implementation to align with emerging threats and new best practices.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing MFA is a crucial step in securing access to sensitive systems and data. While it adds an extra step for users, the added security layer significantly outweighs the minor inconvenience, especially in environments susceptible to phishing attacks or where sensitive data is accessed. Always stay informed about the latest in MFA technology and security practices to ensure your implementation remains effective against evolving threats.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="724-770" supportedStandardRef="OpenCRE"/>
            <standard ref="8.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-14 PERMITTED ACTIONS WITHOUT IDENTIFICATION OR AUTHENTICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16 Security and Privacy Attributes" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-19 Access Control for Mobile Devices" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2 ACCOUNT MANAGEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24 Access Control Decisions" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-25 Reference Monitor" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5 SEPARATION OF DUTIES" supportedStandardRef="NIST 800-53"/>
            <standard ref="Account Locking" supportedStandardRef="D3FEND"/>
            <standard ref="Broken Access Controls" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="Domain Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="General Rules Regarding Verification (c)(1)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(3)" supportedStandardRef="ccpa"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Multi-factor Authentication" supportedStandardRef="D3FEND"/>
            <standard ref="Opt-Out Preference Signals (c)(5)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-3: Remote access is managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals' security and privacy risks and other organizational risks)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Requests to Limit Use and Disclosure of Sensitive Personal Information (m)(2)" supportedStandardRef="ccpa"/>
            <standard ref="SC-2 Separation of System and User Functionality" supportedStandardRef="NIST 800-53"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1032 - Multi-factor Authentication"/>
            <customField ref="SF-C-SCOPE" value="Data Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-2 ACCOUNT MANAGEMENT"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.567">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGIN-CM2" name="Implement secure session management" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing secure session management is crucial for protecting users' sessions from hijacking and other forms of attack. Here's a step-by-step guide to ensure that session management within your application is as secure as possible:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Use Secure Cookies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Set the HttpOnly flag&lt;/strong&gt;: This prevents client-side scripts from accessing the session cookie, mitigating the risk of cross-site scripting (XSS) attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Set the Secure flag&lt;/strong&gt;: Ensure cookies are sent only over HTTPS, preventing them from being transmitted over unencrypted connections.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement SameSite attribute&lt;/strong&gt;: This limits the cookie to first-party or same-site context, reducing the risk of cross-site request forgery (CSRF) attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Generate Strong Session Identifiers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Use strong randomization&lt;/strong&gt;: Generate session IDs using a secure, cryptographically strong random number generator.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Ensure uniqueness&lt;/strong&gt;: Make sure each session ID is unique to prevent session fixation and replay attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Set Session Expiration&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement timeout&lt;/strong&gt;: Automatically expire sessions after a period of inactivity. Choose a timeout period that balances security and user convenience.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Expire on logout&lt;/strong&gt;: Ensure sessions are properly terminated when the user logs out, not just by removing the session ID on the client side.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Limit Session Data Exposure&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Minimize session data&lt;/strong&gt;: Store the minimum amount of data necessary in the session. Avoid storing sensitive information directly in the session.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Encrypt session data&lt;/strong&gt;: If sensitive data must be stored within the session, ensure it is encrypted.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Handle Session IDs Securely&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Secure transmission&lt;/strong&gt;: Always transmit session IDs over encrypted channels (HTTPS).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regenerate session IDs&lt;/strong&gt;: Upon login, logout, and privilege level change, regenerate the session ID to prevent session fixation attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Use Token-Based Authentication for APIs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement token-based sessions&lt;/strong&gt;: For APIs, particularly in single page applications (SPAs) or mobile apps, use secure, token-based authentication mechanisms like OAuth 2.0 or JWT (JSON Web Tokens).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Secure token storage&lt;/strong&gt;: Ensure tokens are stored securely on the client side, using mechanisms appropriate to the platform (e.g., secure storage in mobile apps, &lt;strong&gt;HttpOnly&lt;/strong&gt; cookies in web applications).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Monitor and Log Session Activity&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Audit sessions&lt;/strong&gt;: Log session creation, expiration, and termination events. Monitor these logs for unusual patterns that may indicate attack attempts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement anomaly detection&lt;/strong&gt;: Use anomaly detection mechanisms to identify and alert on unusual session activities, such as rapid changes in geolocation or simultaneous sessions from disparate locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Educate Users on Session Security&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Promote secure practices&lt;/strong&gt;: Encourage users to log out from applications when finished, especially on shared or public devices.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement user session management&lt;/strong&gt;: Allow users to view and terminate active sessions from their account settings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;9. Regular Review and Testing&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Conduct security assessments&lt;/strong&gt;: Regularly review and test your session management implementation, including penetration testing and security audits.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Stay updated&lt;/strong&gt;: Keep abreast of the latest security threats and mitigation techniques to continually refine and update your session management practices.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing these steps will significantly enhance the security of session management in your application, protecting both your users and your data from potential threats.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="256" supportedStandardRef="cwe-standard"/>
            <standard ref="342-764" supportedStandardRef="OpenCRE"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="Forgot Password Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1017 - User Training"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V2.7.5"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.567">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGIN-CM4" name="Implement server-side access control checks" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing server-side access control checks is crucial for ensuring that users can only access resources or perform actions for which they have permission. This countermeasure prevents unauthorized access and modification of data, reinforcing the security of your application. Here's how to effectively implement server-side access control checks:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Identify User Roles and Permissions&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define clear roles within your application (e.g., administrator, user, guest) and specify the permissions associated with each role. Permissions should cover actions like read, write, update, and delete.&lt;/li&gt;
 &lt;li&gt;Use a matrix or a list to map out roles and their permissions clearly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Authentication Mechanism&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that your application has a robust authentication mechanism in place to identify users reliably.&lt;/li&gt;
 &lt;li&gt;Use secure session management practices to maintain user state on the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Design and Apply Access Control Policies&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Utilize a centralized access control mechanism, such as Access Control Lists (ACLs), Role-Based Access Control (RBAC), or Attribute-Based Access Control (ABAC), to manage and enforce permissions.&lt;/li&gt;
 &lt;li&gt;Ensure that access control checks are applied consistently across all parts of the application, including APIs, backend services, and database queries.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enforce Server-Side Checks for Every Request&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;For each action or request, verify the user’s permissions on the server side before processing the request.&lt;/li&gt;
 &lt;li&gt;Do not rely on client-side controls as they can be bypassed. Ensure that all access decisions are made on the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Principle of Least Privilege&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Grant users the minimum permissions they need to perform their tasks. Regularly review and adjust permissions to ensure they are as restrictive as necessary.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Securely Handle Data Access&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;When querying databases, use parameterized queries or stored procedures to prevent SQL injection attacks.&lt;/li&gt;
 &lt;li&gt;Apply the same access control checks when accessing data, ensuring users can only access the data they are authorized to see.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Logging and Monitoring&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Log access control checks and failures. Monitoring these logs can help detect unauthorized access attempts and potential security breaches.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Regularly Review and Test Access Controls&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Periodically review your access control policies and implementation to ensure they still align with business needs and security requirements.&lt;/li&gt;
 &lt;li&gt;Conduct regular security testing, including penetration testing, to identify and fix any weaknesses in your access control mechanisms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate Developers and Administrators&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Provide training on the importance of access control and secure coding practices. Ensure that developers understand how to apply access controls consistently.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Respond to Access Control Failures&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement measures to respond to access control failures, such as alerting administrators, blocking users after repeated failures, and providing users with information on how to regain access if legitimately locked out.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, you'll create a strong foundation for secure access within your application, ensuring that users can only access resources and perform actions according to their permissions. Remember, security is an ongoing process, and your access control measures should evolve with your application and the broader threat landscape.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="240-274" supportedStandardRef="OpenCRE"/>
            <standard ref="532" supportedStandardRef="cwe-standard"/>
            <standard ref="C9" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Logging Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-CONF-02" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1052 - User Account Control"/>
            <customField ref="SF-C-SCOPE" value="Data Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V7.1.2"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.567">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGIN-CM3" name="Use encryption to protect sensitive data" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing encryption to protect sensitive data is a fundamental security practice to ensure that confidential information remains inaccessible to unauthorized users, even if they manage to bypass other security measures. Here's a step-by-step guide on how to effectively use encryption:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Identify Sensitive Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Conduct a Data Inventory&lt;/strong&gt;: Catalog all data your application handles, identifying what is considered sensitive based on privacy laws, regulatory requirements, and business needs.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Classification&lt;/strong&gt;: Classify data according to its sensitivity level. This helps in applying appropriate encryption standards.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Choose the Right Encryption Algorithms&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Research and Select&lt;/strong&gt;: Choose strong, well-established cryptographic algorithms. AES (Advanced Encryption Standard) for data at rest and TLS (Transport Layer Security) for data in transit are widely recognized choices.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Avoid Deprecated Algorithms&lt;/strong&gt;: Stay clear of weak or broken encryption algorithms, such as DES or MD5, which are vulnerable to attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Implement Encryption for Data at Rest&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Database Encryption&lt;/strong&gt;: Use Transparent Data Encryption (TDE) or column-level encryption for data stored in databases.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;File System Encryption&lt;/strong&gt;: For files stored outside of databases, use file system encryption options, like those provided by the operating system or third-party tools.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Encrypt Backup Data&lt;/strong&gt;: Ensure that backups of sensitive data are also encrypted using the same standards as the primary data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Implement Encryption for Data in Transit&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Use TLS&lt;/strong&gt;: Ensure all data sent over the network, including between servers and clients or between application components, is encrypted using TLS.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Validate Certificates&lt;/strong&gt;: Properly validate TLS certificates to prevent man-in-the-middle attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Force Encryption&lt;/strong&gt;: Configure your applications and APIs to reject any connection that does not use encryption.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Key Management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Secure Storage&lt;/strong&gt;: Store encryption keys securely, using a dedicated key management solution or hardware security module (HSM) if possible.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Access Control&lt;/strong&gt;: Restrict access to encryption keys to only those systems and individuals that absolutely need it.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Rotation and Revocation&lt;/strong&gt;: Implement policies for regular key rotation and a process for key revocation and replacement in case of potential compromise.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Encrypt Sensitive Data in Code&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Protect Credentials&lt;/strong&gt;: Encrypt sensitive information such as API keys, credentials, or configuration files even when stored within your codebase or configuration files.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Avoid Hardcoding&lt;/strong&gt;: Never hardcode sensitive information directly in the source code. Use environment variables or secure secrets management tools instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7. Perform Regular Audits and Compliance Checks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Audit Encryption Practices&lt;/strong&gt;: Regularly audit your encryption practices and configurations to ensure compliance with internal policies and regulatory standards.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Stay Updated on Compliance Requirements&lt;/strong&gt;: Keep informed about any changes in privacy laws or industry regulations that may affect your data encryption strategies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8. Educate and Train Your Team&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Security Training&lt;/strong&gt;: Provide regular training for your development, operations, and security teams on best practices for data encryption and key management.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Promote Encryption by Default&lt;/strong&gt;: Foster a culture where encryption is considered a default practice for any sensitive data handling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;9. Plan for Performance and Scalability&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Assess Performance Impact&lt;/strong&gt;: Test and monitor the performance impact of encryption on your application, adjusting resources as necessary to maintain performance levels.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scalability Considerations&lt;/strong&gt;: Ensure your encryption strategy scales with your application, especially when using services that automatically scale.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By meticulously implementing encryption for sensitive data, both at rest and in transit, and managing encryption keys securely, you can significantly enhance the overall security posture of your application, ensuring that sensitive data remains confidential and integral.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="253-452" supportedStandardRef="OpenCRE"/>
            <standard ref="Docker Security Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V14.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1041 - Encrypt Sensitive Information"/>
            <customField ref="SF-C-SCOPE" value="Data Security||Network Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V14.1.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.567">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-ELEVATION-OF-PRIVILEGE" name="Elevation of Privilege" desc="Elevation of privilege involves an attacker gaining higher levels of access or permissions than intended. By exploiting vulnerabilities, attackers can escalate their privileges within a system to perform unauthorized actions or access sensitive data." library="functional-components">
          <threats>
            <threat ref="T-LOGIN-T2" name="Attackers access the system taking advantage of broken authentication" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Broken authentication occurs when the implementation of authentication mechanisms in an application or system is flawed, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities temporarily or permanently. Common vulnerabilities include inadequate password management, insufficient protection of credentials, and session management flaws.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;External Attackers&lt;/strong&gt;: Individuals or groups targeting the application to gain unauthorized access by exploiting weaknesses in the authentication process.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Insiders&lt;/strong&gt;: Employees with knowledge of the system's vulnerabilities who might exploit them for personal gain or to cause harm.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automated Attacks&lt;/strong&gt;: Scripts and bots designed to automatically detect and exploit common authentication vulnerabilities, such as default passwords, weak session tokens, or predictable login mechanisms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Access&lt;/strong&gt;: Attackers gain unauthorized access to sensitive areas of the application, leading to potential data breaches and unauthorized actions within the system.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Theft&lt;/strong&gt;: Once inside, attackers can steal sensitive data, including personal user information, financial records, or proprietary company data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Account Takeover&lt;/strong&gt;: Attackers can take over user accounts, locking out legitimate users and potentially engaging in identity theft.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;System Compromise&lt;/strong&gt;: Gaining initial access through broken authentication can be a stepping stone for attackers to explore further vulnerabilities within the system, leading to a more extensive compromise.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker uses a list of common passwords to perform a brute-force attack on a web application’s login page. Due to the absence of account lockout policies, the attacker successfully guesses a user's password, gaining unauthorized access to sensitive information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: A developer inadvertently leaves a default administrator account enabled in a production environment, with credentials that are easily found in public documentation. An attacker discovers this account and uses it to gain full administrative access to the application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: An application's session tokens are not securely generated and are susceptible to prediction. An attacker crafts a session token through analysis of multiple tokens and successfully hijacks a user's authenticated session, gaining access without needing the account's password.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mitigation Strategies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement Strong Authentication Mechanisms&lt;/strong&gt;: Utilize multi-factor authentication (MFA) to add an additional layer of security beyond usernames and passwords.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Secure Password Storage&lt;/strong&gt;: Store passwords securely using salted hashing techniques. Ensure that the storage mechanism is resistant to brute-force attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Session Management Security&lt;/strong&gt;: Generate secure, random session tokens and ensure that session tokens expire after a reasonable period of inactivity or are invalidated after logout.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Account Lockout Policies&lt;/strong&gt;: Implement account lockout policies after a certain number of unsuccessful login attempts to prevent brute-force attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Security Audits and Testing&lt;/strong&gt;: Conduct regular security audits and penetration testing to identify and remediate vulnerabilities related to authentication mechanisms.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Users on Secure Practices&lt;/strong&gt;: Encourage users to use strong, unique passwords and to be mindful of security practices related to authentication.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By understanding and addressing the risks associated with broken authentication, organizations can significantly enhance the security of their login systems and protect against unauthorized access and data breaches.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-638">
                  <countermeasures>
                    <countermeasure ref="C-LOGIN-CM4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGIN-CM4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1552 - Unsecured Credentials||ATT&amp;CK Enterprise - T1003 - OS Credential Dumping||ATT&amp;CK Enterprise - T1550 - Use Alternate Authentication Material||ATT&amp;CK Enterprise - T1190 - Exploit Public-Facing Application||ATT&amp;CK Enterprise - T1110 - Brute Force||ATT&amp;CK Enterprise - T1068 - Exploitation for Privilege Escalation"/>
                <customField ref="SF-T-STRIDE-LM" value="Elevation of Privilege"/>
              </customFields>
            </threat>
            <threat ref="T-LOGIN-T1" name="Attackers exploit flaws in access control systems" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Access control systems are designed to restrict access to resources in a computing environment to authorized users, services, or processes. These systems can be compromised by attackers exploiting flaws, leading to unauthorized access, data breaches, system manipulation, or denial of access to legitimate users. Flaws might include inadequate password management, improper configuration, lack of proper updates, and vulnerabilities within the access control software itself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Insider Threats&lt;/strong&gt;: Employees or insiders with malicious intent or negligence exploiting their knowledge of the system.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Cybercriminals&lt;/strong&gt;: Individuals or groups seeking unauthorized access for financial gain, espionage, or other malicious purposes.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Hacktivists&lt;/strong&gt;: Attackers motivated by political or social causes aiming to disrupt services or expose vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automated Bots&lt;/strong&gt;: Scripts and bots that automatically scan for vulnerabilities to exploit in access control systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach&lt;/strong&gt;: Unauthorized access could lead to exposure of sensitive, confidential, or personally identifiable information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Service Disruption&lt;/strong&gt;: Critical services may be disrupted, affecting business operations and causing financial and reputational damage.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;System Compromise&lt;/strong&gt;: Attackers might gain control over systems, potentially leading to a wider network compromise.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Compliance Violations&lt;/strong&gt;: Breaches in access control could result in violations of regulatory requirements, leading to legal penalties and fines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Brute Force Attacks&lt;/strong&gt;: An attacker uses a brute force approach to guess passwords and gain unauthorized access to a system. By exploiting weak password policies, the attacker successfully logs in as an administrator and accesses sensitive data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exploiting Configuration Errors&lt;/strong&gt;: A misconfigured access control list allows unauthorized users to access restricted directories. An attacker discovers this flaw and downloads confidential documents, leading to a data breach.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Session Hijacking&lt;/strong&gt;: An attacker exploits a flaw in the session management system to take over a legitimate user session after authentication. This allows the attacker to perform unauthorized actions under the guise of a legitimate user.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Permission Bypass&lt;/strong&gt;: Due to a flaw in the access control logic, attackers bypass the usual permission checks and gain access to functionalities reserved for higher-privileged users, enabling them to manipulate system settings or access restricted data.&lt;/p&gt;
&lt;p&gt;Mitigating these threats requires a multifaceted approach, including regular security assessments, robust access control policies, user education, and prompt patching of identified vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-308">
                  <countermeasures>
                    <countermeasure ref="C-LOGIN-CM1" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-613">
                  <countermeasures>
                    <countermeasure ref="C-LOGIN-CM2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGIN-CM1" mitigation="50"/>
                <countermeasure ref="C-LOGIN-CM2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1552 - Unsecured Credentials||ATT&amp;CK Enterprise - T1003 - OS Credential Dumping||ATT&amp;CK Enterprise - T1550 - Use Alternate Authentication Material||ATT&amp;CK Enterprise - T1110 - Brute Force||ATT&amp;CK Enterprise - T1566 - Phishing"/>
                <customField ref="SF-T-STRIDE-LM" value="Elevation of Privilege"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="functional-components">
          <threats>
            <threat ref="T-LOGIN-T3" name="Attackers get access to sensitive data" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This threat involves unauthorized access to sensitive information, such as personal user data, financial details, or proprietary business information, through vulnerabilities in login systems. These vulnerabilities might include weak authentication mechanisms, insecure data transmission, and insufficient data protection practices. Once attackers bypass these defenses, they can access, exfiltrate, and potentially exploit sensitive data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;External Attackers&lt;/strong&gt;: Cybercriminals targeting the application to steal sensitive data for financial gain, identity theft, or competitive advantage.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Insiders&lt;/strong&gt;: Employees or contractors exploiting their access to login systems and related data for unauthorized purposes.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Phishing Attacks&lt;/strong&gt;: Attackers tricking users into revealing their login credentials through deceptive emails or fake websites.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Stuffing&lt;/strong&gt;: Automated attacks using breached username and password pairs to gain unauthorized access to user accounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach&lt;/strong&gt;: The unauthorized access and extraction of sensitive data can lead to significant breaches, affecting individuals and organizations.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss&lt;/strong&gt;: Direct financial loss can result from the theft of financial information or through fraudulent transactions made using stolen credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputation Damage&lt;/strong&gt;: Incidents of data exposure can severely damage the reputation of an organization, leading to lost trust among users and customers.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regulatory Penalties&lt;/strong&gt;: Many jurisdictions have stringent data protection regulations. Non-compliance due to data exposure can lead to legal penalties and fines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker conducts a successful phishing campaign, obtaining login credentials for a financial application. Using these credentials, they access sensitive customer financial data, leading to identity theft and unauthorized transactions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: Exploiting weak password policies and the lack of multi-factor authentication (MFA) on a corporate login system, attackers use a list of common passwords to gain access to employee accounts, through which they exfiltrate proprietary business information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: Through a man-in-the-middle (MitM) attack, an attacker intercepts unencrypted login requests between users and a web application. Capturing usernames and passwords, the attacker gains access to the application, retrieving personal data stored within user profiles.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mitigation Strategies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement Strong Authentication&lt;/strong&gt;: Utilize multi-factor authentication (MFA) and strong password policies to enhance the security of login systems.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Secure Communications&lt;/strong&gt;: Use HTTPS with TLS for all data in transit, including login sessions, to prevent data interception.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Security Audits&lt;/strong&gt;: Conduct periodic security audits and penetration testing to identify and remediate vulnerabilities in login systems.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;User Education&lt;/strong&gt;: Educate users on the importance of secure password practices and the risks of phishing and other social engineering attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Protection&lt;/strong&gt;: Store credentials securely using salted hashing techniques. Regularly review and update security practices related to credential storage and handling.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Anomaly Detection and Monitoring&lt;/strong&gt;: Implement systems to detect and alert on unusual access patterns or login attempts that could indicate a breach attempt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By understanding and addressing the threat of attackers gaining access to sensitive data through login systems, organizations can significantly reduce the risk of data breaches and protect the privacy and security of user information.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="1" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="C-LOGIN-CM3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGIN-CM3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1041 - Exfiltration Over C2 Channel||ATT&amp;CK Enterprise - TA0010 - Exfiltration||ATT&amp;CK Enterprise - T1048 - Exfiltration Over Alternative Protocol||ATT&amp;CK Enterprise - T1567 - Exfiltration Over Web Service||ATT&amp;CK Enterprise - T1001 - Data Obfuscation||ATT&amp;CK Enterprise - T1074 - Data Staged"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-TAMPERING" name="Tampering" desc="Tampering refers to unauthorized modification of data or systems. Attackers may alter data in transit or modify software components to introduce vulnerabilities or compromise the integrity of the system." library="functional-components">
          <threats>
            <threat ref="T-LOGIN-T4" name="Attackers capitalize on security misconfigurations" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Security misconfigurations can occur at any level of an IT stack, including network devices, operating systems, applications, and cloud services. These misconfigurations often stem from default settings, incomplete setups, overly permissive access controls, unnecessary services running, or outdated security controls. Attackers exploit these vulnerabilities to gain unauthorized access, escalate privileges, or execute malicious actions within a system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;External Attackers&lt;/strong&gt;: Individuals or groups outside the organization who exploit misconfigurations to gain initial access or escalate their privileges within a network.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Insider Threats&lt;/strong&gt;: Employees or contractors who exploit internal system misconfigurations for malicious purposes or personal gain.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automated Tools and Scripts&lt;/strong&gt;: Attackers often use automated tools to scan for common misconfigurations across internet-facing services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Access&lt;/strong&gt;: Attackers may gain unauthorized access to sensitive systems or data, leading to information theft or data breaches.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;System Compromise&lt;/strong&gt;: Exploiting misconfigurations can allow attackers to plant malware, create backdoors, or gain control over critical systems.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regulatory and Compliance Violations&lt;/strong&gt;: Security misconfigurations leading to breaches may result in non-compliance with legal and regulatory standards, potentially incurring fines and legal action.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage&lt;/strong&gt;: Incidents resulting from misconfigurations can damage an organization's reputation, affecting customer trust and market position.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Default Credentials&lt;/strong&gt;: Attackers exploit default credentials on a database server to gain unauthorized access. They extract sensitive data, leading to a significant data breach.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Cloud Storage Buckets&lt;/strong&gt;: An organization leaves a cloud storage bucket misconfigured as publicly accessible. Attackers discover this bucket and exfiltrate sensitive documents, exposing personal data of thousands of users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unsecured Administrative Interfaces&lt;/strong&gt;: A network device is left with an administrative interface accessible over the internet without proper authentication. Attackers gain control of the device, using it as a pivot point for further internal network exploitation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Excessive Permissions&lt;/strong&gt;: Due to misconfigured role-based access controls, users have more permissions than necessary for their role, allowing an attacker to exploit a user account to perform unauthorized actions within a system.&lt;/p&gt;
&lt;p&gt;To mitigate these threats, organizations must adopt a proactive approach to security configuration management, including regular audits, adherence to security best practices, least privilege access, prompt patch management, and continuous monitoring for unauthorized changes.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="25" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1047">
                  <countermeasures>
                    <countermeasure ref="C-LOGIN-CM5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGIN-CM5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1569.002 - Service Execution||ATT&amp;CK Enterprise - T1552 - Unsecured Credentials||ATT&amp;CK Enterprise - T1190 - Exploit Public-Facing Application||ATT&amp;CK Enterprise - T1082 - System Information Discovery||ATT&amp;CK Enterprise - T1068 - Exploitation for Privilege Escalation||ATT&amp;CK Enterprise - T1021 - Remote Services"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b4393a81-6fcd-496f-9023-31d7ae4a349f" diagramComponentId="fc3061bc-0a42-43cf-be5f-bc028bb475a3" ref="007aecc4-9566-4be6-95d3-10a07572652b" name="Logout" desc="" library="functional-components" parentComponentRef="13a37286-a00d-4b30-956c-a1b4b032a40c" componentDefinitionRef="CD-V2-LOGOUT">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-223" name="CWE-223" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-223: Omission of Security-relevant Information
The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.
</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="CWE-286" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-286: Incorrect User Management
The product does not properly manage a user within its environment.
Users can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.041">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-352" name="CWE-352" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-352: Cross-Site Request Forgery (CSRF)
The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.
When a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.041">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-613" name="CWE-613" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-613: Insufficient Session Expiration
According to WASC, "Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization."
</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.041">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-LOGOUT-V2-CNT-02" name="Force logout if account permissions have been revoked" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Monitor Account Permissions:&lt;/strong&gt; Regularly check and monitor the account permissions associated with user accounts in your system.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automate Permission Checks:&lt;/strong&gt; Implement an automated system that periodically reviews and verifies user permissions against the current access control policies.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Real-time Permission Validation:&lt;/strong&gt; Whenever a user performs an action that requires permissions, validate their permissions in real-time before allowing the action to proceed.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Immediate Revocation Handling:&lt;/strong&gt; If an account's permissions are revoked, trigger an immediate force logout for that account to terminate any active sessions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Token Expiration Mechanism:&lt;/strong&gt; Utilize short-lived authentication tokens and ensure that token expiration is enforced. This limits the window of opportunity for unauthorized access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Audit Trail Logging:&lt;/strong&gt; Log all permission-related activities, including permission changes and forced logouts, for audit purposes. This aids in identifying potential security incidents.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement Session Management:&lt;/strong&gt; Employ robust session management techniques, such as session timeouts and single sign-out, to enhance control over user sessions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Case-Specific Policies:&lt;/strong&gt; Tailor the force logout mechanism based on different user roles and sensitive actions. Critical operations may require more immediate action than less sensitive tasks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regularly Update Access Policies:&lt;/strong&gt; Keep access control policies up-to-date to reflect changes in the organization's structure, ensuring that permissions accurately represent the current state of user roles.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Developers:&lt;/strong&gt; Train developers on the importance of prompt response to permission changes and the implementation of the force logout mechanism. Encourage a security-first mindset in development practices.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="A01:2021 – Broken Access Control" url="https://owasp.org/Top10/A01_2021-Broken_Access_Control/"/>
            <reference name="Network security: Force logoff when logon hours expire" url="https://learn.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-force-logoff-when-logon-hours-expire"/>
            <reference name="OWASP Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="238-346" supportedStandardRef="OpenCRE"/>
            <standard ref="613" supportedStandardRef="cwe-standard"/>
            <standard ref="Session Management Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V3.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-SESS-06" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management||ATT&amp;CK Enterprise - M1018 - User Account Management||ATT&amp;CK Enterprise - M1052 - User Account Control||ATT&amp;CK Enterprise - M1027 - Password Policies"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V3.3.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.981">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGOUT-V2-CNT-01" name="Invalidate session after logout" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Logout Trigger:&lt;/strong&gt; When a user initiates a logout, trigger a secure and verified logout process.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Session Identifier Destruction:&lt;/strong&gt; Immediately invalidate and destroy the user's session identifier associated with the logout action.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Clear Session Data:&lt;/strong&gt; Remove any user-specific data stored on the client side (e.g., cookies, local storage) related to the session upon logout.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Server-Side Session Termination:&lt;/strong&gt; Ensure that the server-side session is properly terminated, and any related data is wiped out to prevent further access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement CSRF Protection:&lt;/strong&gt; Employ anti-CSRF (Cross-Site Request Forgery) measures to prevent malicious actors from forcing a user to perform unintended logouts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Secure Communication:&lt;/strong&gt; Perform the logout operation over a secure communication channel (HTTPS) to prevent interception or tampering of the logout request.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Clear Authentication Tokens:&lt;/strong&gt; If the authentication process involves tokens (e.g., JWT), make sure to invalidate or blacklist these tokens during the logout process.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Double-Check Redirections:&lt;/strong&gt; Confirm that after logout, users are not redirected to sensitive pages without proper authentication. Avoid open redirects.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Audit Logout Events:&lt;/strong&gt; Log logout events for auditing purposes. Include details like user, timestamp, and reason for logout, if applicable.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Session Expiry Handling:&lt;/strong&gt; Configure session expiration policies to automatically invalidate sessions after a certain period of inactivity or elapsed time.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;User Confirmation:&lt;/strong&gt; For sensitive actions like logout, consider implementing a confirmation mechanism to ensure that the user indeed intends to log out.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Clear Server-Side Caches:&lt;/strong&gt; If your system involves server-side caching, clear any cached user-related data to prevent potential information leakage.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
            <reference name="Session management security: Best practices for protecting user sessions" url="https://snyk.io/blog/session-management-security/"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="457-165" supportedStandardRef="OpenCRE"/>
            <standard ref="613" supportedStandardRef="cwe-standard"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
            <standard ref="C6" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-23(1)" supportedStandardRef="NIST 800-53"/>
            <standard ref="Session Management Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V3.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-SESS-06" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management||ATT&amp;CK Enterprise - M1018 - User Account Management||ATT&amp;CK Enterprise - M1052 - User Account Control"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V3.3.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.980">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGOUT-V2-CNT-04" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Use SameSite Attribute:&lt;/strong&gt; Set the SameSite attribute for cookies to 'Strict' or 'Lax' to control when cookies are sent in cross-site requests.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;HttpOnly Flag:&lt;/strong&gt; Apply the HttpOnly flag to cookies to prevent client-side scripts from accessing them, reducing the risk of theft through malicious scripts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Secure Flag:&lt;/strong&gt; Add the Secure flag to cookies to ensure they are only sent over secure, encrypted connections (HTTPS).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Anti-CSRF Tokens:&lt;/strong&gt; Include anti-CSRF tokens in each form and link that triggers state-changing actions, ensuring that the request is legitimate.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Validate Referer Header:&lt;/strong&gt; Check the Referer header in incoming requests to verify that they originate from the same domain, providing an additional layer of protection.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Double-Submit Cookie Method:&lt;/strong&gt; Implement the double-submit cookie method, where a cookie value is duplicated as a hidden form field, and the server compares both values for validation.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Randomize Token Values:&lt;/strong&gt; Generate random and unpredictable token values for anti-CSRF tokens to make it difficult for attackers to predict or manipulate them.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Token Expiry:&lt;/strong&gt; Set expiration times for anti-CSRF tokens to limit their validity and reduce the risk associated with token exposure.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Token Renewal:&lt;/strong&gt; Renew tokens after each usage or periodically to mitigate the impact of stolen tokens.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Check Request Origin:&lt;/strong&gt; Verify the origin of the request by comparing the Origin or custom headers to ensure requests are coming from expected sources.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Developers:&lt;/strong&gt; Train developers on the importance of CSRF protection and best practices for implementing secure token-based mechanisms.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Security Audits:&lt;/strong&gt; Conduct regular security audits to identify and address any vulnerabilities in the CSRF protection implementation.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="CSRF Attacks: Anatomy, Prevention, and XSRF Tokens" url="https://www.acunetix.com/websitesecurity/csrf-attacks/"/>
            <reference name="Prevent Cross-Site Request Forgery (CSRF) Attacks" url="https://auth0.com/blog/cross-site-request-forgery-csrf/"/>
          </references>
          <standards>
            <standard ref="1275" supportedStandardRef="cwe-standard"/>
            <standard ref="342-055" supportedStandardRef="OpenCRE"/>
            <standard ref="C6" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Cross-Site Request Forgery Prevention Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Session Management Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V3.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-SESS-02" supportedStandardRef="owasp-wstg"/>
            <standard ref="are g" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management||ATT&amp;CK Enterprise - M1018 - User Account Management||ATT&amp;CK Enterprise - M1052 - User Account Control"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V3.4.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.981">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGOUT-V2-CNT-03" name="Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Define Logging Standards:&lt;/strong&gt; Establish clear standards for logging, outlining the format, content, and level of detail required for security-related logs.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Log Critical Events:&lt;/strong&gt; Log critical security events such as authentication attempts, authorization failures, and significant configuration changes.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Centralized Logging:&lt;/strong&gt; Implement centralized logging to a secure, dedicated server or log management system for efficient monitoring and analysis.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Log Reviews:&lt;/strong&gt; Regularly review logs to identify and investigate any abnormal or suspicious activities, ensuring timely detection of potential security incidents.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Automated Alerts:&lt;/strong&gt; Set up automated alerts based on predefined security thresholds to notify relevant personnel in real-time when suspicious activities are detected.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Incident Response Plan:&lt;/strong&gt; Integrate security logging with an incident response plan, outlining the steps to be taken in the event of a security incident.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;User Activity Monitoring:&lt;/strong&gt; Monitor user activities and privilege escalations to detect and respond to unauthorized or suspicious behavior.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Network Traffic Analysis:&lt;/strong&gt; Analyze network traffic logs to identify patterns indicative of security threats, such as unusual spikes or unexpected data transfers.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Application-Level Logging:&lt;/strong&gt; Implement detailed application-level logging to capture events like failed login attempts, input validation failures, and other security-relevant actions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regularly Update Log Sources:&lt;/strong&gt; Keep the list of log sources up-to-date to account for changes in the infrastructure, applications, and security landscape.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Store Logs Securely:&lt;/strong&gt; Ensure that logs are stored securely, with restricted access, encryption, and integrity checks, to prevent tampering or unauthorized access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Logging in Compliance:&lt;/strong&gt; Align logging practices with relevant compliance standards and regulations to meet legal and industry-specific requirements.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Security Information and Event Management (SIEM):&lt;/strong&gt; Consider implementing a SIEM solution to streamline log management, correlation, and analysis for more effective threat detection and response.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="A09:2021 – Security Logging and Monitoring Failures" url="https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"/>
            <reference name="C9: Implement Security Logging and Monitoring" url="https://owasp.org/www-project-proactive-controls/v3/en/c9-security-logging"/>
            <reference name="Security log management and logging best practices" url="https://www.techtarget.com/searchsecurity/tip/Security-log-management-and-logging-best-practices"/>
          </references>
          <standards>
            <standard ref="058-083" supportedStandardRef="OpenCRE"/>
            <standard ref="1.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-4: Malicious code is detected" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5: Unauthorized mobile code is detected" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6: External service provider activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2: Detection activities comply with all applicable requirements" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3: Detection processes are tested" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4: Event detection information is communicated" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5: Detection processes are continuously improved" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-1: Asset vulnerabilities are identified and documented" supportedStandardRef="nist-csf"/>
            <standard ref="Incident Detection" supportedStandardRef="SAMM"/>
            <standard ref="Logging and Monitoring" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Monitoring activities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Network Traffic Analysis" supportedStandardRef="D3FEND"/>
            <standard ref="Operating System Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="SI-4 System Monitoring" supportedStandardRef="NIST 800-53"/>
            <standard ref="Verification for Password-Protected Accounts (b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1047 - Audit"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SI-4 System Monitoring"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.981">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-LOGOUT-V2-CNT-05" name="The logout function should be prominently visible to the user" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;User Interface Placement:&lt;/strong&gt; Position the logout function prominently within the user interface, typically in a top-level menu or a designated section that is easily accessible.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Consistent Iconography:&lt;/strong&gt; Use clear and consistent iconography, such as a "logout" or "exit" icon, to visually represent the logout function and make it easily recognizable.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Textual Labeling:&lt;/strong&gt; Accompany the icon with a clear textual label, such as "Logout" or "Sign Out," to provide explicit information about the action associated with the button.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Color Contrasts:&lt;/strong&gt; Ensure that the logout button stands out visually by using color contrasts that distinguish it from other elements on the page, drawing the user's attention.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Responsive Design:&lt;/strong&gt; Design the user interface to maintain the visibility of the logout function across different screen sizes and devices, maintaining a consistent user experience.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Confirmation Dialog:&lt;/strong&gt; Implement a confirmation dialog when the user initiates the logout action, ensuring that they are aware of the consequence and have an opportunity to confirm or cancel the action.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Accessibility Considerations:&lt;/strong&gt; Make the logout function accessible to users with disabilities by ensuring compatibility with screen readers and other assistive technologies.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Logout Link in Navigation:&lt;/strong&gt; If applicable, include a "Logout" link in the main navigation menu, making it easily accessible from any page within the application.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Timely Reminders:&lt;/strong&gt; Consider displaying subtle reminders about the availability of the logout function, especially if the user has been inactive for an extended period.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Users:&lt;/strong&gt; Provide brief, user-friendly tooltips or informational pop-ups to educate users on the importance of logging out, especially when using shared devices.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Inactivity Timeout Warning:&lt;/strong&gt; If applicable, implement an inactivity timeout warning that alerts users about an imminent session expiration, prompting them to either continue their session or log out.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Insufficient Session Expiration" url="https://www.immuniweb.com/vulnerability/insufficient-session-expiration.html"/>
            <reference name="PCI DSS Session Timeout Requirements" url="https://pcidssguide.com/pci-dss-session-timeout-requirements/"/>
          </references>
          <standards>
            <standard ref="613" supportedStandardRef="cwe-standard"/>
            <standard ref="673-736" supportedStandardRef="OpenCRE"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
            <standard ref="Session Management Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V3.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-SESS-06" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1018 - User Account Management||ATT&amp;CK Enterprise - M1052 - User Account Control"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V3.3.4"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.981">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-ELEVATION-OF-PRIVILEGE" name="Elevation of Privilege" desc="Elevation of privilege involves an attacker gaining higher levels of access or permissions than intended. By exploiting vulnerabilities, attackers can escalate their privileges within a system to perform unauthorized actions or access sensitive data." library="functional-components">
          <threats>
            <threat ref="T-LOGOUT-V2-OWASP-02" name="An attacker can exploit revoked permissions" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;Exploiting revoked permissions refers to the malicious actions taken by an attacker after access privileges or permissions have been intentionally revoked by the system administrator or application owner. This threat involves taking advantage of situations where revoked permissions are not properly enforced, allowing unauthorized access or manipulation of resources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Insider Threats:&lt;/strong&gt; Former employees or individuals with previous access to the system may exploit their knowledge to continue accessing resources despite having their permissions revoked.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Access Attempts:&lt;/strong&gt; Attackers might attempt to exploit weaknesses in the system or application to regain access after their permissions have been revoked.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Weak Access Controls:&lt;/strong&gt; Poorly configured access controls or improperly implemented permission revocation mechanisms can be exploited by attackers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Data Access:&lt;/strong&gt; The attacker may gain access to sensitive data or resources even after their permissions have been officially revoked.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Manipulation:&lt;/strong&gt; Manipulation or deletion of data may occur, causing data integrity issues.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;System Compromise:&lt;/strong&gt; If an attacker successfully regains access, it could lead to further compromise, potentially affecting the entire system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Stale Tokens:&lt;/strong&gt; The system fails to invalidate existing authentication tokens after revoking permissions, allowing an attacker with a previously obtained token to continue accessing resources.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Exploiting Backdoors:&lt;/strong&gt; If there are undiscovered or improperly closed backdoors in the system, an attacker could use them to regain access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Insider Threat:&lt;/strong&gt; A disgruntled former employee, still possessing login credentials, may exploit their access to sensitive data or systems despite the official revocation of permissions.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="25" easeOfExploitation="50"/>
              <references>
                <reference name="Privilege Escalation Attack Explained" url="https://www.strongdm.com/blog/privilege-escalation-attack"/>
                <reference name="The Risk of RBAC Vulnerabilities – A Prevention Guide" url="https://gbhackers.com/risk-of-rbac-vulnerabilities/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="C-LOGOUT-V2-CNT-02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGOUT-V2-CNT-02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1531 - Account Access Removal"/>
                <customField ref="SF-T-STRIDE-LM" value="Elevation of Privilege"/>
              </customFields>
            </threat>
            <threat ref="T-LOGOUT-V2-OWASP-03" name="An attacker might try to access systems or data without permission to gain unauthorized privileges" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;Unauthorized access attempts involve an attacker trying to gain entry into a system, network, or application without proper authorization. The goal is to exploit vulnerabilities or weaknesses in security controls to obtain unauthorized privileges, potentially leading to unauthorized data access, manipulation, or compromise of the targeted environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Brute Force Attacks:&lt;/strong&gt; Attackers may systematically attempt various username and password combinations to gain access to an account.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Stuffing:&lt;/strong&gt; Using stolen or leaked credentials from one service to attempt unauthorized access to another where the victim has reused the same login credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Exploiting Weak Authentication:&lt;/strong&gt; Identifying and exploiting weaknesses in authentication mechanisms, such as weak passwords or lack of multi-factor authentication.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Social Engineering:&lt;/strong&gt; Manipulating individuals into revealing sensitive information, such as usernames and passwords, through deceptive tactics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Data Access:&lt;/strong&gt; Successful unauthorized access may lead to the exposure of sensitive data or confidential information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Manipulation:&lt;/strong&gt; Attackers may alter or delete data, leading to integrity issues.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Privilege Escalation:&lt;/strong&gt; Once inside a system, attackers may attempt to elevate their privileges to gain access to higher-level resources and capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Brute Force Attack:&lt;/strong&gt; The attacker systematically tries different combinations of usernames and passwords until they find the correct credentials to gain unauthorized access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Stuffing:&lt;/strong&gt; Exploiting the reuse of credentials, the attacker uses stolen login information from one service to gain unauthorized access to another service where the victim has reused the same credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Phishing:&lt;/strong&gt; Through phishing emails or messages, attackers trick users into revealing their login credentials, which are then used for unauthorized access.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="25" easeOfExploitation="50"/>
              <references>
                <reference name="10 ways attackers gain access to networks" url="https://www.malwarebytes.com/blog/news/2022/05/10-ways-attackers-gain-access-to-networks/amp"/>
                <reference name="Unauthorized Access: 5 Best Practices to Avoid the Next Data Breach" url="https://www.cynet.com/network-attacks/unauthorized-access-5-best-practices-to-avoid-the-next-data-breach/"/>
                <reference name="What you need to know about Unauthorized Access" url="https://www.myrasecurity.com/en/unauthorized-access/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-223">
                  <countermeasures>
                    <countermeasure ref="C-LOGOUT-V2-CNT-03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGOUT-V2-CNT-03" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1204 - User Execution"/>
                <customField ref="SF-T-STRIDE-LM" value="Elevation of Privilege"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-SPOOFING" name="Spoofing" desc="Spoofing involves an attacker pretending to be someone else by falsifying data or identity. This can include spoofing email addresses, IP addresses, or user identities to gain unauthorized access to systems or information." library="functional-components">
          <threats>
            <threat ref="T-LOGOUT-V2-OWASP-05" name="An attacker can exploit user errors, provoke accidental logouts, and engage in clickjacking incidents" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;Exploiting user errors, provoking accidental logouts, and engaging in clickjacking incidents are tactics used by attackers to manipulate user actions and compromise security. These threats exploit the users' actions or induce them to perform unintended actions, often leading to unauthorized access, session manipulation, or tricking users into revealing sensitive information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Social Engineering:&lt;/strong&gt; Attackers may use deceptive tactics to manipulate users into making mistakes, clicking on malicious links, or providing sensitive information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Phishing:&lt;/strong&gt; Deceptive emails, messages, or websites may trick users into revealing login credentials or clicking on malicious links, leading to unintended actions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Clickjacking:&lt;/strong&gt; Attackers use transparent or disguised overlays to trick users into clicking on elements on a webpage without their knowledge, potentially leading to unintended actions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Access:&lt;/strong&gt; Exploiting user errors or provoking accidental logouts can lead to unauthorized access to accounts or systems.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Exposure:&lt;/strong&gt; Clickjacking incidents may lead to unintended actions, such as posting sensitive information, changing settings, or initiating financial transactions without the user's consent.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Identity Theft:&lt;/strong&gt; Users may inadvertently disclose sensitive information, leading to identity theft or compromise of personal data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Misleading Emails:&lt;/strong&gt; An attacker sends a phishing email claiming to be from a legitimate source, prompting the user to click on a link that leads to a fake login page, leading to unauthorized access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Deceptive Websites:&lt;/strong&gt; Users may unintentionally visit a website that tricks them into performing actions they did not intend to, such as logging out or revealing sensitive information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Clickjacking:&lt;/strong&gt; Attackers overlay a legitimate website with a transparent iframe, making users unknowingly click on buttons or links that perform unintended actions on the underlying site.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="75"/>
              <references>
                <reference name="Error messages containing sensitive information" url="https://learn.snyk.io/lesson/error-message-with-sensitive-information/"/>
                <reference name="What Is a Threat Actor?" url="https://www.proofpoint.com/us/threat-reference/threat-actor"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-613">
                  <countermeasures>
                    <countermeasure ref="C-LOGOUT-V2-CNT-05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGOUT-V2-CNT-05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1056 - Input Capture"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-TAMPERING" name="Tampering" desc="Tampering refers to unauthorized modification of data or systems. Attackers may alter data in transit or modify software components to introduce vulnerabilities or compromise the integrity of the system." library="functional-components">
          <threats>
            <threat ref="T-LOGOUT-V2-OWASP-04" name="An attacker can perform Cross-Site Request Forgery (CSRF)" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of web security vulnerability where an attacker tricks a user's browser into making an unintended and unauthorized request to a web application on which the user is authenticated. This can lead to the execution of malicious actions on behalf of the victim, without their knowledge or consent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Websites:&lt;/strong&gt; Attackers may lure users to visit websites containing malicious scripts that exploit the user's authenticated session on another site.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Emails or Messages:&lt;/strong&gt; CSRF attacks can be embedded in emails or messages, tricking users into executing unintended actions on a targeted web application.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Advertisements:&lt;/strong&gt; Advertisements on compromised or malicious websites may contain CSRF exploits.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Actions:&lt;/strong&gt; CSRF attacks can result in unintended actions being performed on behalf of the victim, such as changing account settings, making financial transactions, or modifying data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Manipulation:&lt;/strong&gt; Attackers may manipulate or delete data within the victim's account on the targeted web application.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Session Hijacking:&lt;/strong&gt; If the victim is an administrator, an attacker may exploit CSRF to perform actions with elevated privileges.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Link:&lt;/strong&gt; An attacker embeds a malicious link in a website, email, or message, tricking the user's browser into making unintended requests to a targeted application where the victim is authenticated.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Form-based Exploits:&lt;/strong&gt; Attackers may trick users into submitting forms on a malicious site, causing unintended actions on another site where the user is authenticated.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Hidden Image or Iframe:&lt;/strong&gt; Malicious code hidden in images or iframes on a website can trigger unintended actions when the victim visits the compromised site.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="25" easeOfExploitation="50"/>
              <references>
                <reference name="Cross Site Request Forgery (CSRF)" url="https://owasp.org/www-community/attacks/csrf"/>
                <reference name="What is CSRF?" url="https://portswigger.net/web-security/csrf"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-352">
                  <countermeasures>
                    <countermeasure ref="C-LOGOUT-V2-CNT-04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGOUT-V2-CNT-04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1134 - Access Token Manipulation||ATT&amp;CK Enterprise - T1528 - Steal Application Access Token||ATT&amp;CK Enterprise - T1539 - Steal Web Session Cookie"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
            <threat ref="T-LOGOUT-V2-OWASP-01" name="An attacker can perform Session Fixation and hijack a user's session" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;Session Fixation is a type of security vulnerability that occurs when an attacker sets a user's session identifier (session ID) to a known value, allowing the attacker to hijack the user's session. This attack typically targets web applications that use session management to maintain user authentication throughout a browsing session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Websites:&lt;/strong&gt; Attackers may trick users into visiting a malicious website that sets a specific session ID.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Phishing Attacks:&lt;/strong&gt; Phishing emails or messages can include links that, when clicked, lead users to a site where their session is fixed.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Man-in-the-Middle (MitM) Attacks:&lt;/strong&gt; An attacker intercepts communication between the user and the server, injecting a fixed session ID.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Impacts:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Unauthorized Access:&lt;/strong&gt; The attacker gains unauthorized access to the victim's account or sensitive information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Manipulation:&lt;/strong&gt; Attackers can manipulate or modify the user's data, leading to potential data breaches.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Identity Theft:&lt;/strong&gt; Session Fixation can be exploited to impersonate a legitimate user, leading to identity theft.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Malicious Link:&lt;/strong&gt; An attacker sends a phishing email with a link to a fake login page. When the victim logs in, the attacker fixes the session ID, gaining control over the victim's session.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Cross-Site Scripting (XSS):&lt;/strong&gt; The attacker injects malicious scripts into a website, which, when executed by users, fix their session IDs.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Man-in-the-Middle:&lt;/strong&gt; An attacker intercepts communication between a user and a website, manipulating the session ID during the exchange, thereby fixing the session.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references>
                <reference name="Session Fixation" url="https://www.zaproxy.org/docs/alerts/40013/"/>
                <reference name="What Is Session Fixation" url="https://www.acunetix.com/blog/web-security-zone/what-is-session-fixation/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-613">
                  <countermeasures>
                    <countermeasure ref="C-LOGOUT-V2-CNT-01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-LOGOUT-V2-CNT-01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1185 - Browser Session Hijacking"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="bafd9b5b-9ad5-4106-956a-e839e691c0ab" diagramComponentId="c4f4bbe5-8c54-4b97-98b0-f52acaa5219f" ref="abd4644b-4b8a-4fd0-85d1-f9f70259ad4d" name="Mobile Device Client" desc="" library="OWASP-MASVS" parentComponentRef="" componentDefinitionRef="mobile-device-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="74458b94-d26e-4575-9505-454a9378f7a8" diagramComponentId="617604e6-b46c-4670-b938-0c2bd3b011ad" ref="c50c3959-bc4c-420a-a08c-2a759ca64812" name="Reset Password" desc="" library="functional-components" parentComponentRef="13a37286-a00d-4b30-956c-a1b4b032a40c" componentDefinitionRef="CD-V2-RESET-PASSWORD">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1390" name="CWE-1390" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-1390: Weak Authentication
The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.224">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-922" name="CWE-922" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-922: Insecure Storage of Sensitive Information
The product stores sensitive information without properly limiting read or write access by unauthorized actors.
If read access is not properly restricted, then attackers can steal the sensitive information. If write access is not properly restricted, then attackers can modify and possibly delete the data, causing incorrect results and possibly a denial of service.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.224">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-RESET-PASSWORD-TOKENS" name="Ensure tokens are generated using a secure random source and have high entropy" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;1. Utilize a Cryptographically Secure Pseudorandom Number Generator (CSPRNG) for generating password reset tokens. This ensures the tokens are unpredictable and secure against brute-force attacks. Libraries and functions that offer CSPRNG features are available in most modern programming languages.&lt;/p&gt; &lt;p&gt;2. Ensure the tokens have high entropy by drawing randomness from secure and reliable sources. Operating systems often provide interfaces to gather entropy; for example, use the &lt;code&gt;os.urandom()&lt;/code&gt; function in Python for secure random number generation.&lt;/p&gt; &lt;p&gt;3. Consider integrating hardware-based entropy sources if available, such as Trusted Platform Module (TPM) or hardware random number generators, especially for systems requiring higher security levels.&lt;/p&gt; &lt;p&gt;4. Validate all inputs that contribute to the token generation process to prevent injection of malicious data. Sanitize inputs by encoding or escaping them as appropriate, ensuring that the output is safe for use.&lt;/p&gt; &lt;p&gt;5. Regularly audit the entropy sources and token generation mechanisms to ensure they remain secure against emerging threats. Update and patch libraries and dependencies that contribute to the token generation process as needed.&lt;/p&gt; &lt;p&gt;6. Educate development teams about the importance of using secure random sources and high entropy in token generation. Promote ongoing training and awareness to keep security practices up-to-date with current best practices.&lt;/p&gt; &lt;p&gt;References to good security practices can be found in documentation from the Open Web Application Security Project (OWASP) and standards from the National Institute of Standards and Technology (NIST). Both offer guidelines on secure token generation, the use of CSPRNGs, and the importance of high entropy in security-sensitive operations.&lt;/p&gt; </desc>
          <implementations/>
          <references>
            <reference name="Implementing a forgot password flow (with pseudo code)" url="https://supertokens.com/blog/implementing-a-forgot-password-flow"/>
          </references>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="724-770" supportedStandardRef="OpenCRE"/>
            <standard ref="8.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-14 PERMITTED ACTIONS WITHOUT IDENTIFICATION OR AUTHENTICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16 Security and Privacy Attributes" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-19 Access Control for Mobile Devices" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2 ACCOUNT MANAGEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24 Access Control Decisions" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-25 Reference Monitor" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5 SEPARATION OF DUTIES" supportedStandardRef="NIST 800-53"/>
            <standard ref="Account Locking" supportedStandardRef="D3FEND"/>
            <standard ref="Broken Access Controls" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="Domain Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="General Rules Regarding Verification (c)(1)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(3)" supportedStandardRef="ccpa"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Multi-factor Authentication" supportedStandardRef="D3FEND"/>
            <standard ref="Opt-Out Preference Signals (c)(5)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-3: Remote access is managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals' security and privacy risks and other organizational risks)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Requests to Limit Use and Disclosure of Sensitive Personal Information (m)(2)" supportedStandardRef="ccpa"/>
            <standard ref="SC-2 Separation of System and User Functionality" supportedStandardRef="NIST 800-53"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1043 - Credential Access Protection"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-2 ACCOUNT MANAGEMENT"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.159">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-RESET-PASSWORD-RATE-TIME" name="Implement rate limiting and time expiration" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;1. Implement rate limiting on password reset attempts and other sensitive operations to control the rate of traffic from a single user or IP address. Utilize middleware or server settings to define a threshold for the maximum number of requests allowed within a certain timeframe. This mitigates the risk of brute force attacks.&lt;/p&gt; &lt;p&gt;2. Configure an account lockout mechanism after a predetermined number of incorrect password reset attempts. Decide on a reasonable threshold to balance security and usability, preventing denial of service to legitimate users while deterring attackers.&lt;/p&gt; &lt;p&gt;3. Set a short expiration time for password reset tokens, typically between 15 minutes to 1 hour. This limits the time window an attacker has to use a compromised token, reducing the risk of unauthorized account access.&lt;/p&gt; &lt;p&gt;4. Regularly review and adjust the rate limiting and account lockout parameters based on the application's user behavior and security requirements. Monitor for any unusual activity that may indicate an attempt to bypass these mechanisms.&lt;/p&gt; &lt;p&gt;5. Ensure communication about the password reset process, especially involving tokens, is encrypted using HTTPS to prevent interception and unauthorized use of tokens.&lt;/p&gt; &lt;p&gt;6. Educate developers and security teams about the importance of these mechanisms and how to configure them properly. Encourage regular security audits to ensure these countermeasures are effectively implemented and maintained.&lt;/p&gt; &lt;p&gt;References to good security practices include guidelines from the OWASP (Open Web Application Security Project) for authentication and session management, and advice from security frameworks such as the NIST (National Institute of Standards and Technology) Cybersecurity Framework for effective rate limiting and account lockout strategies.&lt;/p&gt; </desc>
          <implementations/>
          <references>
            <reference name="Best Practices For Password Resets" url="https://www.onelogin.com/learn/help-desk-password-reset-best-practices"/>
          </references>
          <standards>
            <standard ref="12.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="633-428" supportedStandardRef="OpenCRE"/>
            <standard ref="7.1.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.4.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="A3.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="AC-7 UNSUCCESSFUL LOGON ATTEMPTS" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-8 SYSTEM USE NOTIFICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-9 PREVIOUS LOGON NOTIFICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="Account Locking" supportedStandardRef="D3FEND"/>
            <standard ref="Authentication information" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Authorized Agents (a)" supportedStandardRef="ccpa"/>
            <standard ref="Authorized Agents (d)" supportedStandardRef="ccpa"/>
            <standard ref="Consumers Less Than Under 13 Years of Age (c)" supportedStandardRef="ccpa"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="General Rules Regarding Verification (a)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(1)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (h)" supportedStandardRef="ccpa"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-10 Adaptive Authentication" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-12 Identity Proofing" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-2 Identification and Authentication (organizational Users)" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-3 Device Identification and Authentication" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-4 Identifier Management" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-5 AUTHENTICATOR MANAGEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-8 Identification and Authentication (non-organizational Users)" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Multi-factor Authentication" supportedStandardRef="D3FEND"/>
            <standard ref="PR.AA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-1: Identities and credentials are issued, managed, verified, revoked, and audited for authorized devices, users and processes" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals' security and privacy risks and other organizational risks)" supportedStandardRef="nist-csf"/>
            <standard ref="Requests to Correct (a)" supportedStandardRef="ccpa"/>
            <standard ref="Requests to Know (a)" supportedStandardRef="ccpa"/>
            <standard ref="Requests to Know (b)" supportedStandardRef="ccpa"/>
            <standard ref="Secure authentication" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Verification for Non-Accountholders (b)" supportedStandardRef="ccpa"/>
            <standard ref="Verification for Non-Accountholders (c)" supportedStandardRef="ccpa"/>
            <standard ref="Verification for Password-Protected Accounts (a)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1018 - User Account Management"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Network Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-7 UNSUCCESSFUL LOGON ATTEMPTS"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.159">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-RESET-PASSWORD-NO-SENSITIVE-DATA-URL" name="No sensitive data in URLs" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;1. Ensure all web traffic, especially data transmissions that could involve sensitive information, is encrypted using HTTPS. This secures the data in transit, preventing attackers from easily intercepting and reading the contents.&lt;/p&gt; &lt;p&gt;2. Avoid using GET requests to transmit sensitive data such as passwords, authentication tokens, or personal information. GET requests append data to the URL, which can be cached, logged, or remain in the browser history, posing a significant security risk.&lt;/p&gt; &lt;p&gt;3. When transmitting sensitive data, use POST requests instead. Include this data within the body of the request or in the request headers, where it is not exposed in the URL and is better protected by the HTTPS encryption.&lt;/p&gt; &lt;p&gt;4. Implement content security policies (CSP) to reduce the risk of injection attacks and ensure that the data is handled securely by the browser. CSP can also help in mitigating various other types of attacks, including cross-site scripting (XSS).&lt;/p&gt; &lt;p&gt;5. Regularly audit your application to ensure that sensitive data is never accidentally included in URLs. Tools and automated tests can scan for patterns that resemble sensitive data being transmitted inappropriately.&lt;/p&gt; &lt;p&gt;6. Educate developers and relevant stakeholders about the importance of secure data handling practices. Ensure that everyone involved in the development process understands why sensitive data must be protected and the consequences of its exposure.&lt;/p&gt; &lt;p&gt;References to good security practices include adhering to the guidelines provided by OWASP (Open Web Application Security Project) and utilizing HTTPS as recommended by the IETF (Internet Engineering Task Force) for secure data transmission.&lt;/p&gt; </desc>
          <implementations/>
          <references>
            <reference name="Sensitive Information in URL" url="https://www.iothreat.com/blog/information-disclosure-sensitive-information-in-url"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="278-646" supportedStandardRef="OpenCRE"/>
            <standard ref="4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-17 Remote Access" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-18 Wireless Access" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-3 Information Exchange" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-9 Internal System Connections" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed" supportedStandardRef="nist-csf"/>
            <standard ref="Executable Denylisting" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.AM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.AM-3: Organizational communication and data flows are mapped" supportedStandardRef="nist-csf"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Opt-Out Preference Signals (g)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-3: Remote access is managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-2: Data-in-transit is protected" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-11 Trusted Path" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-16 Transmission of Security and Privacy Attributes" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY" supportedStandardRef="NIST 800-53"/>
            <standard ref="Verification for Password-Protected Accounts (a)" supportedStandardRef="ccpa"/>
            <standard ref="Verification for Password-Protected Accounts (b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1041 - Encrypt Sensitive Information||ATT&amp;CK Enterprise - M1057 - Data Loss Prevention"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.159">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-RESET-PASSWORD-STORED-TOKENS" name="Protect stored tokens" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;1. Hash password reset tokens before storing them in the database. Use strong and contemporary hashing algorithms like SHA-256 or bcrypt. This ensures that even if the database is compromised, the tokens cannot be used by attackers without also cracking the hash function.&lt;/p&gt; &lt;p&gt;2. Implement a strong salt mechanism when hashing tokens. Generate a unique salt for each token to prevent the use of rainbow tables in hash cracking attempts. Store the salt alongside the hashed token in the database.&lt;/p&gt; &lt;p&gt;3. Always use HTTPS for communications involving sensitive data, including password reset tokens. This secures the data in transit, preventing interception or tampering by unauthorized parties.&lt;/p&gt; &lt;p&gt;4. Encrypt the tokens using secure encryption algorithms when storing them in the database, even after hashing, if the system design allows it. This adds an additional layer of security, ensuring that the hashed tokens are not directly accessible even if database encryption is somehow bypassed.&lt;/p&gt; &lt;p&gt;5. Regularly audit your storage and communication security practices for handling reset tokens. This includes reviewing the choice of hashing and encryption algorithms, ensuring they remain up-to-date with current security standards.&lt;/p&gt; &lt;p&gt;6. Educate the development and operations teams on the importance of securing sensitive data, including password reset tokens. Ensure that they are aware of the latest security practices and the potential consequences of data breaches.&lt;/p&gt; &lt;p&gt;References to good security practices can be found in the OWASP (Open Web Application Security Project) guidelines, especially regarding secure storage and communication of sensitive information. Following industry standards and recommendations from security bodies like NIST (National Institute of Standards and Technology) for hashing and encryption practices is also advisable.&lt;/p&gt; </desc>
          <implementations/>
          <references>
            <reference name="Implementing a forgot password flow (with pseudo code)" url="https://supertokens.com/blog/implementing-a-forgot-password-flow"/>
          </references>
          <standards>
            <standard ref="12.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="633-428" supportedStandardRef="OpenCRE"/>
            <standard ref="7.1.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.4.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="A3.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="AC-7 UNSUCCESSFUL LOGON ATTEMPTS" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-8 SYSTEM USE NOTIFICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-9 PREVIOUS LOGON NOTIFICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="Account Locking" supportedStandardRef="D3FEND"/>
            <standard ref="Authentication information" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Authorized Agents (a)" supportedStandardRef="ccpa"/>
            <standard ref="Authorized Agents (d)" supportedStandardRef="ccpa"/>
            <standard ref="Consumers Less Than Under 13 Years of Age (c)" supportedStandardRef="ccpa"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="General Rules Regarding Verification (a)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(1)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (h)" supportedStandardRef="ccpa"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-10 Adaptive Authentication" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-12 Identity Proofing" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-2 Identification and Authentication (organizational Users)" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-3 Device Identification and Authentication" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-4 Identifier Management" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-5 AUTHENTICATOR MANAGEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-8 Identification and Authentication (non-organizational Users)" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Multi-factor Authentication" supportedStandardRef="D3FEND"/>
            <standard ref="PR.AA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-1: Identities and credentials are issued, managed, verified, revoked, and audited for authorized devices, users and processes" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals' security and privacy risks and other organizational risks)" supportedStandardRef="nist-csf"/>
            <standard ref="Requests to Correct (a)" supportedStandardRef="ccpa"/>
            <standard ref="Requests to Know (a)" supportedStandardRef="ccpa"/>
            <standard ref="Requests to Know (b)" supportedStandardRef="ccpa"/>
            <standard ref="Secure authentication" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Verification for Non-Accountholders (b)" supportedStandardRef="ccpa"/>
            <standard ref="Verification for Non-Accountholders (c)" supportedStandardRef="ccpa"/>
            <standard ref="Verification for Password-Protected Accounts (a)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1041 - Encrypt Sensitive Information||ATT&amp;CK ICS - M0802 - Communication Authenticity"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="IA-5 AUTHENTICATOR MANAGEMENT"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:40.159">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="functional-components">
          <threats>
            <threat ref="T-RESET-PASSWORD-INSECURE-URL-STORAGE" name="Attackers take advantage of insecure reset URLs or insecure storage/generation of tokens" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;strong&gt;General Threat Description&lt;/strong&gt; &lt;p&gt;Attackers exploit vulnerabilities in the password reset process, a critical component in maintaining account security across websites, services, or devices. This threat involves attackers taking advantage of insecurely crafted reset URLs, which contain tokens used to authenticate a password reset request. Additionally, vulnerabilities can arise from the insecure storage or predictable generation of these tokens. If an attacker intercepts or recreates a token, they can gain unauthorized access to the password reset functionality, thereby compromising user accounts.&lt;/p&gt;
&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt; &lt;p&gt;The threat agents in this scenario are typically cybercriminals or malicious actors who have the technical know-how to intercept network traffic, exploit database vulnerabilities, or predict token generation algorithms. Attack vectors include but are not limited to man-in-the-middle (MITM) attacks, where attackers intercept reset URLs in transit, direct attacks on databases to extract stored tokens, and exploitation of weak token generation mechanisms that allow for token prediction.&lt;/p&gt;
&lt;strong&gt;Impacts&lt;/strong&gt; &lt;p&gt;The primary impact is unauthorized account access, which can lead to data theft, identity theft, financial loss, or reputational damage for both the users and the service providers. Additionally, exploiting this vulnerability undermines user trust in the security practices of the website, service, or device, potentially leading to reduced user engagement or abandonment of the service.&lt;/p&gt;
&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt; &lt;p&gt;1. An attacker performs a MITM attack on an unsecured network, such as public Wi-Fi, capturing password reset requests from users. The attacker then uses the intercepted URL containing the reset token to access the password reset page and change the user's password, gaining full control of the account.&lt;/p&gt; &lt;p&gt;2. A malicious actor discovers that a website generates password reset tokens based on a predictable pattern (e.g., time-based without sufficient randomness). By generating a sequence of potential tokens, the attacker successfully requests a password reset for a target account and gains access.&lt;/p&gt; &lt;p&gt;3. An attacker exploits a vulnerability in the website's database to extract stored password reset tokens. With these tokens, the attacker is able to reset user passwords without needing to intercept the reset email or SMS, directly compromising multiple accounts.&lt;/p&gt; </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="100"/>
              <references>
                <reference name="INSECURE TOKEN GENERATION" url="https://cqr.company/web-vulnerabilities/insecure-token-generation/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-922">
                  <countermeasures>
                    <countermeasure ref="C-RESET-PASSWORD-NO-SENSITIVE-DATA-URL" mitigation="50"/>
                    <countermeasure ref="C-RESET-PASSWORD-STORED-TOKENS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-RESET-PASSWORD-NO-SENSITIVE-DATA-URL" mitigation="50"/>
                <countermeasure ref="C-RESET-PASSWORD-STORED-TOKENS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1600 - Weaken Encryption||ATT&amp;CK Enterprise - T1212 - Exploitation for Credential Access||ATT&amp;CK Enterprise - T1552 - Unsecured Credentials||ATT&amp;CK Enterprise - T1557 - Adversary-in-the-Middle"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure||Elevation of Privilege"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-TAMPERING" name="Tampering" desc="Tampering refers to unauthorized modification of data or systems. Attackers may alter data in transit or modify software components to introduce vulnerabilities or compromise the integrity of the system." library="functional-components">
          <threats>
            <threat ref="T-RESET-PASSWORD-BRUTE-FORCE" name="Attackers attempt to guess the password reset tokens" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;strong&gt;General Threat Description&lt;/strong&gt; &lt;p&gt;Attackers engaging in this type of threat attempt to compromise the security of user accounts by guessing or brute-forcing password reset tokens. These tokens are essential components of the password reset process, serving as one-time credentials that verify the legitimacy of requests to set new passwords. The threat involves methods to predict, decipher, or manipulate these tokens, enabling unauthorized access to accounts. Techniques such as brute force attacks, analysis of token generation algorithms, or exploitation of system vulnerabilities related to token generation and delivery are commonly employed.&lt;/p&gt;
&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt; &lt;p&gt;The threat agents are typically knowledgeable individuals or groups with a background in cybersecurity weaknesses and exploit development. They might use automated tools to perform brute force attacks or analyze the password reset feature for vulnerabilities that can be exploited to guess or manipulate tokens. Attack vectors include the direct targeting of the password reset process, exploiting server-side vulnerabilities to influence token generation, and intercepting token communications to apply reverse engineering techniques.&lt;/p&gt;
&lt;strong&gt;Impacts&lt;/strong&gt; &lt;p&gt;The impacts of successful attacks are severe, leading to unauthorized account access, which may result in identity theft, financial loss, unauthorized access to sensitive information, and potential lateral movement within networked systems. For organizations, this can lead to significant reputational damage, loss of customer trust, and potential legal repercussions. Additionally, the discovery of such vulnerabilities can lead to widespread exploitation if the underlying issue is not promptly and effectively addressed.&lt;/p&gt;
&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt; &lt;p&gt;1. An attacker uses a brute force tool to generate a wide range of token values based on the observed pattern or structure of legitimate tokens. Upon successfully guessing a valid token, the attacker resets the password for a high-value account, gaining unauthorized access.&lt;/p&gt; &lt;p&gt;2. Exploiting a vulnerability in the password reset system, an attacker manipulates the process to generate tokens that are predictable or easily guessed. This manipulation allows the attacker to bypass the usual security checks and gain control over user accounts.&lt;/p&gt; &lt;p&gt;3. Through password reset poisoning, an attacker intercepts a password reset request and manipulates the process to generate a reset link that redirects to an attacker-controlled domain. This allows the attacker to capture the token and use it to reset the user's password.&lt;/p&gt; </desc>
              <riskRating confidentiality="50" integrity="75" availability="1" easeOfExploitation="100"/>
              <references>
                <reference name="Exploring Password Reset Vulnerabilities and Security Best Practices" url="https://www.vaadata.com/blog/exploring-password-reset-vulnerabilities-and-security-best-practices/"/>
                <reference name="Password reset poisoning" url="https://portswigger.net/web-security/host-header/exploiting/password-reset-poisoning"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-1390">
                  <countermeasures>
                    <countermeasure ref="C-RESET-PASSWORD-RATE-TIME" mitigation="50"/>
                    <countermeasure ref="C-RESET-PASSWORD-TOKENS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-RESET-PASSWORD-RATE-TIME" mitigation="50"/>
                <countermeasure ref="C-RESET-PASSWORD-TOKENS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1110 - Brute Force||ATT&amp;CK Enterprise - T1552 - Unsecured Credentials||ATT&amp;CK Enterprise - TA0006 - Credential Access"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering||Elevation of Privilege"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="03b4966a-b8ed-43d3-b247-85429b55ec2f" diagramComponentId="cf2bd445-0f06-4836-857a-5b78490c97ba" ref="fc18a151-507a-4ce9-9fcb-66e09ace4125" name="Transaction Service" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="out-of-scope">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="2100b290-dbf7-41b3-a111-2515184d949a" diagramComponentId="d3193475-3506-4a14-9f3c-d427495ce6d6" ref="626eee29-4ee8-49b0-a5c9-0eac2b1e96f7" name="User Profile" desc="" library="functional-components" parentComponentRef="13a37286-a00d-4b30-956c-a1b4b032a40c" componentDefinitionRef="CD-V2-USER-PROFILE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-20" name="CWE-20" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-20: Improper Input Validation
The product receives input or data, but it does
        not validate or incorrectly validates that the input has the
        properties that are required to process the data safely and
        correctly.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.305">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-308" name="CWE-308" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-308: Use of Single-factor Authentication
The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.
While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.306">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="CWE-311" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-311: Missing Encryption of Sensitive Data
The product does not encrypt sensitive or critical information before storage or transmission.
The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.306">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-USER-PROFILE-CM2" name="Implement Multi-Factor Authentication (MFA)" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing Multi-Factor Authentication (MFA) for a User Profile component adds an essential layer of security by requiring users to provide two or more verification factors to gain access or perform specific actions. This reduces the risk of unauthorized access resulting from compromised credentials. Here’s a step-by-step guide to implementing MFA:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1: Choose Your MFA Methods&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Select at least two different authentication factors&lt;/strong&gt; from the following categories: something the user knows (password or PIN), something the user has (a mobile device, security token, or smart card), and something the user is (biometric verification like fingerprints or facial recognition).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Consider user experience and security needs&lt;/strong&gt; when selecting MFA methods. For instance, SMS-based codes and authentication apps are popular choices for their balance of convenience and security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 2: Integrate MFA into Your User Profile System&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Use a reputable MFA library or service&lt;/strong&gt; that is compatible with your development stack. Many cloud providers and security companies offer MFA services that can be easily integrated into existing systems.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Configure the MFA service or library&lt;/strong&gt; according to the provider's documentation, ensuring it is set up to manage the authentication factors you've chosen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 3: Update Authentication Flows&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Modify the login and sensitive action workflows&lt;/strong&gt; to include MFA. After entering their standard credentials (e.g., username and password), prompt users to complete an additional authentication step.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement logic to handle different MFA methods&lt;/strong&gt;, such as sending a code via SMS or email, generating time-based codes through an app, or prompting for biometric verification.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 4: Securely Store MFA Credentials&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Store MFA secret keys or tokens securely&lt;/strong&gt;, using encryption and secure access controls. Ensure they are protected both in transit and at rest.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Follow best practices for any biometric data&lt;/strong&gt;, ensuring it is stored in a manner that respects privacy and is secure against unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 5: Provide User Instructions and Support&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Guide users through setting up MFA&lt;/strong&gt; for their profiles. Offer clear instructions on activating and using their chosen authentication factors.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Offer support for users who have issues&lt;/strong&gt; with MFA, including options to reset or change their authentication factors if they lose access to their device or encounter other problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 6: Test and Monitor&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Thoroughly test the MFA implementation&lt;/strong&gt; across different devices and scenarios to ensure reliability and usability.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Monitor for failed authentication attempts&lt;/strong&gt; and investigate any anomalies that could indicate attempted unauthorized access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Best Practices and Considerations&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Fallback options&lt;/strong&gt;: Provide alternatives in case the primary MFA method fails (e.g., backup codes or secondary verification methods).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Rate limiting&lt;/strong&gt;: Implement rate limiting for MFA attempts to prevent brute force attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Compliance&lt;/strong&gt;: Ensure your MFA implementation complies with relevant regulations and standards, such as GDPR for privacy or PCI DSS for payment information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;User education&lt;/strong&gt;: Educate your users on the importance of MFA and how to securely manage their authentication factors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps and considerations, developers can effectively implement MFA for the User Profile component, significantly enhancing the security posture of the application.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="724-770" supportedStandardRef="OpenCRE"/>
            <standard ref="8.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-14 PERMITTED ACTIONS WITHOUT IDENTIFICATION OR AUTHENTICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16 Security and Privacy Attributes" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-19 Access Control for Mobile Devices" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2 ACCOUNT MANAGEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24 Access Control Decisions" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-25 Reference Monitor" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5 SEPARATION OF DUTIES" supportedStandardRef="NIST 800-53"/>
            <standard ref="Account Locking" supportedStandardRef="D3FEND"/>
            <standard ref="Broken Access Controls" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="Domain Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="General Rules Regarding Verification (c)(1)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(3)" supportedStandardRef="ccpa"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Multi-factor Authentication" supportedStandardRef="D3FEND"/>
            <standard ref="Opt-Out Preference Signals (c)(5)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-3: Remote access is managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals' security and privacy risks and other organizational risks)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Requests to Limit Use and Disclosure of Sensitive Personal Information (m)(2)" supportedStandardRef="ccpa"/>
            <standard ref="SC-2 Separation of System and User Functionality" supportedStandardRef="NIST 800-53"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1032 - Multi-factor Authentication"/>
            <customField ref="SF-C-SCOPE" value="Data Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-2 ACCOUNT MANAGEMENT"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.238">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-USER-PROFILE-CM3" name="Implement secure session management" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To safeguard the "User Profile" software component through secure session management, follow these targeted, actionable steps. Secure session management is crucial to prevent unauthorized access and protect user data. This guidance focuses on creating and managing sessions securely, with an emphasis on web applications.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1: Generate Secure Session Identifiers&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Use Secure, Random Values&lt;/strong&gt;: Ensure session identifiers (IDs) are generated using a cryptographically secure random number generator.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Maintain Sufficient Length&lt;/strong&gt;: Session IDs should be long enough to prevent brute force attacks. Aim for at least 128 bits of entropy.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 2: Use HTTPS for All Transactions&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Implement HTTPS&lt;/strong&gt;: Ensure that all communication between the client and server is encrypted using HTTPS to protect the session ID and other sensitive data in transit.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Secure Cookies&lt;/strong&gt;: Set the &lt;strong&gt;Secure&lt;/strong&gt; attribute on all cookies to ensure they are only sent over encrypted connections.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 3: Proper Session Expiration&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Set Timeout Limits&lt;/strong&gt;: Implement automatic session expiration. Sessions should time out after a predefined period of inactivity (e.g., 15 to 30 minutes).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Clear Session at Logout&lt;/strong&gt;: Ensure that sessions are completely invalidated and cleared from the server upon user logout.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 4: Implement Cookie Attributes Correctly&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;HttpOnly Attribute&lt;/strong&gt;: Set the &lt;strong&gt;HttpOnly&lt;/strong&gt; attribute for cookies to prevent access to the session cookie via client-side scripts, mitigating the risk of cross-site scripting (XSS) attacks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;SameSite Attribute&lt;/strong&gt;: Use the &lt;strong&gt;SameSite&lt;/strong&gt; attribute to restrict how cookies are sent with cross-site requests, providing some protection against cross-site request forgery (CSRF) attacks.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 5: Validate Session ID for Every Request&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Verify Sessions&lt;/strong&gt;: Check the validity of the session ID for every request to ensure it matches the user and hasn't been tampered with.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regenerate Session IDs&lt;/strong&gt;: Upon login, logout, and during regular intervals, regenerate session IDs to mitigate session fixation attacks.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 6: Store Sessions Securely&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Use Server-Side Storage&lt;/strong&gt;: Preferably store session data on the server side where possible, using a secure and scalable session management system.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Encrypt Sensitive Data&lt;/strong&gt;: If any sensitive information must be stored within the session, ensure it is encrypted.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Monitor and Log Session Activities&lt;/strong&gt;: Implement monitoring to detect unusual session patterns or behaviors that may indicate an attack.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Cross-Site Scripting (XSS) Protection&lt;/strong&gt;: Sanitize user input and implement content security policies to prevent XSS attacks, which can compromise session security.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Cross-Site Request Forgery (CSRF) Protection&lt;/strong&gt;: Use anti-CSRF tokens in forms and requests to ensure that state-changing requests originate from your application.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Security Audits&lt;/strong&gt;: Conduct regular security reviews and penetration testing focused on session management to identify and rectify potential vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, developers can significantly enhance the security of user sessions within their applications, protecting both user data and the integrity of the application itself.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="544" supportedStandardRef="cwe-standard"/>
            <standard ref="668-364" supportedStandardRef="OpenCRE"/>
            <standard ref="8.2.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-1: Data-at-rest is protected" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="SC-28 PROTECTION OF INFORMATION AT REST" supportedStandardRef="NIST 800-53"/>
            <standard ref="V9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1041 - Encrypt Sensitive Information"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security||Network Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-28 PROTECTION OF INFORMATION AT REST"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.238">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-USER-PROFILE-CM1" name="Sanitize all input to avoid injection attacks" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty@iriusrisk.com" library="functional-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When developing software, particularly components like user profiles that accept user-generated input, it’s crucial to mitigate the risk of injection attacks. Injection attacks occur when attackers input malicious data that the system interprets and executes as commands. This can lead to unauthorized access, data leaks, and system compromise. To prevent such vulnerabilities, follow these steps to sanitize inputs effectively:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Validate Input Strictly:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Enforce strict type, length, and format for all inputs. Use regular expressions to validate string inputs against expected patterns.&lt;/li&gt;
 &lt;li&gt;Implement client-side validation for immediate feedback but always perform server-side validation as the primary defense mechanism.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Employ Parameterized Queries:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Use parameterized queries or prepared statements for database access. This ensures that input is treated only as data and not executable code, effectively neutralizing SQL injection threats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Utilize Content Security Policy (CSP):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement a Content Security Policy as an additional layer of protection against Cross-Site Scripting (XSS) attacks. CSP can restrict how and where content can be loaded, preventing the execution of unauthorized scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Encode Data:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Before displaying user input on web pages or in application interfaces, encode the data to escape any characters that could be interpreted as executable code. This is especially crucial for HTML, JavaScript, and SQL outputs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Leverage Security Libraries and Frameworks:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Take advantage of existing security libraries and frameworks that offer input sanitization and validation functions. These are often well-tested and updated to defend against emerging threats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Conduct Regular Security Audits:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Regularly review and audit your codebase and dependencies for vulnerabilities. Automated security scanning tools can identify potential injection flaws in your application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Educate and Train Developers:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that all team members are aware of the risks associated with injection attacks and understand the importance of input sanitization. Promote a culture of security within the development team.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Test for Vulnerabilities:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Implement comprehensive testing strategies, including static analysis, dynamic analysis, and penetration testing, to uncover and mitigate injection vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By adhering to these guidelines and adopting a proactive security posture, developers can significantly reduce the risk of injection attacks on user profile components and other vulnerable parts of their applications. Always stay informed about the latest security best practices and vulnerabilities to maintain the robustness of your security measures.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1026" supportedStandardRef="cwe-standard"/>
            <standard ref="715-334" supportedStandardRef="OpenCRE"/>
            <standard ref="C2" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Docker Security Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V14.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Vulnerable Dependency Management Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK ICS - M0818 - Validate Program Inputs||ATT&amp;CK Mobile - M1013 - Application Developer Guidance"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V14.2.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-12-30T10:24:39.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="functional-components">
          <threats>
            <threat ref="T-USER-PROFILE-T3" name="Attackers take advantage of exposed sensitive data" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Exposed sensitive data refers to personal or confidential information that becomes accessible to unauthorized individuals due to inadequate protection measures. In the context of a User Profile component, this could include names, email addresses, passwords, payment information, or any personal data that users submit. Exposure can occur through various means, such as improper access controls, lack of encryption, or inadvertent leaks via logs or error messages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents&lt;/strong&gt;: Includes cybercriminals aiming for identity theft or financial gain, competitors seeking confidential information, and insiders with malicious intent or negligence.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors&lt;/strong&gt;: 
  &lt;ul&gt;
   &lt;li&gt;&lt;strong&gt;Insecure Direct Object References (IDOR)&lt;/strong&gt;: Attackers manipulate direct references to access other users' data.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Insufficient Data Encryption&lt;/strong&gt;: Data transmitted or stored without encryption can be intercepted or accessed.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Misconfigured Databases or Servers&lt;/strong&gt;: Incorrect configurations can expose data through unintended public access points.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Caching Mechanisms&lt;/strong&gt;: Sensitive information stored in cache without proper access controls could be leaked.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Identity Theft&lt;/strong&gt;: Exposed personal details can lead to identity theft, significantly impacting users' lives.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss&lt;/strong&gt;: Exposure of payment information can lead to unauthorized transactions and financial losses for users.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputation Damage&lt;/strong&gt;: Organizations responsible for data breaches face severe reputational damage, eroding trust among users and partners.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Legal and Compliance Violations&lt;/strong&gt;: Breaches involving sensitive data can result in legal penalties, fines, and failure to comply with data protection regulations like GDPR or HIPAA.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;IDOR Exploit&lt;/strong&gt;: An attacker discovers that the user profile edit function is vulnerable to IDOR. By changing the user ID in the URL, they gain access to and modify other users' profiles, harvesting sensitive data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Database Misconfiguration&lt;/strong&gt;: A database containing user profiles is mistakenly configured to allow public access. Sensitive user data is indexed by search engines, making it easily accessible to anyone performing a simple search.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Insecure API Endpoint&lt;/strong&gt;: An API endpoint designed to fetch user profile details does not properly verify the requestor's identity or permissions. Attackers exploit this by crafting requests that retrieve personal information of all users.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Error Message Leakage&lt;/strong&gt;: A coding error in the user profile management system leads to detailed error messages being displayed, including sensitive database information. Attackers use this information to further exploit the system.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To mitigate the risk of exposed sensitive data:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Implement Strict Access Controls&lt;/strong&gt;: Ensure that only authenticated and authorized users can access or modify user profile data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Encrypt Sensitive Data&lt;/strong&gt;: Use strong encryption for storing and transmitting user data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regularly Audit and Configure Security Settings&lt;/strong&gt;: Regularly review and update configurations for databases, servers, and applications to prevent accidental exposure.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Data Minimization&lt;/strong&gt;: Collect and retain only the minimum necessary personal information for users.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;: Implement secure error handling practices that do not expose sensitive information in logs or error messages.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Employees&lt;/strong&gt;: Provide training on data protection best practices and the importance of maintaining the confidentiality of user data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By addressing these aspects, organizations can significantly reduce the risk associated with the exposure of sensitive data within user profile components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="1" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="C-USER-PROFILE-CM3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-USER-PROFILE-CM3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1552.001 - Credentials In Files||ATT&amp;CK Enterprise - T1041 - Exfiltration Over C2 Channel||ATT&amp;CK Enterprise - TA0010 - Exfiltration||ATT&amp;CK Enterprise - T1048 - Exfiltration Over Alternative Protocol||ATT&amp;CK Enterprise - T1567 - Exfiltration Over Web Service||ATT&amp;CK Enterprise - T1537 - Transfer Data to Cloud Account||ATT&amp;CK Enterprise - T1074 - Data Staged"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-SPOOFING" name="Spoofing" desc="Spoofing involves an attacker pretending to be someone else by falsifying data or identity. This can include spoofing email addresses, IP addresses, or user identities to gain unauthorized access to systems or information." library="functional-components">
          <threats>
            <threat ref="T-USER-PROFILE-T2" name="Attackers exploit flaws in access control systems" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Access control systems are designed to restrict unauthorized users from performing certain actions within a software system, typically through mechanisms like authentication and authorization. Flaws in these systems can arise from misconfigurations, software vulnerabilities, or inadequate security policies, potentially allowing attackers to bypass security measures. This can lead to unauthorized access to or manipulation of user profiles and associated data, which may contain sensitive personal information, preferences, and security settings.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents&lt;/strong&gt; include:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Cybercriminals&lt;/strong&gt;: Seeking financial gain through data theft, fraud, or selling access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Disgruntled Employees&lt;/strong&gt;: Internal actors who exploit their knowledge of the system's weaknesses.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Competitors&lt;/strong&gt;: Looking to gain a competitive edge by stealing confidential data.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Hacktivists or State-Sponsored Actors&lt;/strong&gt;: Targeting systems for political, ideological, or strategic reasons.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Attack Vectors&lt;/strong&gt; involve:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;: Exploiting vulnerabilities to gain elevated access rights.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Authorization Bypass&lt;/strong&gt;: Manipulating the system to access functions or data without proper authorization.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Stuffing&lt;/strong&gt;: Using breached username and password pairs to gain unauthorized access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Session Hijacking&lt;/strong&gt;: Exploiting flaws in session management to take over a user's legitimate session.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach&lt;/strong&gt;: Unauthorized access to user profiles can lead to the exposure of sensitive personal and financial information.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Identity Theft&lt;/strong&gt;: Attackers can use stolen data for impersonation and fraud.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Loss of Integrity&lt;/strong&gt;: Modification of user data can lead to incorrect or malicious actions being taken on behalf of the user.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage&lt;/strong&gt;: Breaches can severely damage an organization's reputation, leading to loss of trust and customers.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regulatory and Legal Consequences&lt;/strong&gt;: Non-compliance with data protection laws can result in fines and legal action.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker discovers a flaw in the application's role-based access control mechanism that allows unauthorized API calls to be made without proper role verification. The attacker exploits this to access and export user profiles en masse.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: Through credential stuffing, an attacker gains access to a user's profile with administrative privileges due to reused passwords from another breached service. The attacker then alters access controls to grant unauthorized access to other attackers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: A session management vulnerability allows an attacker to hijack an authenticated user's session token. The attacker uses this token to impersonate the user, accessing and manipulating the user's profile information without detection.&lt;/p&gt;
&lt;p&gt;To mitigate these threats, it's crucial to implement robust access control mechanisms, regularly update and patch software components, employ multi-factor authentication, conduct regular security audits and vulnerability assessments, and educate users about security best practices.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="1" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-308">
                  <countermeasures>
                    <countermeasure ref="C-USER-PROFILE-CM2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-USER-PROFILE-CM2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1556 - Modify Authentication Process||ATT&amp;CK Enterprise - T1550 - Use Alternate Authentication Material||ATT&amp;CK Enterprise - T1110 - Brute Force||ATT&amp;CK Enterprise - T1111 - Multi-Factor Authentication Interception||ATT&amp;CK Enterprise - T1187 - Forced Authentication"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-TAMPERING" name="Tampering" desc="Tampering refers to unauthorized modification of data or systems. Attackers may alter data in transit or modify software components to introduce vulnerabilities or compromise the integrity of the system." library="functional-components">
          <threats>
            <threat ref="T-USER-PROFILE-T1" name="Attackers inject malicious code into systems by exploiting security weaknesses" state="Expose" source="RULES" edited="false" owner="ddoughty@iriusrisk.com" library="functional-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This threat involves attackers injecting malicious code into systems by exploiting security weaknesses in the software component handling user profiles. The injected code could range from scripts designed to steal data to commands that compromise the integrity or availability of the system. This vulnerability often stems from insufficient input validation, allowing attackers to insert and execute unauthorized code within the system's operational context.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The primary threat agents are cyber attackers ranging from individual hackers to organized cybercrime groups. They exploit vulnerabilities in the software's input validation processes, using attack vectors such as crafted inputs submitted through forms, URLs, or any interface that accepts user data. The attackers might also employ social engineering techniques to trick users into executing the malicious code themselves.&lt;/p&gt;
&lt;p&gt;Impacts:&lt;/p&gt;
&lt;p&gt;The impacts of such an attack can be severe and multifaceted, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Unauthorized access to or theft of sensitive user data, potentially leading to identity theft or financial fraud.&lt;/li&gt;
 &lt;li&gt;Compromise of system integrity, allowing attackers to alter or delete critical data.&lt;/li&gt;
 &lt;li&gt;Disruption of service, which could degrade the user experience or completely disable the service.&lt;/li&gt;
 &lt;li&gt;Damage to the organization’s reputation, leading to loss of trust among users and financial losses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 1&lt;/strong&gt;: An attacker discovers a vulnerability in the user profile component of a web application that fails to properly sanitize input. The attacker crafts a malicious script that is executed when a user views their profile. This script steals the user's session cookie and sends it to the attacker, allowing them to hijack the user's session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 2&lt;/strong&gt;: In another instance, the attacker injects a SQL command into a poorly secured user input field related to the user profile. This injection manipulates the backend database to grant the attacker unauthorized access to other users' profiles, exposing personal information or even altering user privileges.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario 3&lt;/strong&gt;: An attacker exploits a cross-site scripting (XSS) vulnerability in a user profile page to inject a malicious script. When any user visits the infected profile, the script redirects them to a phishing site controlled by the attacker, aiming to steal their credentials.&lt;/p&gt;
&lt;p&gt;To mitigate such threats, organizations should employ rigorous input validation, implement content security policies, regularly update and patch software components, and educate users on secure practices.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="C-USER-PROFILE-CM1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-USER-PROFILE-CM1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1190 - Exploit Public-Facing Application||ATT&amp;CK Enterprise - T1221 - Template Injection||ATT&amp;CK Enterprise - T1055 - Process Injection||ATT&amp;CK Enterprise - T1659 - Content Injection||ATT&amp;CK Mobile - T1516 - Input Injection"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
</template>

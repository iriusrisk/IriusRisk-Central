<?xml version="1.0" encoding="UTF-8"?>
<template ref="saas-application-aws-temp" name="SaaS Application AWS Temp" tags="" modelUpdated="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets>
    <asset type="" name="Credit Card Data" desc="Card holder data including the full PAN and CVV number." identifier="">
      <classification name="Cardholder data" desc="Credit card data under the remit of PCI" confidentiality="100" integrity="100" availability="30"/>
    </asset>
    <asset type="" name="Customer Data" desc="Data that uniquely identifies customers." identifier="">
      <classification name="Personally Identifiable Information" desc="&#10;                Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity.&#10;                " confidentiality="50" integrity="50" availability="20"/>
    </asset>
    <asset type="" name="Personally Identifiable Information" desc="Any information relating to an identified or identifiable natural person &#13;&#10;('Data Subject') an identifiable person is one who can be identified, &#13;&#10;directly or indirectly, in particular by reference to an identification &#13;&#10;number or to one or more factors specific to his physical, physiological, &#13;&#10;mental, economic, cultural or social identity." identifier="">
      <classification name="Personally Identifiable Information" desc="&#10;                Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity.&#10;                " confidentiality="50" integrity="50" availability="20"/>
    </asset>
  </assets>
  <settings/>
  <dataflows>
    <dataflow name="Web Application - Server side -&gt; AWS API Gateway" ref="1d649cc7-5b20-45a5-8562-1468e4c387e3" source="d1a1b0f7-5b99-4ca2-af67-9e71088c8410" target="9d87f864-959a-494f-8428-175e7fc43c53">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Microservice -&gt; AWS API Gateway" ref="3509ad2b-2463-41bb-8fcf-1be323318993" source="c001a04f-8741-4992-b310-7e85b5725772" target="9d87f864-959a-494f-8428-175e7fc43c53">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS API Gateway -&gt; Microservice" ref="3b30bcf0-8689-4c52-a28b-5673d76c8627" source="9d87f864-959a-494f-8428-175e7fc43c53" target="c001a04f-8741-4992-b310-7e85b5725772">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web UI -&gt; Web Application - Server side" ref="9767482a-5210-440c-a6b7-bbca126b3c47" source="92de7fbe-61ab-4134-a0c5-9c879d43bc80" target="d1a1b0f7-5b99-4ca2-af67-9e71088c8410">
      <assets>
        <asset name="Credit Card Data"/>
        <asset name="Customer Data"/>
        <asset name="Personally Identifiable Information"/>
      </assets>
      <tags>
        <tag tag="2fa"/>
        <tag tag="https"/>
      </tags>
    </dataflow>
    <dataflow name="Microservice -&gt; AWS API Gateway" ref="98da5f2c-a7fb-4bcb-a468-58ac61cf315e" source="8771303a-abc7-4e55-8e65-d242c64e000b" target="9d87f864-959a-494f-8428-175e7fc43c53">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS API Gateway -&gt; Microservice" ref="aa97eca0-4fa0-4888-a004-93d95d35f5cf" source="9d87f864-959a-494f-8428-175e7fc43c53" target="8771303a-abc7-4e55-8e65-d242c64e000b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS API Gateway -&gt; Web Application - Server side" ref="b9779a47-e8fd-43c1-b700-2b1aa11b292e" source="9d87f864-959a-494f-8428-175e7fc43c53" target="d1a1b0f7-5b99-4ca2-af67-9e71088c8410">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Application - Server side -&gt; Web UI" ref="fd8453e4-91a2-4bfb-a2ed-1d02e498583d" source="d1a1b0f7-5b99-4ca2-af67-9e71088c8410" target="92de7fbe-61ab-4134-a0c5-9c879d43bc80">
      <assets>
        <asset name="Credit Card Data"/>
        <asset name="Customer Data"/>
        <asset name="Personally Identifiable Information"/>
      </assets>
      <tags>
        <tag tag="2fa"/>
        <tag tag="https"/>
      </tags>
    </dataflow>
  </dataflows>
  <customFields/>
  <components>
    <component uuid="2e26dcd1-cabf-4ed3-991c-c2e8a6720e57" diagramComponentId="8b4835c0-8daa-4f00-bc4b-d59230fbc0be" ref="9d87f864-959a-494f-8428-175e7fc43c53" name="AWS API Gateway" desc="" library="" parentComponentRef="fc7037a6-cb6b-4f34-b911-df47698ef23c" componentDefinitionRef="CD-V2-AWS-API-GATEWAY">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-200" name="CWE-200" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-200: Exposure of Sensitive Information to an Unauthorized Actor
The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-285" name="CWE-285" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-285: Improper Authorization
The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="CWE-693" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-693: Protection Mechanism Failure
The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.
This weakness covers three distinct situations. A "missing" protection mechanism occurs when the application does not define any mechanism against a certain class of attack. An "insufficient" protection mechanism might provide some defenses - for example, against the most common attacks - but it does not protect against everything that is intended. Finally, an "ignored" mechanism occurs when a mechanism is available and in active use within the product, but the developer has not applied it in some code path.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="CWE-778" state="0" impact="50" issueId="" issueLink="">
          <desc>CWE:
CWE-778: Insufficient Logging
When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-API-GATEWAY-CNT-04" name="Enable AWS CloudTrail" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To ensure comprehensive auditing and monitoring of all API calls and actions made through AWS API Gateway, configure AWS CloudTrail to record these activities. This setup is critical for maintaining a transparent and secure environment. Follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;b&gt;Enable AWS CloudTrail:&lt;/b&gt;
    Make sure AWS CloudTrail is enabled in your AWS account. CloudTrail records all API calls made to AWS services, including API Gateway, and stores the log files in an S3 bucket.
    &lt;br&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-create-and-update-a-trail.html"&gt;AWS CloudTrail Documentation&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;Create a Trail:&lt;/b&gt;
    Create a trail to capture all API Gateway calls. A trail configuration allows you to capture management and data events for API Gateway resources.
    &lt;br&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/creating-trail-using-console.html"&gt;Creating a CloudTrail Trail&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;Configure Logging for API Gateway:&lt;/b&gt;
    Ensure that API Gateway logging is enabled. You can configure it in the API Gateway console under the logging settings for each API stage.
    &lt;br&gt;&lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html"&gt;Setting up CloudWatch API Logging for API Gateway&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;Verify Logging and Monitoring:&lt;/b&gt;
    Consistently monitor the logs produced in CloudTrail and CloudWatch. This proactive measure will help in early detection of any unauthorized or suspicious activities.
    &lt;br&gt;&lt;a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html"&gt;AWS Security Hub Recommended Standards&lt;/a&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By following these steps, you will enhance the visibility and security of your AWS API Gateway environment, ensuring that all activities are recorded and monitored effectively.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="842-876" supportedStandardRef="OpenCRE"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AU-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-11 Audit Record Retention" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12 Audit Record Generation" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-16 Cross-organizational Audit Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-4 Audit Log Storage Capacity" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-5 Response to Audit Logging Process Failures" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-6 Audit Record Review, Analysis, and Reporting" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-7 Audit Record Reduction and Report Generation" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4: Event detection information is communicated" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.SC-4: Suppliers and third-party partners are routinely assessed using audits, test results, or other forms of evaluations to confirm they are meeting their contractual obligations." supportedStandardRef="nist-csf"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-3: Forensics are performed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-2: Incidents are reported consistent with established criteria" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="SI-11 Error Handling" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1057 - Data Loss Prevention"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-12 Audit Record Generation"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-API-GATEWAY-CNT-05" name="Enable AWS Config" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To ensure compliance and detect unauthorized changes in your AWS API Gateway resources, use AWS Config to continuously monitor and evaluate their configurations. AWS Config provides a detailed view of the AWS resource configurations, their relationships, and changes over time.&lt;/p&gt;

&lt;p&gt;Here’s a step-by-step guide for cloud engineers to implement this control:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Enable &lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/setting-up.html"&gt;AWS Config&lt;/a&gt; in your AWS account. Follow the documentation to set up AWS Config by defining an IAM role with the necessary permissions, specifying an S3 bucket to store configuration snapshots, and selecting the AWS resources you want to monitor.&lt;/li&gt;
    &lt;li&gt;Create a &lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html"&gt;Config Rule&lt;/a&gt; to evaluate the configuration of your API Gateway resources. AWS Config provides a set of managed rules, or you can create custom rules using AWS Lambda. For API Gateway, you might use the AWS-managed rule called "api-gateway-gateway-response-check", which checks for best practices and compliance.&lt;/li&gt;
    &lt;li&gt;Use the AWS Config console or CLI to associate the rules with the API Gateway resources. Define the compliance criteria that the rule will evaluate, such as specific security configurations or limits.&lt;/li&gt;
    &lt;li&gt;Set up notifications for non-compliance using Amazon SNS. This can help in alerting teams instantaneously if there are unauthorized changes or misconfigurations detected.&lt;/li&gt;
    &lt;li&gt;Regularly review the compliance status and history of changes in the AWS Config dashboard to maintain best practices and ensure security measures are consistently applied.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Refer to the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"&gt;AWS API Gateway Security Best Practices&lt;/a&gt; for more details on maintaining a secure configuration for your API Gateway resources.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="464-513" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Application Security Metrics" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CA-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-2 Control Assessments" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-5 Plan of Action and Milestones" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-6 Authorization" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-7 Continuous Monitoring" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-8 Penetration Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2: The physical environment is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6: External service provider activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1: Roles and responsibilities for detection are well defined to ensure accountability" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2: Detection activities comply with all applicable requirements" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3: Detection processes are tested" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4: Event detection information is communicated" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5: Detection processes are continuously improved" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-1: Asset vulnerabilities are identified and documented" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2: Cyber threat intelligence is received from information sharing forums and sources" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3: Threats, both internal and external, are identified and documented" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5: Threats, vulnerabilities, likelihoods, and impacts are used to determine risk" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-6: Risk responses are identified and prioritized" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4: Suppliers and third-party partners are routinely assessed using audits, test results, or other forms of evaluations to confirm they are meeting their contractual obligations." supportedStandardRef="nist-csf"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PM-31 Continuous Monitoring Strategy" supportedStandardRef="NIST 800-53"/>
            <standard ref="PM-6 Measures of Performance" supportedStandardRef="NIST 800-53"/>
            <standard ref="PO.3.3" supportedStandardRef="nist-ssdf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5: Processes are established to receive, analyze and respond to vulnerabilities disclosed to the organization from internal and external sources (e.g. internal testing, security bulletins, or security researchers)" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5: Voluntary information sharing occurs with external stakeholders to achieve broader cybersecurity situational awareness" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3: Newly identified vulnerabilities are mitigated or documented as accepted risks" supportedStandardRef="nist-csf"/>
            <standard ref="SI-20 Tainting" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5 Security Alerts, Advisories, and Directives" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1035 - Limit Access to Resource Over Network"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CA-7 Continuous Monitoring"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-API-GATEWAY-CNT-03" name="Implement Amazon CloudWatch alarms" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To ensure robust security monitoring of your API Gateway, it's critical to leverage Amazon CloudWatch metrics and alarms. This proactive measure will aid in the prompt detection and response to any anomalies or potential security issues.&lt;/p&gt;

&lt;p&gt;Begin by accessing the &lt;a href="https://aws.amazon.com/cloudwatch/"&gt;Amazon CloudWatch&lt;/a&gt; console within AWS Management Console. Navigate to the "Metrics" section to ensure you are monitoring the relevant metrics for API Gateway. Key metrics to focus on include:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;4XXError&lt;/strong&gt;: Counts the number of client-side errors (useful for detecting potential abuse).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;5XXError&lt;/strong&gt;: Counts the number of server-side errors (indicates the health of the backend or integration).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Count&lt;/strong&gt;: Number of API requests received (to identify unusual spikes in traffic).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt;: Measures the time taken from the API Gateway receiving a request until it responds (to detect performance degradation).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After identifying these metrics, set up CloudWatch Alarms to notify your security team when any of the thresholds are breached. To do this:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;In the CloudWatch console, go to "Alarms" and click on "Create Alarm".&lt;/li&gt;
    &lt;li&gt;Select the API Gateway metric you want to monitor, such as &lt;strong&gt;4XXError&lt;/strong&gt; or &lt;strong&gt;5XXError&lt;/strong&gt;.&lt;/li&gt;
    &lt;li&gt;Define the appropriate thresholds based on your security policy. For instance, configure an alarm to trigger if the &lt;strong&gt;5XXError&lt;/strong&gt; exceeds a specific number within a predetermined timeframe.&lt;/li&gt;
    &lt;li&gt;Set up notification actions, such as sending an alert to an AWS SNS topic, which will forward the notification to the relevant personnel via email or SMS.&lt;/li&gt;
    &lt;li&gt;Optionally, automate responses using AWS Lambda functions to handle detected anomalies, like throttling suspicious IPs or alerting a security operations center (SOC).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Additionally, ensure compliance with security best practices by reviewing the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"&gt;AWS API Gateway Security Best Practices&lt;/a&gt; documentation regularly.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="463-577" supportedStandardRef="OpenCRE"/>
            <standard ref="Assessment and decision on information security events" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Collection of evidence" supportedStandardRef="iso-27002-2022"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5: Incident alert thresholds are established" supportedStandardRef="nist-csf"/>
            <standard ref="Decoy Environment" supportedStandardRef="D3FEND"/>
            <standard ref="Decoy Object" supportedStandardRef="D3FEND"/>
            <standard ref="Dynamic Analysis" supportedStandardRef="D3FEND"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="IR-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-2 Incident Response Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-3 Incident Response Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-4 Incident Handling" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-5 Incident Monitoring" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-6 Incident Reporting" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-7 Incident Response Assistance" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-8 Incident Response Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-9 Information Spillage Response" supportedStandardRef="NIST 800-53"/>
            <standard ref="Incident Response" supportedStandardRef="SAMM"/>
            <standard ref="Information security event reporting" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Information security incident management planning and preparation" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Learning from information security incidents" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-1: Public relations are managed" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-2: Reputation is repaired after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-3: Forensics are performed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.CO-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-2: Incidents are reported consistent with established criteria" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MI-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MI-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MI-1: Incidents are contained" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-2: Incidents are mitigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="RV.1.3" supportedStandardRef="nist-ssdf"/>
            <standard ref="Requests to Limit Use and Disclosure of Sensitive Personal Information (m)(3)" supportedStandardRef="ccpa"/>
            <standard ref="Response to information security incidents" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Security Incident Management, E-Discovery, &amp; Cloud Forensics" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="Sworn Complaints Filed with the Agency (a)(b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1038 - Execution Prevention"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="IR-5 Incident Monitoring"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-API-GATEWAY-CNT-01" name="Implement least privilege access" issueId="" issueLink="" platform="" cost="2" risk="33" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
    To enhance security and ensure that resources within AWS API Gateway are only accessible by authorized entities, it is pivotal to utilize IAM policies that adhere to the principle of least privilege. This approach minimizes the risk of unauthorized access and potential security breaches. Implementing this countermeasure involves creating precise and restrictive IAM policies that grant the minimum necessary permissions required for users or roles to perform their functions. 

    &lt;p&gt;Follow these steps to implement IAM policies based on the principle of least privilege:&lt;/p&gt;

    &lt;ol&gt;
        &lt;li&gt;
            &lt;strong&gt;Identify Required Permissions:&lt;/strong&gt; Determine the exact permissions needed by each user, role, or service account to interact with AWS API Gateway. Avoid granting broad permissions that are not necessary.
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Create Custom IAM Policies:&lt;/strong&gt; Write custom IAM policies that define granular permissions. Use specific actions (e.g., `apigateway:GET`, `apigateway:POST`) and restrict access to the necessary resources (e.g., specific API IDs or stages).
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Apply the Policies:&lt;/strong&gt; Attach the custom IAM policies to the relevant IAM users, groups, or roles. Ensure that the policies are evaluated and tested to confirm they provide the intended access without excess permissions.
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Enable Policy Versioning and Logging:&lt;/strong&gt; Maintain policy versioning to keep track of changes and use AWS CloudTrail for monitoring and logging API Gateway access activity, which helps in auditing and compliance.
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Regularly Review and Update Policies:&lt;/strong&gt; Periodically review the permissions and update IAM policies as needed to adapt to any changes in requirements or security posture.
        &lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;For more detailed information and best practices on securing your API Gateway using IAM policies, refer to the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"&gt;AWS API Gateway Security Best Practices&lt;/a&gt; documentation.&lt;/p&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="123-124" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-6 LEAST PRIVILEGE" supportedStandardRef="NIST 800-53"/>
            <standard ref="Hardware-based Process Isolation" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (d)" supportedStandardRef="ccpa"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Behavior Analysis" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-6 LEAST PRIVILEGE"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-API-GATEWAY-CNT-02" name="Implement logging" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  To ensure visibility and traceability of all activities occurring in your AWS API Gateway, it is essential to implement monitoring and logging mechanisms using Amazon CloudWatch Logs or Amazon Kinesis Data Firehose. This practice aligns with the security guidelines as specified in the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html" target="_blank"&gt;AWS API Gateway Security Best Practices&lt;/a&gt;.

  &lt;h3&gt;Implementation Steps:&lt;/h3&gt;
  &lt;ol&gt;
    &lt;li&gt; 
      &lt;strong&gt;Enable API Gateway Execution Logging:&lt;/strong&gt; Access the API Gateway in the AWS Management Console and navigate to the stage settings. Under the &lt;em&gt;Logs/Tracing&lt;/em&gt; tab, enable &lt;em&gt;Access Logging&lt;/em&gt; and specify the CloudWatch Logs group. Follow the detailed instructions in the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html" target="_blank"&gt;API Gateway Logging Setup Guide&lt;/a&gt;.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;Set up CloudWatch Logs:&lt;/strong&gt; If using CloudWatch Logs, ensure that the necessary IAM roles and permissions are in place to allow API Gateway to write logs. Configure log retention policies according to your organizational compliance requirements.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;Implement Kinesis Data Firehose:&lt;/strong&gt; If opting for Amazon Kinesis Data Firehose, create a delivery stream to capture the logs and optionally transform and load them into destination services such as Amazon S3, Amazon Redshift, or Amazon Elasticsearch Service. For integration, refer to &lt;a href="https://docs.aws.amazon.com/firehose/latest/dev/create-api-destination.html" target="_blank"&gt;Creating an Amazon Kinesis Data Firehose Delivery Stream&lt;/a&gt;.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;Review and Monitor Logs:&lt;/strong&gt; Regularly review the logs to detect any anomalies or unauthorized access attempts. Set up CloudWatch Alarms to alert your security team of any suspicious activities.
    &lt;/li&gt;
  &lt;/ol&gt;

  By adhering to these guidelines and leveraging CloudWatch Logs or Kinesis Data Firehose, you can enhance the security posture of your API Gateway by maintaining comprehensive visibility and traceability of API operations.
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="842-876" supportedStandardRef="OpenCRE"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AU-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-11 Audit Record Retention" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12 Audit Record Generation" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-16 Cross-organizational Audit Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-4 Audit Log Storage Capacity" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-5 Response to Audit Logging Process Failures" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-6 Audit Record Review, Analysis, and Reporting" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-7 Audit Record Reduction and Report Generation" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4: Event detection information is communicated" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.SC-4: Suppliers and third-party partners are routinely assessed using audits, test results, or other forms of evaluations to confirm they are meeting their contractual obligations." supportedStandardRef="nist-csf"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-3: Forensics are performed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-2: Incidents are reported consistent with established criteria" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="SI-11 Error Handling" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1047 - Audit"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-6 Audit Record Review, Analysis, and Reporting"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-API-GATEWAY-CNT-06" name="Use AWS Security Hub" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
    AWS Security Hub provides a comprehensive view of security alerts and compliance status across AWS accounts for API Gateway implementations. By integrating AWS Security Hub with your AWS API Gateway, you can effectively manage and monitor security risks and ensure adherence to best practices. Follow these steps to implement this countermeasure:

    &lt;ol&gt;
        &lt;li&gt;
            &lt;strong&gt;Enable AWS Security Hub:&lt;/strong&gt; Start by enabling AWS Security Hub in the AWS Management Console. Navigate to the Security Hub dashboard and select "Get Started." Ensure it's activated in the appropriate AWS region where your API Gateway resources are hosted.
            &lt;p&gt;Reference: &lt;a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html" target="_blank"&gt;Setting Up AWS Security Hub&lt;/a&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Configure Findings and Insights:&lt;/strong&gt; AWS Security Hub aggregates findings from various AWS services. Ensure that findings from AWS API Gateway are included. Inspect and prioritize these findings to understand the security and compliance status.
            &lt;p&gt;Reference: &lt;a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings.html" target="_blank"&gt;Understanding Findings&lt;/a&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Enable Security Standards:&lt;/strong&gt; Activate relevant security standards like the AWS Foundational Security Best Practices standard to receive automated checks for common security configurations and vulnerabilities in your API Gateway setup.
            &lt;p&gt;Reference: &lt;a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp.html" target="_blank"&gt;AWS Foundational Security Best Practices&lt;/a&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;strong&gt;Regularly Review and Act:&lt;/strong&gt; Regularly review the insights and findings provided by Security Hub. Implement recommended actions, such as applying least privilege principles, enabling logging and monitoring, and ensuring proper API Gateway configuration as advised in the AWS API Gateway security best practices.
            &lt;p&gt;Reference: &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html" target="_blank"&gt;API Gateway Security Best Practices&lt;/a&gt;&lt;/p&gt;
        &lt;/li&gt;
    &lt;/ol&gt;
    
    By systematically implementing these steps, you can ensure that your AWS API Gateway environments are securely managed and compliant with established security best practices.
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="464-513" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Application Security Metrics" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CA-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-2 Control Assessments" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-5 Plan of Action and Milestones" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-6 Authorization" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-7 Continuous Monitoring" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-8 Penetration Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2: The physical environment is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6: External service provider activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1: Roles and responsibilities for detection are well defined to ensure accountability" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2: Detection activities comply with all applicable requirements" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3: Detection processes are tested" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4: Event detection information is communicated" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5: Detection processes are continuously improved" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-1: Asset vulnerabilities are identified and documented" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2: Cyber threat intelligence is received from information sharing forums and sources" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3: Threats, both internal and external, are identified and documented" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5: Threats, vulnerabilities, likelihoods, and impacts are used to determine risk" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-6: Risk responses are identified and prioritized" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4: Suppliers and third-party partners are routinely assessed using audits, test results, or other forms of evaluations to confirm they are meeting their contractual obligations." supportedStandardRef="nist-csf"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PM-31 Continuous Monitoring Strategy" supportedStandardRef="NIST 800-53"/>
            <standard ref="PM-6 Measures of Performance" supportedStandardRef="NIST 800-53"/>
            <standard ref="PO.3.3" supportedStandardRef="nist-ssdf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5: Processes are established to receive, analyze and respond to vulnerabilities disclosed to the organization from internal and external sources (e.g. internal testing, security bulletins, or security researchers)" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5: Voluntary information sharing occurs with external stakeholders to achieve broader cybersecurity situational awareness" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3: Newly identified vulnerabilities are mitigated or documented as accepted risks" supportedStandardRef="nist-csf"/>
            <standard ref="SI-20 Tainting" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5 Security Alerts, Advisories, and Directives" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1019 - Threat Intelligence Program"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CA-7 Continuous Monitoring"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-ELEVATION-OF-PRIVILEGE" name="Elevation of Privilege" desc="Elevation of privilege involves an attacker gaining higher levels of access or permissions than intended. By exploiting vulnerabilities, attackers can escalate their privileges within a system to perform unauthorized actions or access sensitive data." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-API-GATEWAY-T-API-GW-01" name="Unauthorized access" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;strong&gt;General threat description&lt;/strong&gt;&lt;br&gt; Improperly configured IAM policies can create vulnerabilities by allowing unauthorized users to access and manipulate API Gateway resources, leading to security breaches. &lt;br&gt;&lt;strong&gt;Threat agents/Attack vectors&lt;/strong&gt;&lt;br&gt; Unauthorized users or malicious insiders who exploit weak or overly permissive IAM policies to gain access to API Gateway resources. &lt;br&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;br&gt; Unauthorized access, data breaches, service disruptions, and potential exposure of sensitive information. &lt;br&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;br&gt; An attacker identifies an IAM policy that grants overly broad permissions and uses it to access and modify API Gateway settings, potentially disrupting services or exfiltrating data.</desc>
              <riskRating confidentiality="50" integrity="75" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-285">
                  <countermeasures>
                    <countermeasure ref="C-AWS-API-GATEWAY-CNT-01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-API-GATEWAY-CNT-01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1078 - Valid Accounts"/>
                <customField ref="SF-T-STRIDE-LM" value="Elevation of Privilege"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-API-GATEWAY-T-API-GW-06" name="Non-compliance with security best practices" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;strong&gt;General threat description&lt;/strong&gt;&lt;br&gt;
Failing to continuously monitor and adhere to security best practices can expose the system to vulnerabilities and lead to non-compliance with regulatory requirements. &lt;br&gt;&lt;strong&gt;Threat agents/Attack vectors&lt;/strong&gt;&lt;br&gt;
Threat agents include cyber attackers, malicious insiders, and even accidental misconfigurations. Attack vectors can be as diverse as exploiting unpatched vulnerabilities, pivoting through misconfigured services, and taking advantage of outdated security frameworks. &lt;br&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;br&gt;
The impacts may include data breaches, financial losses, legal penalties, damage to reputation, and disruption of business operations. Regulatory non-compliance can result in fines and restrictions on business activities. &lt;br&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;br&gt;
1. A cyber attacker identifies unpatched vulnerabilities in the API Gateway and exploits them to gain unauthorized access to sensitive data.
2. Due to lack of continuous monitoring, an internal user accidentally misconfigures security settings, exposing critical resources to the internet.
3. Failure to adhere to encryption best practices leads to data being transmitted in plaintext, which is intercepted by an attacker.</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AWS-API-GATEWAY-CNT-06" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-API-GATEWAY-CNT-06" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1592.004 - Client Configurations"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-LATERAL-MOVEMENT" name="Lateral Movement" desc="Lateral Movement refers to the technique used by attackers to move horizontally across a network after gaining initial access. Once inside a network, attackers seek to explore and compromise additional systems to escalate their attack and access valuable resources." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-API-GATEWAY-T-API-GW-03" name="Delayed threat detection" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;strong&gt;General threat description&lt;/strong&gt;&lt;br&gt; Without continuous monitoring and alerting, security threats may go undetected for extended periods, increasing the likelihood of significant damage. &lt;br&gt;&lt;strong&gt;Threat agents/Attack vectors&lt;/strong&gt;&lt;br&gt; Threat actors can exploit vulnerabilities in your AWS infrastructure that are not promptly identified due to inadequate monitoring and alerting systems. This includes issues like unpatched software, misconfigurations, and unauthorized access attempts. &lt;br&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;br&gt; Delayed detection can lead to unauthorized access, data breaches, data loss, and potentially significant downtime. There can also be financial repercussions, reputational damage, and non-compliance with regulatory requirements. &lt;br&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;br&gt; 1. An attacker gains unauthorized access to your AWS API Gateway due to a misconfiguration. Without monitoring, this unauthorized activity goes unnoticed, allowing the attacker to exfiltrate sensitive data over a prolonged period.&lt;br&gt;2. A vulnerability in an API is exploited, but because continuous monitoring is not in place, the breach is discovered only after considerable damage has been done.&lt;br&gt;3. An insider modifies configurations maliciously, leading to data leaks or system downtimes that are only detected after client complaints.</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AWS-API-GATEWAY-CNT-03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-API-GATEWAY-CNT-03" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1562 - Impair Defenses"/>
                <customField ref="SF-T-STRIDE-LM" value="Lateral Movement"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-REPUDIATION" name="Repudiation" desc="Repudiation involves denying an action or event that has taken place. In a security context, repudiation threats can occur when a user denies performing a specific action, such as denying sending a message or making a transaction." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-API-GATEWAY-T-API-GW-02" name="Unmonitored changes and activities" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;strong&gt;General threat description&lt;/strong&gt;&lt;br&gt; Without proper logging, unauthorized changes and activities can go unnoticed, leading to potential vulnerabilities and compliance issues.&lt;br&gt;&lt;strong&gt;Threat agents/Attack vectors&lt;/strong&gt;&lt;br&gt; Internal employees or external attackers making unauthorized changes, malicious activities occurring within the AWS environment.&lt;br&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;br&gt; Data breaches, loss of sensitive information, non-compliance with industry regulations, potential financial and reputational damage.&lt;br&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;br&gt; An internal employee alters API configurations without authorization, leading to data exposure. An attacker exploits an API vulnerability, and the lack of logging prevents early detection and response. Audits reveal insufficient logging, resulting in compliance fines.</desc>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-API-GATEWAY-CNT-02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-API-GATEWAY-CNT-02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1562 - Impair Defenses"/>
                <customField ref="SF-T-STRIDE-LM" value="Repudiation"/>
              </customFields>
            </threat>
            <threat ref="T-AWS-API-GATEWAY-T-API-GW-04" name="Lack of audit trails" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;strong&gt;General threat description&lt;/strong&gt;&lt;br&gt; Without audit trails, it is challenging to track changes and access patterns to API Gateway resources, increasing the risk of undetected security incidents. &lt;br&gt;&lt;strong&gt;Threat agents/Attack vectors&lt;/strong&gt;&lt;br&gt; Threat agents may include external attackers, internal malicious users, or even compromised legitimate users. Attack vectors can include unauthorized access, modification of API configurations, and attempts to exploit vulnerabilities in the API. &lt;br&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;br&gt; The lack of audit trails can lead to severe impacts including data breaches, unauthorized access, unnoticed manipulation of sensitive information, and difficulties in incident response and forensic investigation. &lt;br&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;br&gt; 1. An external attacker gains access to API Gateway and modifies API configurations to exfiltrate sensitive data without detection. 
2. An internal employee with malicious intent changes configurations and accesses sensitive customer data, remaining undetected due to the lack of audit trails.
3. A legitimate user’s account is compromised and used to exploit an API vulnerability, causing data leakage and operational disruptions without raising any alarms.</desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="C-AWS-API-GATEWAY-CNT-04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-API-GATEWAY-CNT-04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1562 - Impair Defenses"/>
                <customField ref="SF-T-STRIDE-LM" value="Repudiation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-TAMPERING" name="Tampering" desc="Tampering refers to unauthorized modification of data or systems. Attackers may alter data in transit or modify software components to introduce vulnerabilities or compromise the integrity of the system." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-API-GATEWAY-T-API-GW-05" name="Configuration drift" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;strong&gt;General threat description&lt;/strong&gt;&lt;br&gt; Unmonitored configuration changes can lead to configuration drift, making the environment non-compliant with security policies and prone to vulnerabilities. &lt;br&gt;&lt;strong&gt;Threat agents/Attack vectors&lt;/strong&gt;&lt;br&gt; Unauthorized personnel, accidental misconfigurations, or insider threats making untracked changes to the configuration settings. &lt;br&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;br&gt; Breach of security policies, increased vulnerability to attacks, potential data breaches, and non-compliance with regulatory requirements. &lt;br&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;br&gt; An insider makes a change to the API Gateway configuration that disables logging, making it difficult to detect malicious activities. Unknown to the security team, an attacker exploits the misconfigured resource, leading to a data breach.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AWS-API-GATEWAY-CNT-05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-API-GATEWAY-CNT-05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1011 - Exfiltration Over Other Network Medium"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="15664b8b-0e85-4860-bebe-423dd8b7d4d7" diagramComponentId="bf9886aa-7cd8-4833-be96-b7852772cb86" ref="087cf679-d613-45f1-b18e-a675082343f5" name="AWS Lambda" desc="" library="" parentComponentRef="8771303a-abc7-4e55-8e65-d242c64e000b" componentDefinitionRef="CD-V2-AWS-LAMBDA">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1115" name="CWE-1115" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-1115: Source Code Element without Standard Prologue
The source code contains elements such as source files 
					that do not consistently provide a prologue or header that has been
					standardized for the project.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="CWE-284" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-284: Improper Access Control
The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-664" name="CWE-664" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-664: Improper Control of a Resource Through its Lifetime
The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="CWE-732" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-732: Incorrect Permission Assignment for Critical Resource
The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-923" name="CWE-923" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-923: Improper Restriction of Communication Channel to Intended Endpoints
The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-LAMBDA-C1" name="Lambda function policies should prohibit public access" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.&lt;/p&gt;&lt;p&gt;The Lambda function should not be publicly accessible, as this may allow unintended access to your function code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the AWS:SourceAccount condition. You can only update the resource-based policy from the Lambda API or AWS CLI.&lt;/p&gt;&lt;p&gt;To start, &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"&gt;review the resource-based policy&lt;/a&gt; on the Lambda console. Identify the policy statement that has Principal field values that make the policy public, such as "*" or { "AWS": "*" }.&lt;/p&gt;&lt;p&gt;You cannot edit the policy from the console. To remove permissions from the function, run the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html"&gt;remove-permission&lt;/a&gt; command from the AWS CLI.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$ aws lambda remove-permission --function-name &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; --statement-id &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Replace &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; with the name of the Lambda function, and &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt; with the statement ID (Sid) of the statement that you want to remove.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="123-124" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-6 LEAST PRIVILEGE" supportedStandardRef="NIST 800-53"/>
            <standard ref="Hardware-based Process Isolation" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (d)" supportedStandardRef="ccpa"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Behavior Analysis" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-6 LEAST PRIVILEGE"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.072">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C2" name="Lambda functions should be in a VPC" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether a Lambda function is deployed in a virtual private cloud (VPC). The control fails if the Lambda function isn't deployed in a VPC. Security Hub doesn't evaluate the VPC subnet routing configuration to determine public reachability. You might see failed findings for Lambda@Edge resources.&lt;/p&gt;&lt;p&gt;Deploying resources in a VPC strengthens security and control over network configurations. Such deployments also offer scalability and high fault tolerance across multiple Availability Zones. You can customize VPC deployments to meet diverse application requirements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To configure an existing function to connect to private subnets in your VPC, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. We recommend choosing at least two private subnets for high availability and at least one security group that meets the connectivity requirements of the function.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1029 - Remote Data Storage"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C3" name="Lambda functions should be tagged" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether an AWS Lambda function has tags with the specific keys defined in the parameter requiredTagKeys. The control fails if the function doesn’t have any tag keys or if it doesn’t have all the keys specified in the parameter requiredTagKeys. If the parameter requiredTagKeys isn't provided, the control only checks for the existence of a tag key and fails if the function isn't tagged with any key. System tags, which are automatically applied and begin with aws:, are ignored.&lt;/p&gt;&lt;p&gt;A tag is a label that you assign to an AWS resource, and it consists of a key and an optional value. You can create tags to categorize resources by purpose, owner, environment, or other criteria. Tags can help you identify, organize, search for, and filter resources. Tagging also helps you track accountable resource owners for actions and notifications. When you use tagging, you can implement attribute-based access control (ABAC) as an authorization strategy, which defines permissions based on tags. You can attach tags to IAM entities (users or roles) and to AWS resources. You can create a single ABAC policy or a separate set of policies for your IAM principals. You can design these ABAC policies to allow operations when the principal's tag matches the resource tag. For more information, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction_attribute-based-access-control.html"&gt;What is ABAC for AWS?&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="402-706" supportedStandardRef="OpenCRE"/>
            <standard ref="AU-2 Event Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3 Content of Audit Records" supportedStandardRef="NIST 800-53"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1054 - Software Configuration"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-2 Event Logging"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C4" name="Lambda functions should use supported runtimes" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether AWS Lambda function runtime settings match the expected values set for the supported runtimes in each language. The control fails if the Lambda function doesn't use a supported runtime, noted previously under parameters. Security Hub ignores functions that have a package type of Image.&lt;/p&gt;&lt;p&gt;Lambda runtimes are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you can't create functions that use the deprecated runtime, the function is still available to process invocation events. We recommend ensuring that your Lambda functions are current and don't use deprecated runtime environments. For a list of supported runtimes, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html"&gt;Lambda runtimes&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about supported runtimes and deprecation schedules, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html"&gt;Runtime deprecation policy&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language. We also recommend applying &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-controls"&gt;runtime updates&lt;/a&gt; to help reduce the risk of impact to your workloads in the rare event of a runtime version incompatibility.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="486-813" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.5.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="Application Configuration Hardening" supportedStandardRef="D3FEND"/>
            <standard ref="CM-2 BASELINE CONFIGURATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6 Configuration Settings" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-7: The development and testing environment(s) are separate from the production environment" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1: A baseline configuration of information technology/industrial control systems is created and maintained incorporating security principles (e.g. concept of least functionality)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1034 - Limit Hardware Installation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CM-2 BASELINE CONFIGURATION"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C5" name="VPC Lambda functions should operate in multiple Availability Zones" issueId="" issueLink="" platform="" cost="2" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks if an AWS Lambda function that connects to a virtual private cloud (VPC) operates in at least the specified number of Availability Zone (AZs). The control fails if the function doesn't operate in at least the specified number of AZs. Unless you provide a custom parameter value for the minimum number of AZs, Security Hub uses a default value of two AZs.&lt;/p&gt;&lt;p&gt;Deploying resources across multiple AZs is an AWS best practice to ensure high availability within your architecture. Availability is a core pillar in the confidentiality, integrity, and availability triad security model. All Lambda functions that connect to a VPC should have a multi-AZ deployment to ensure that a single zone of failure doesn't cause a total disruption of operations.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If you configure your function to connect to a VPC in your account, specify subnets in multiple AZs to ensure high availability. For instructions, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;Lambda automatically runs other functions in multiple AZs to ensure that it is available to process events in case of a service interruption in a single zone.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="240-464" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Business Continuity Management and Operational Resilience" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CP-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-10 System Recovery and Reconstitution" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-11 Alternate Communications Protocols" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-12 Safe Mode" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-13 Alternative Security Mechanisms" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-2 Contingency Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-3 Contingency Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-4 Contingency Plan Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-6 Alternate Storage Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-7 Alternate Processing Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-8 Telecommunications Services" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-9 System Backup" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ICT readiness for business continuity" supportedStandardRef="iso-27002-2022"/>
            <standard ref="ID.AM-5: Resources (e.g., hardware, devices, data, time, personnel, and software) are prioritized based on their classification, criticality, and business value" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-6: Cybersecurity roles and responsibilities for the entire workforce and third-party stakeholders (e.g., suppliers, customers, partners) are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-4: Dependencies and critical functions for delivery of critical services are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-5: Resilience requirements to support delivery of critical services are established for all operating states (e.g. under duress/attack, during recovery, normal operations)" supportedStandardRef="nist-csf"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-4: Potential business impacts and likelihoods are identified" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="Information security during disruption" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-11" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-4: Backups of information are conducted, maintained, and tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-5: Mechanisms (e.g., failsafe, load balancing, hot swap) are implemented to achieve resilience requirements in normal and adverse situations" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="Redundancy of information processing facilities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="SI-13 Predictable Failure Prevention" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1030 - Network Segmentation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CP-10 System Recovery and Reconstitution"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-LAMBDA-T1" name="Serverless function misconfiguration" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;A serverless function misconfiguration refers to a software security risk that arises when serverless functions are configured inaccurately during their set-up or use. Serverless functions represent a new wave of cloud computing and offer a range of benefits, including scalability and reduced operational costs. However, the potentially complex configurations they entail can lead to vulnerabilities if not properly handled. This threat can leave applications open to data breaches, unauthorized access, and various kinds of cyber-attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;These threats usually result from human error rather than being initiated by a specific threat agent. Common problems include inappropriate permission settings, insecure default configurations, and exposure of sensitive information. However, once the misconfiguration is in place, it can provide multiple attack vectors for threat agents. These threat agents can be external or internal to the organization. External threat agents such as hackers, ransomware operators, or cyber-criminal groups can exploit the misconfiguration to gain unauthorized access, steal sensitive data or launch attacks on the system. Internal threat agents can include disgruntled employees or insider threats who exploit the misconfiguration for malicious intent.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The potential impacts are considerable and diverse. They could result in unauthorized data access which may comprise sensitive or personal data, leading to significant data breaches. This can consequently damage a company's reputation and violate data protection regulations, potentially leading to large fines. In addition, these threats can open the door for malware or ransomware attacks that can disrupt the normal functioning of serverless applications or even entire systems, impacting business operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 1&lt;/i&gt;: An organization accidentally leaves a serverless function with open permissions. A hacker discovers this misconfiguration, allowing them to invoke the function at will. They proceed to exfiltrate sensitive data from the connected database, leading to a large-scale data breach.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 2&lt;/i&gt;: An internal developer erroneously configures a serverless function to write to a log file but forgets to secure the file appropriately. An insider threat stumbles upon this misconfiguration and uses it to leak proprietary company information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 3&lt;/i&gt;: Due to a oversight in the configuration process, a company leaves debugging information exposed in their serverless environment. Cyber criminals discover this and exploit it to uncover system vulnerabilities, which they then use to inject malware into the system, causing significant disruptions and damage to operations and infrastructure.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1115">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-664">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-923">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1211 - Exploitation for Defense Evasion"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="24160d1b-50db-42a7-bb40-f116835fb5e9" diagramComponentId="243f6887-f62a-47cf-acea-e8fa33dfe1a0" ref="0881ee6e-c119-4e95-a86c-8b0da3e8d60a" name="AWS Lambda" desc="" library="" parentComponentRef="c001a04f-8741-4992-b310-7e85b5725772" componentDefinitionRef="CD-V2-AWS-LAMBDA">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1115" name="CWE-1115" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-1115: Source Code Element without Standard Prologue
The source code contains elements such as source files 
					that do not consistently provide a prologue or header that has been
					standardized for the project.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.784">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="CWE-284" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-284: Improper Access Control
The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.784">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-664" name="CWE-664" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-664: Improper Control of a Resource Through its Lifetime
The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.784">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="CWE-732" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-732: Incorrect Permission Assignment for Critical Resource
The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.784">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-923" name="CWE-923" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-923: Improper Restriction of Communication Channel to Intended Endpoints
The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.784">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-LAMBDA-C1" name="Lambda function policies should prohibit public access" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.&lt;/p&gt;&lt;p&gt;The Lambda function should not be publicly accessible, as this may allow unintended access to your function code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the AWS:SourceAccount condition. You can only update the resource-based policy from the Lambda API or AWS CLI.&lt;/p&gt;&lt;p&gt;To start, &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"&gt;review the resource-based policy&lt;/a&gt; on the Lambda console. Identify the policy statement that has Principal field values that make the policy public, such as "*" or { "AWS": "*" }.&lt;/p&gt;&lt;p&gt;You cannot edit the policy from the console. To remove permissions from the function, run the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html"&gt;remove-permission&lt;/a&gt; command from the AWS CLI.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$ aws lambda remove-permission --function-name &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; --statement-id &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Replace &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; with the name of the Lambda function, and &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt; with the statement ID (Sid) of the statement that you want to remove.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="123-124" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-6 LEAST PRIVILEGE" supportedStandardRef="NIST 800-53"/>
            <standard ref="Hardware-based Process Isolation" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (d)" supportedStandardRef="ccpa"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Behavior Analysis" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-6 LEAST PRIVILEGE"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.709">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C2" name="Lambda functions should be in a VPC" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether a Lambda function is deployed in a virtual private cloud (VPC). The control fails if the Lambda function isn't deployed in a VPC. Security Hub doesn't evaluate the VPC subnet routing configuration to determine public reachability. You might see failed findings for Lambda@Edge resources.&lt;/p&gt;&lt;p&gt;Deploying resources in a VPC strengthens security and control over network configurations. Such deployments also offer scalability and high fault tolerance across multiple Availability Zones. You can customize VPC deployments to meet diverse application requirements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To configure an existing function to connect to private subnets in your VPC, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. We recommend choosing at least two private subnets for high availability and at least one security group that meets the connectivity requirements of the function.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1029 - Remote Data Storage"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.710">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C3" name="Lambda functions should be tagged" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether an AWS Lambda function has tags with the specific keys defined in the parameter requiredTagKeys. The control fails if the function doesn’t have any tag keys or if it doesn’t have all the keys specified in the parameter requiredTagKeys. If the parameter requiredTagKeys isn't provided, the control only checks for the existence of a tag key and fails if the function isn't tagged with any key. System tags, which are automatically applied and begin with aws:, are ignored.&lt;/p&gt;&lt;p&gt;A tag is a label that you assign to an AWS resource, and it consists of a key and an optional value. You can create tags to categorize resources by purpose, owner, environment, or other criteria. Tags can help you identify, organize, search for, and filter resources. Tagging also helps you track accountable resource owners for actions and notifications. When you use tagging, you can implement attribute-based access control (ABAC) as an authorization strategy, which defines permissions based on tags. You can attach tags to IAM entities (users or roles) and to AWS resources. You can create a single ABAC policy or a separate set of policies for your IAM principals. You can design these ABAC policies to allow operations when the principal's tag matches the resource tag. For more information, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction_attribute-based-access-control.html"&gt;What is ABAC for AWS?&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="402-706" supportedStandardRef="OpenCRE"/>
            <standard ref="AU-2 Event Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3 Content of Audit Records" supportedStandardRef="NIST 800-53"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1054 - Software Configuration"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-2 Event Logging"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.710">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C4" name="Lambda functions should use supported runtimes" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether AWS Lambda function runtime settings match the expected values set for the supported runtimes in each language. The control fails if the Lambda function doesn't use a supported runtime, noted previously under parameters. Security Hub ignores functions that have a package type of Image.&lt;/p&gt;&lt;p&gt;Lambda runtimes are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you can't create functions that use the deprecated runtime, the function is still available to process invocation events. We recommend ensuring that your Lambda functions are current and don't use deprecated runtime environments. For a list of supported runtimes, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html"&gt;Lambda runtimes&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about supported runtimes and deprecation schedules, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html"&gt;Runtime deprecation policy&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language. We also recommend applying &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-controls"&gt;runtime updates&lt;/a&gt; to help reduce the risk of impact to your workloads in the rare event of a runtime version incompatibility.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="486-813" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.5.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="Application Configuration Hardening" supportedStandardRef="D3FEND"/>
            <standard ref="CM-2 BASELINE CONFIGURATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6 Configuration Settings" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-7: The development and testing environment(s) are separate from the production environment" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1: A baseline configuration of information technology/industrial control systems is created and maintained incorporating security principles (e.g. concept of least functionality)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1034 - Limit Hardware Installation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CM-2 BASELINE CONFIGURATION"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.710">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C5" name="VPC Lambda functions should operate in multiple Availability Zones" issueId="" issueLink="" platform="" cost="2" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks if an AWS Lambda function that connects to a virtual private cloud (VPC) operates in at least the specified number of Availability Zone (AZs). The control fails if the function doesn't operate in at least the specified number of AZs. Unless you provide a custom parameter value for the minimum number of AZs, Security Hub uses a default value of two AZs.&lt;/p&gt;&lt;p&gt;Deploying resources across multiple AZs is an AWS best practice to ensure high availability within your architecture. Availability is a core pillar in the confidentiality, integrity, and availability triad security model. All Lambda functions that connect to a VPC should have a multi-AZ deployment to ensure that a single zone of failure doesn't cause a total disruption of operations.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If you configure your function to connect to a VPC in your account, specify subnets in multiple AZs to ensure high availability. For instructions, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;Lambda automatically runs other functions in multiple AZs to ensure that it is available to process events in case of a service interruption in a single zone.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="240-464" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Business Continuity Management and Operational Resilience" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CP-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-10 System Recovery and Reconstitution" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-11 Alternate Communications Protocols" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-12 Safe Mode" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-13 Alternative Security Mechanisms" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-2 Contingency Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-3 Contingency Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-4 Contingency Plan Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-6 Alternate Storage Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-7 Alternate Processing Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-8 Telecommunications Services" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-9 System Backup" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ICT readiness for business continuity" supportedStandardRef="iso-27002-2022"/>
            <standard ref="ID.AM-5: Resources (e.g., hardware, devices, data, time, personnel, and software) are prioritized based on their classification, criticality, and business value" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-6: Cybersecurity roles and responsibilities for the entire workforce and third-party stakeholders (e.g., suppliers, customers, partners) are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-4: Dependencies and critical functions for delivery of critical services are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-5: Resilience requirements to support delivery of critical services are established for all operating states (e.g. under duress/attack, during recovery, normal operations)" supportedStandardRef="nist-csf"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-4: Potential business impacts and likelihoods are identified" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="Information security during disruption" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-11" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-4: Backups of information are conducted, maintained, and tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-5: Mechanisms (e.g., failsafe, load balancing, hot swap) are implemented to achieve resilience requirements in normal and adverse situations" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="Redundancy of information processing facilities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="SI-13 Predictable Failure Prevention" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1030 - Network Segmentation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CP-10 System Recovery and Reconstitution"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.710">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-LAMBDA-T1" name="Serverless function misconfiguration" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;A serverless function misconfiguration refers to a software security risk that arises when serverless functions are configured inaccurately during their set-up or use. Serverless functions represent a new wave of cloud computing and offer a range of benefits, including scalability and reduced operational costs. However, the potentially complex configurations they entail can lead to vulnerabilities if not properly handled. This threat can leave applications open to data breaches, unauthorized access, and various kinds of cyber-attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;These threats usually result from human error rather than being initiated by a specific threat agent. Common problems include inappropriate permission settings, insecure default configurations, and exposure of sensitive information. However, once the misconfiguration is in place, it can provide multiple attack vectors for threat agents. These threat agents can be external or internal to the organization. External threat agents such as hackers, ransomware operators, or cyber-criminal groups can exploit the misconfiguration to gain unauthorized access, steal sensitive data or launch attacks on the system. Internal threat agents can include disgruntled employees or insider threats who exploit the misconfiguration for malicious intent.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The potential impacts are considerable and diverse. They could result in unauthorized data access which may comprise sensitive or personal data, leading to significant data breaches. This can consequently damage a company's reputation and violate data protection regulations, potentially leading to large fines. In addition, these threats can open the door for malware or ransomware attacks that can disrupt the normal functioning of serverless applications or even entire systems, impacting business operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 1&lt;/i&gt;: An organization accidentally leaves a serverless function with open permissions. A hacker discovers this misconfiguration, allowing them to invoke the function at will. They proceed to exfiltrate sensitive data from the connected database, leading to a large-scale data breach.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 2&lt;/i&gt;: An internal developer erroneously configures a serverless function to write to a log file but forgets to secure the file appropriately. An insider threat stumbles upon this misconfiguration and uses it to leak proprietary company information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 3&lt;/i&gt;: Due to a oversight in the configuration process, a company leaves debugging information exposed in their serverless environment. Cyber criminals discover this and exploit it to uncover system vulnerabilities, which they then use to inject malware into the system, causing significant disruptions and damage to operations and infrastructure.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1115">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-664">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-923">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1211 - Exploitation for Defense Evasion"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="bea34966-eacc-4f39-8dbf-809209f2d7c4" diagramComponentId="b3f8b2cc-3e7f-454b-b4b7-aaebec4bb193" ref="44970a91-cbd9-4d0d-8141-032d37c1c636" name="AWS Lambda" desc="" library="" parentComponentRef="8771303a-abc7-4e55-8e65-d242c64e000b" componentDefinitionRef="CD-V2-AWS-LAMBDA">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1115" name="CWE-1115" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-1115: Source Code Element without Standard Prologue
The source code contains elements such as source files 
					that do not consistently provide a prologue or header that has been
					standardized for the project.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.444">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="CWE-284" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-284: Improper Access Control
The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.444">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-664" name="CWE-664" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-664: Improper Control of a Resource Through its Lifetime
The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.444">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="CWE-732" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-732: Incorrect Permission Assignment for Critical Resource
The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.444">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-923" name="CWE-923" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-923: Improper Restriction of Communication Channel to Intended Endpoints
The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.444">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-LAMBDA-C1" name="Lambda function policies should prohibit public access" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.&lt;/p&gt;&lt;p&gt;The Lambda function should not be publicly accessible, as this may allow unintended access to your function code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the AWS:SourceAccount condition. You can only update the resource-based policy from the Lambda API or AWS CLI.&lt;/p&gt;&lt;p&gt;To start, &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"&gt;review the resource-based policy&lt;/a&gt; on the Lambda console. Identify the policy statement that has Principal field values that make the policy public, such as "*" or { "AWS": "*" }.&lt;/p&gt;&lt;p&gt;You cannot edit the policy from the console. To remove permissions from the function, run the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html"&gt;remove-permission&lt;/a&gt; command from the AWS CLI.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$ aws lambda remove-permission --function-name &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; --statement-id &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Replace &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; with the name of the Lambda function, and &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt; with the statement ID (Sid) of the statement that you want to remove.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="123-124" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-6 LEAST PRIVILEGE" supportedStandardRef="NIST 800-53"/>
            <standard ref="Hardware-based Process Isolation" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (d)" supportedStandardRef="ccpa"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Behavior Analysis" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-6 LEAST PRIVILEGE"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.379">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C2" name="Lambda functions should be in a VPC" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether a Lambda function is deployed in a virtual private cloud (VPC). The control fails if the Lambda function isn't deployed in a VPC. Security Hub doesn't evaluate the VPC subnet routing configuration to determine public reachability. You might see failed findings for Lambda@Edge resources.&lt;/p&gt;&lt;p&gt;Deploying resources in a VPC strengthens security and control over network configurations. Such deployments also offer scalability and high fault tolerance across multiple Availability Zones. You can customize VPC deployments to meet diverse application requirements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To configure an existing function to connect to private subnets in your VPC, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. We recommend choosing at least two private subnets for high availability and at least one security group that meets the connectivity requirements of the function.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1029 - Remote Data Storage"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.379">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C3" name="Lambda functions should be tagged" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether an AWS Lambda function has tags with the specific keys defined in the parameter requiredTagKeys. The control fails if the function doesn’t have any tag keys or if it doesn’t have all the keys specified in the parameter requiredTagKeys. If the parameter requiredTagKeys isn't provided, the control only checks for the existence of a tag key and fails if the function isn't tagged with any key. System tags, which are automatically applied and begin with aws:, are ignored.&lt;/p&gt;&lt;p&gt;A tag is a label that you assign to an AWS resource, and it consists of a key and an optional value. You can create tags to categorize resources by purpose, owner, environment, or other criteria. Tags can help you identify, organize, search for, and filter resources. Tagging also helps you track accountable resource owners for actions and notifications. When you use tagging, you can implement attribute-based access control (ABAC) as an authorization strategy, which defines permissions based on tags. You can attach tags to IAM entities (users or roles) and to AWS resources. You can create a single ABAC policy or a separate set of policies for your IAM principals. You can design these ABAC policies to allow operations when the principal's tag matches the resource tag. For more information, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction_attribute-based-access-control.html"&gt;What is ABAC for AWS?&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="402-706" supportedStandardRef="OpenCRE"/>
            <standard ref="AU-2 Event Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3 Content of Audit Records" supportedStandardRef="NIST 800-53"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1054 - Software Configuration"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-2 Event Logging"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.379">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C4" name="Lambda functions should use supported runtimes" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether AWS Lambda function runtime settings match the expected values set for the supported runtimes in each language. The control fails if the Lambda function doesn't use a supported runtime, noted previously under parameters. Security Hub ignores functions that have a package type of Image.&lt;/p&gt;&lt;p&gt;Lambda runtimes are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you can't create functions that use the deprecated runtime, the function is still available to process invocation events. We recommend ensuring that your Lambda functions are current and don't use deprecated runtime environments. For a list of supported runtimes, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html"&gt;Lambda runtimes&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about supported runtimes and deprecation schedules, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html"&gt;Runtime deprecation policy&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language. We also recommend applying &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-controls"&gt;runtime updates&lt;/a&gt; to help reduce the risk of impact to your workloads in the rare event of a runtime version incompatibility.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="486-813" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.5.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="Application Configuration Hardening" supportedStandardRef="D3FEND"/>
            <standard ref="CM-2 BASELINE CONFIGURATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6 Configuration Settings" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-7: The development and testing environment(s) are separate from the production environment" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1: A baseline configuration of information technology/industrial control systems is created and maintained incorporating security principles (e.g. concept of least functionality)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1034 - Limit Hardware Installation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CM-2 BASELINE CONFIGURATION"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.379">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C5" name="VPC Lambda functions should operate in multiple Availability Zones" issueId="" issueLink="" platform="" cost="2" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks if an AWS Lambda function that connects to a virtual private cloud (VPC) operates in at least the specified number of Availability Zone (AZs). The control fails if the function doesn't operate in at least the specified number of AZs. Unless you provide a custom parameter value for the minimum number of AZs, Security Hub uses a default value of two AZs.&lt;/p&gt;&lt;p&gt;Deploying resources across multiple AZs is an AWS best practice to ensure high availability within your architecture. Availability is a core pillar in the confidentiality, integrity, and availability triad security model. All Lambda functions that connect to a VPC should have a multi-AZ deployment to ensure that a single zone of failure doesn't cause a total disruption of operations.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If you configure your function to connect to a VPC in your account, specify subnets in multiple AZs to ensure high availability. For instructions, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;Lambda automatically runs other functions in multiple AZs to ensure that it is available to process events in case of a service interruption in a single zone.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="240-464" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Business Continuity Management and Operational Resilience" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CP-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-10 System Recovery and Reconstitution" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-11 Alternate Communications Protocols" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-12 Safe Mode" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-13 Alternative Security Mechanisms" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-2 Contingency Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-3 Contingency Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-4 Contingency Plan Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-6 Alternate Storage Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-7 Alternate Processing Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-8 Telecommunications Services" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-9 System Backup" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ICT readiness for business continuity" supportedStandardRef="iso-27002-2022"/>
            <standard ref="ID.AM-5: Resources (e.g., hardware, devices, data, time, personnel, and software) are prioritized based on their classification, criticality, and business value" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-6: Cybersecurity roles and responsibilities for the entire workforce and third-party stakeholders (e.g., suppliers, customers, partners) are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-4: Dependencies and critical functions for delivery of critical services are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-5: Resilience requirements to support delivery of critical services are established for all operating states (e.g. under duress/attack, during recovery, normal operations)" supportedStandardRef="nist-csf"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-4: Potential business impacts and likelihoods are identified" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="Information security during disruption" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-11" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-4: Backups of information are conducted, maintained, and tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-5: Mechanisms (e.g., failsafe, load balancing, hot swap) are implemented to achieve resilience requirements in normal and adverse situations" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="Redundancy of information processing facilities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="SI-13 Predictable Failure Prevention" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1030 - Network Segmentation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CP-10 System Recovery and Reconstitution"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.379">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-LAMBDA-T1" name="Serverless function misconfiguration" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;A serverless function misconfiguration refers to a software security risk that arises when serverless functions are configured inaccurately during their set-up or use. Serverless functions represent a new wave of cloud computing and offer a range of benefits, including scalability and reduced operational costs. However, the potentially complex configurations they entail can lead to vulnerabilities if not properly handled. This threat can leave applications open to data breaches, unauthorized access, and various kinds of cyber-attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;These threats usually result from human error rather than being initiated by a specific threat agent. Common problems include inappropriate permission settings, insecure default configurations, and exposure of sensitive information. However, once the misconfiguration is in place, it can provide multiple attack vectors for threat agents. These threat agents can be external or internal to the organization. External threat agents such as hackers, ransomware operators, or cyber-criminal groups can exploit the misconfiguration to gain unauthorized access, steal sensitive data or launch attacks on the system. Internal threat agents can include disgruntled employees or insider threats who exploit the misconfiguration for malicious intent.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The potential impacts are considerable and diverse. They could result in unauthorized data access which may comprise sensitive or personal data, leading to significant data breaches. This can consequently damage a company's reputation and violate data protection regulations, potentially leading to large fines. In addition, these threats can open the door for malware or ransomware attacks that can disrupt the normal functioning of serverless applications or even entire systems, impacting business operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 1&lt;/i&gt;: An organization accidentally leaves a serverless function with open permissions. A hacker discovers this misconfiguration, allowing them to invoke the function at will. They proceed to exfiltrate sensitive data from the connected database, leading to a large-scale data breach.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 2&lt;/i&gt;: An internal developer erroneously configures a serverless function to write to a log file but forgets to secure the file appropriately. An insider threat stumbles upon this misconfiguration and uses it to leak proprietary company information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 3&lt;/i&gt;: Due to a oversight in the configuration process, a company leaves debugging information exposed in their serverless environment. Cyber criminals discover this and exploit it to uncover system vulnerabilities, which they then use to inject malware into the system, causing significant disruptions and damage to operations and infrastructure.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1115">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-664">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-923">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1211 - Exploitation for Defense Evasion"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3d60ddd2-ce94-4931-ae75-4bdd2f0706df" diagramComponentId="da3660ec-b8f7-4697-b695-69aa198b4302" ref="d5320548-b872-4a25-b03c-413862543955" name="AWS Lambda" desc="" library="" parentComponentRef="c001a04f-8741-4992-b310-7e85b5725772" componentDefinitionRef="CD-V2-AWS-LAMBDA">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1115" name="CWE-1115" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-1115: Source Code Element without Standard Prologue
The source code contains elements such as source files 
					that do not consistently provide a prologue or header that has been
					standardized for the project.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="CWE-284" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-284: Improper Access Control
The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-664" name="CWE-664" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-664: Improper Control of a Resource Through its Lifetime
The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="CWE-732" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-732: Incorrect Permission Assignment for Critical Resource
The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-923" name="CWE-923" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-923: Improper Restriction of Communication Channel to Intended Endpoints
The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-LAMBDA-C1" name="Lambda function policies should prohibit public access" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.&lt;/p&gt;&lt;p&gt;The Lambda function should not be publicly accessible, as this may allow unintended access to your function code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the AWS:SourceAccount condition. You can only update the resource-based policy from the Lambda API or AWS CLI.&lt;/p&gt;&lt;p&gt;To start, &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"&gt;review the resource-based policy&lt;/a&gt; on the Lambda console. Identify the policy statement that has Principal field values that make the policy public, such as "*" or { "AWS": "*" }.&lt;/p&gt;&lt;p&gt;You cannot edit the policy from the console. To remove permissions from the function, run the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html"&gt;remove-permission&lt;/a&gt; command from the AWS CLI.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$ aws lambda remove-permission --function-name &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; --statement-id &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Replace &lt;i&gt;&amp;lt;function-name&amp;gt;&lt;/i&gt; with the name of the Lambda function, and &lt;i&gt;&amp;lt;statement-id&amp;gt;&lt;/i&gt; with the statement ID (Sid) of the statement that you want to remove.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="123-124" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-6 LEAST PRIVILEGE" supportedStandardRef="NIST 800-53"/>
            <standard ref="Hardware-based Process Isolation" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (d)" supportedStandardRef="ccpa"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Behavior Analysis" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-6 LEAST PRIVILEGE"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C2" name="Lambda functions should be in a VPC" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether a Lambda function is deployed in a virtual private cloud (VPC). The control fails if the Lambda function isn't deployed in a VPC. Security Hub doesn't evaluate the VPC subnet routing configuration to determine public reachability. You might see failed findings for Lambda@Edge resources.&lt;/p&gt;&lt;p&gt;Deploying resources in a VPC strengthens security and control over network configurations. Such deployments also offer scalability and high fault tolerance across multiple Availability Zones. You can customize VPC deployments to meet diverse application requirements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To configure an existing function to connect to private subnets in your VPC, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. We recommend choosing at least two private subnets for high availability and at least one security group that meets the connectivity requirements of the function.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1029 - Remote Data Storage"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C3" name="Lambda functions should be tagged" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether an AWS Lambda function has tags with the specific keys defined in the parameter requiredTagKeys. The control fails if the function doesn’t have any tag keys or if it doesn’t have all the keys specified in the parameter requiredTagKeys. If the parameter requiredTagKeys isn't provided, the control only checks for the existence of a tag key and fails if the function isn't tagged with any key. System tags, which are automatically applied and begin with aws:, are ignored.&lt;/p&gt;&lt;p&gt;A tag is a label that you assign to an AWS resource, and it consists of a key and an optional value. You can create tags to categorize resources by purpose, owner, environment, or other criteria. Tags can help you identify, organize, search for, and filter resources. Tagging also helps you track accountable resource owners for actions and notifications. When you use tagging, you can implement attribute-based access control (ABAC) as an authorization strategy, which defines permissions based on tags. You can attach tags to IAM entities (users or roles) and to AWS resources. You can create a single ABAC policy or a separate set of policies for your IAM principals. You can design these ABAC policies to allow operations when the principal's tag matches the resource tag. For more information, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction_attribute-based-access-control.html"&gt;What is ABAC for AWS?&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="402-706" supportedStandardRef="OpenCRE"/>
            <standard ref="AU-2 Event Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3 Content of Audit Records" supportedStandardRef="NIST 800-53"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1054 - Software Configuration"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-2 Event Logging"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C4" name="Lambda functions should use supported runtimes" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks whether AWS Lambda function runtime settings match the expected values set for the supported runtimes in each language. The control fails if the Lambda function doesn't use a supported runtime, noted previously under parameters. Security Hub ignores functions that have a package type of Image.&lt;/p&gt;&lt;p&gt;Lambda runtimes are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you can't create functions that use the deprecated runtime, the function is still available to process invocation events. We recommend ensuring that your Lambda functions are current and don't use deprecated runtime environments. For a list of supported runtimes, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html"&gt;Lambda runtimes&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about supported runtimes and deprecation schedules, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html"&gt;Runtime deprecation policy&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language. We also recommend applying &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-controls"&gt;runtime updates&lt;/a&gt; to help reduce the risk of impact to your workloads in the rare event of a runtime version incompatibility.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.2.8" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="486-813" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.5.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="Application Configuration Hardening" supportedStandardRef="D3FEND"/>
            <standard ref="CM-2 BASELINE CONFIGURATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6 Configuration Settings" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-7: The development and testing environment(s) are separate from the production environment" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1: A baseline configuration of information technology/industrial control systems is created and maintained incorporating security principles (e.g. concept of least functionality)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1034 - Limit Hardware Installation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CM-2 BASELINE CONFIGURATION"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-LAMBDA-C5" name="VPC Lambda functions should operate in multiple Availability Zones" issueId="" issueLink="" platform="" cost="2" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This control checks if an AWS Lambda function that connects to a virtual private cloud (VPC) operates in at least the specified number of Availability Zone (AZs). The control fails if the function doesn't operate in at least the specified number of AZs. Unless you provide a custom parameter value for the minimum number of AZs, Security Hub uses a default value of two AZs.&lt;/p&gt;&lt;p&gt;Deploying resources across multiple AZs is an AWS best practice to ensure high availability within your architecture. Availability is a core pillar in the confidentiality, integrity, and availability triad security model. All Lambda functions that connect to a VPC should have a multi-AZ deployment to ensure that a single zone of failure doesn't cause a total disruption of operations.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If you configure your function to connect to a VPC in your account, specify subnets in multiple AZs to ensure high availability. For instructions, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html#vpc-configuring"&gt;Configuring VPC access&lt;/a&gt; in the &lt;i&gt;AWS Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;Lambda automatically runs other functions in multiple AZs to ensure that it is available to process events in case of a service interruption in a single zone.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="240-464" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Business Continuity Management and Operational Resilience" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CP-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-10 System Recovery and Reconstitution" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-11 Alternate Communications Protocols" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-12 Safe Mode" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-13 Alternative Security Mechanisms" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-2 Contingency Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-3 Contingency Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-4 Contingency Plan Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-6 Alternate Storage Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-7 Alternate Processing Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-8 Telecommunications Services" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-9 System Backup" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ICT readiness for business continuity" supportedStandardRef="iso-27002-2022"/>
            <standard ref="ID.AM-5: Resources (e.g., hardware, devices, data, time, personnel, and software) are prioritized based on their classification, criticality, and business value" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-6: Cybersecurity roles and responsibilities for the entire workforce and third-party stakeholders (e.g., suppliers, customers, partners) are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-4: Dependencies and critical functions for delivery of critical services are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-5: Resilience requirements to support delivery of critical services are established for all operating states (e.g. under duress/attack, during recovery, normal operations)" supportedStandardRef="nist-csf"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-4: Potential business impacts and likelihoods are identified" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="Information security during disruption" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-11" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-4: Backups of information are conducted, maintained, and tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-5: Mechanisms (e.g., failsafe, load balancing, hot swap) are implemented to achieve resilience requirements in normal and adverse situations" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="Redundancy of information processing facilities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="SI-13 Predictable Failure Prevention" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1030 - Network Segmentation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CP-10 System Recovery and Reconstitution"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AWS-LAMBDA-T1" name="Serverless function misconfiguration" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;A serverless function misconfiguration refers to a software security risk that arises when serverless functions are configured inaccurately during their set-up or use. Serverless functions represent a new wave of cloud computing and offer a range of benefits, including scalability and reduced operational costs. However, the potentially complex configurations they entail can lead to vulnerabilities if not properly handled. This threat can leave applications open to data breaches, unauthorized access, and various kinds of cyber-attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;These threats usually result from human error rather than being initiated by a specific threat agent. Common problems include inappropriate permission settings, insecure default configurations, and exposure of sensitive information. However, once the misconfiguration is in place, it can provide multiple attack vectors for threat agents. These threat agents can be external or internal to the organization. External threat agents such as hackers, ransomware operators, or cyber-criminal groups can exploit the misconfiguration to gain unauthorized access, steal sensitive data or launch attacks on the system. Internal threat agents can include disgruntled employees or insider threats who exploit the misconfiguration for malicious intent.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The potential impacts are considerable and diverse. They could result in unauthorized data access which may comprise sensitive or personal data, leading to significant data breaches. This can consequently damage a company's reputation and violate data protection regulations, potentially leading to large fines. In addition, these threats can open the door for malware or ransomware attacks that can disrupt the normal functioning of serverless applications or even entire systems, impacting business operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 1&lt;/i&gt;: An organization accidentally leaves a serverless function with open permissions. A hacker discovers this misconfiguration, allowing them to invoke the function at will. They proceed to exfiltrate sensitive data from the connected database, leading to a large-scale data breach.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 2&lt;/i&gt;: An internal developer erroneously configures a serverless function to write to a log file but forgets to secure the file appropriately. An insider threat stumbles upon this misconfiguration and uses it to leak proprietary company information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Scenario 3&lt;/i&gt;: Due to a oversight in the configuration process, a company leaves debugging information exposed in their serverless environment. Cyber criminals discover this and exploit it to uncover system vulnerabilities, which they then use to inject malware into the system, causing significant disruptions and damage to operations and infrastructure.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1115">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-664">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-923">
                  <countermeasures>
                    <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-LAMBDA-C1" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C2" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C3" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C4" mitigation="20"/>
                <countermeasure ref="C-AWS-LAMBDA-C5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1211 - Exploitation for Defense Evasion"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="15ae1bd7-f762-4b3a-8f3d-dd3c880b111e" diagramComponentId="e294e29d-f712-46b6-afc8-d337804af012" ref="fc7037a6-cb6b-4f34-b911-df47698ef23c" name="AWS VPC (Virtual Private Cloud)" desc="" library="" parentComponentRef="" componentDefinitionRef="CD-V2-AWS-VPC">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-200" name="CWE-200" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-200: Exposure of Sensitive Information to an Unauthorized Actor
The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.736">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="CWE-284" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-284: Improper Access Control
The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="CWE-287" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-287: Improper Authentication
When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.
</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="CWE-693" state="0" impact="100" issueId="" issueLink="">
          <desc>CWE:
CWE-693: Protection Mechanism Failure
The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.
This weakness covers three distinct situations. A "missing" protection mechanism occurs when the application does not define any mechanism against a certain class of attack. An "insufficient" protection mechanism might provide some defenses - for example, against the most common attacks - but it does not protect against everything that is intended. Finally, an "ignored" mechanism occurs when a mechanism is available and in active use within the product, but the developer has not applied it in some code path.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="CWE-778" state="0" impact="50" issueId="" issueLink="">
          <desc>CWE:
CWE-778: Insufficient Logging
When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AMAZON-VPC-CNT-02" name="Control traffic using network ACLs" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Manage inbound and outbound traffic at the subnet level by configuring network Access Control Lists (ACLs) in your VPC. Network ACLs act as stateless firewalls for your subnets, allowing you to set rules that permit or deny traffic based on IP protocol, port number, and source/destination IP address. To implement this, navigate to the VPC section in the AWS Management Console, create or modify network ACLs, and associate them with the appropriate subnets. Regularly review and update ACL rules to enhance security and compliance.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - Control subnet traffic with network access control lists" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1031 - Network Intrusion Prevention"/>
            <customField ref="SF-C-SCOPE" value="Network Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-04" name="Detect potential threats with Amazon GuardDuty" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Amazon GuardDuty to continuously monitor VPC flow logs for malicious activity and potential security threats. GuardDuty uses machine learning and threat intelligence to analyze traffic patterns and detect anomalies. To implement this, activate GuardDuty in the AWS Management Console, configure it to ingest VPC flow logs, DNS logs, and CloudTrail event logs. Regularly review GuardDuty findings and take appropriate actions to mitigate identified threats, ensuring your VPC remains secure against evolving attack vectors.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - VPC Flow Logs" url="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_data-sources.html#guardduty_vpc"/>
          </references>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="463-577" supportedStandardRef="OpenCRE"/>
            <standard ref="Assessment and decision on information security events" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Collection of evidence" supportedStandardRef="iso-27002-2022"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5: Incident alert thresholds are established" supportedStandardRef="nist-csf"/>
            <standard ref="Decoy Environment" supportedStandardRef="D3FEND"/>
            <standard ref="Decoy Object" supportedStandardRef="D3FEND"/>
            <standard ref="Dynamic Analysis" supportedStandardRef="D3FEND"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="IR-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-2 Incident Response Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-3 Incident Response Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-4 Incident Handling" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-5 Incident Monitoring" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-6 Incident Reporting" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-7 Incident Response Assistance" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-8 Incident Response Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="IR-9 Information Spillage Response" supportedStandardRef="NIST 800-53"/>
            <standard ref="Incident Response" supportedStandardRef="SAMM"/>
            <standard ref="Information security event reporting" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Information security incident management planning and preparation" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Learning from information security incidents" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-1: Public relations are managed" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-2: Reputation is repaired after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-3: Forensics are performed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.CO-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-2: Incidents are reported consistent with established criteria" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MI-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MI-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.MI-1: Incidents are contained" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-2: Incidents are mitigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="RV.1.3" supportedStandardRef="nist-ssdf"/>
            <standard ref="Requests to Limit Use and Disclosure of Sensitive Personal Information (m)(3)" supportedStandardRef="ccpa"/>
            <standard ref="Response to information security incidents" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Security Incident Management, E-Discovery, &amp; Cloud Forensics" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="Sworn Complaints Filed with the Agency (a)(b)" supportedStandardRef="ccpa"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1031 - Network Intrusion Prevention"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="IR-5 Incident Monitoring"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-08" name="Distribute subnets across multiple availability zones" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To ensure high availability, fault tolerance, and scalability of your applications hosted on Amazon VPC, create subnets in multiple Availability Zones (AZs) within the same AWS Region. An Availability Zone comprises one or more data centers with independent power, networking, and connectivity. By distributing subnets across multiple AZs, you can mitigate the risk of a single point of failure and enhance the resilience of your application against potential outages or failures in a single AZ. This approach provides redundancy and improves overall system reliability.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - Subnets for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/configure-subnets.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.11" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="240-464" supportedStandardRef="OpenCRE"/>
            <standard ref="6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="9.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Business Continuity Management and Operational Resilience" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="CP-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-10 System Recovery and Reconstitution" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-11 Alternate Communications Protocols" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-12 Safe Mode" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-13 Alternative Security Mechanisms" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-2 Contingency Plan" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-3 Contingency Training" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-4 Contingency Plan Testing" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-6 Alternate Storage Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-7 Alternate Processing Site" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-8 Telecommunications Services" supportedStandardRef="NIST 800-53"/>
            <standard ref="CP-9 System Backup" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4: Impact of events is determined" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-08" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ICT readiness for business continuity" supportedStandardRef="iso-27002-2022"/>
            <standard ref="ID.AM-5: Resources (e.g., hardware, devices, data, time, personnel, and software) are prioritized based on their classification, criticality, and business value" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-6: Cybersecurity roles and responsibilities for the entire workforce and third-party stakeholders (e.g., suppliers, customers, partners) are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-4: Dependencies and critical functions for delivery of critical services are established" supportedStandardRef="nist-csf"/>
            <standard ref="ID.BE-5: Resilience requirements to support delivery of critical services are established for all operating states (e.g. under duress/attack, during recovery, normal operations)" supportedStandardRef="nist-csf"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.RA-4: Potential business impacts and likelihoods are identified" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party providers" supportedStandardRef="nist-csf"/>
            <standard ref="Information security during disruption" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-11" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-10: Response and recovery plans are tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-4: Backups of information are conducted, maintained, and tested" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7: Protection processes are improved" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8: Effectiveness of protection technologies is shared" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-9: Response plans (Incident Response and Business Continuity) and recovery plans (Incident Recovery and Disaster Recovery) are in place and managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.IR-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-5: Mechanisms (e.g., failsafe, load balancing, hot swap) are implemented to achieve resilience requirements in normal and adverse situations" supportedStandardRef="nist-csf"/>
            <standard ref="RC.CO-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-1: Recovery plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RC.IM-2: Recovery strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RC.RP-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RC.RP-1: Recovery plan is executed during or after a cybersecurity incident" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-2: The impact of the incident is understood" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4: Incidents are categorized consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-1: Personnel know their roles and order of operations when a response is needed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3: Information is shared consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-4: Coordination with stakeholders occurs consistent with response plans" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-1: Response plans incorporate lessons learned" supportedStandardRef="nist-csf"/>
            <standard ref="RS.IM-2: Response strategies are updated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.RP-1: Response plan is executed during or after an incident" supportedStandardRef="nist-csf"/>
            <standard ref="Redundancy of information processing facilities" supportedStandardRef="iso-27002-2022"/>
            <standard ref="SI-13 Predictable Failure Prevention" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1030 - Network Segmentation"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="CP-10 System Recovery and Reconstitution"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-03" name="Enable VPC flow logs" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement VPC flow logs to capture information about the IP traffic going to and from network interfaces within your VPC. This log data can help you monitor network traffic, identify potential security threats, diagnose network issues, and ensure compliance with regulatory requirements. To enable VPC Flow Logs, navigate to the VPC section in the AWS Management Console, select your VPC, and create a new Flow Log, specifying the destination for the log data, such as Amazon CloudWatch Logs or an S3 bucket. Regularly review and analyze these logs for abnormal traffic patterns and security incidents.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - VPC Flow Logs" url="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_data-sources.html#guardduty_vpc"/>
          </references>
          <standards>
            <standard ref="10.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.5.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="842-876" supportedStandardRef="OpenCRE"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AU-1 Policy and Procedures" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-11 Audit Record Retention" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12 Audit Record Generation" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-16 Cross-organizational Audit Logging" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-4 Audit Log Storage Capacity" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-5 Response to Audit Logging Process Failures" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-6 Audit Record Review, Analysis, and Reporting" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-7 Audit Record Reduction and Report Generation" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.AE-2: Detected events are analyzed to understand attack targets and methods" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3: Event data are collected and correlated from multiple sources and sensors" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-09" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4: Event detection information is communicated" supportedStandardRef="nist-csf"/>
            <standard ref="GV.OC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.OV-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.PO-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="GV.SC-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="ID.IM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.IM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="ID.SC-4: Suppliers and third-party partners are routinely assessed using audits, test results, or other forms of evaluations to confirm they are meeting their contractual obligations." supportedStandardRef="nist-csf"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Logging" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-4: Adequate capacity to ensure availability is maintained" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PS-04" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-06" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-07" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="RS.AN-1: Notifications from detection systems are investigated" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-3: Forensics are performed" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-2: Incidents are reported consistent with established criteria" supportedStandardRef="nist-csf"/>
            <standard ref="Record-Keeping (a)" supportedStandardRef="ccpa"/>
            <standard ref="SI-11 Error Handling" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1047 - Audit"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AU-6 Audit Record Review, Analysis, and Reporting"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-05" name="Identify unintended network access with Network Access Analyzer" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Utilize AWS Network Access Analyzer to identify and rectify unintended network access to your resources within a VPC. This tool helps you analyze your network configurations and detect access paths that deviate from your security policies. To implement, navigate to the VPC section in the AWS Management Console, configure the Network Access Analyzer by defining the scope and criteria for access analysis, and run assessments regularly. Review findings to address any unintended access, ensuring robust network security.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - What is Network Access Analyzer?" url="https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/what-is-network-access-analyzer.html"/>
          </references>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.10" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="12.3.9" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="724-770" supportedStandardRef="OpenCRE"/>
            <standard ref="8.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.1.5" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.5.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-14 PERMITTED ACTIONS WITHOUT IDENTIFICATION OR AUTHENTICATION" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16 Security and Privacy Attributes" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-19 Access Control for Mobile Devices" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2 ACCOUNT MANAGEMENT" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24 Access Control Decisions" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-25 Reference Monitor" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5 SEPARATION OF DUTIES" supportedStandardRef="NIST 800-53"/>
            <standard ref="Account Locking" supportedStandardRef="D3FEND"/>
            <standard ref="Broken Access Controls" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-03" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="Domain Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="General Rules Regarding Verification (c)(1)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(2)" supportedStandardRef="ccpa"/>
            <standard ref="General Rules Regarding Verification (c)(3)" supportedStandardRef="ccpa"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Multi-factor Authentication" supportedStandardRef="D3FEND"/>
            <standard ref="Opt-Out Preference Signals (c)(5)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AA-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-3: Remote access is managed" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals' security and privacy risks and other organizational risks)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Requests to Limit Use and Disclosure of Sensitive Personal Information (m)(2)" supportedStandardRef="ccpa"/>
            <standard ref="SC-2 Separation of System and User Functionality" supportedStandardRef="NIST 800-53"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1031 - Network Intrusion Prevention"/>
            <customField ref="SF-C-SCOPE" value="Network Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-24 Access Control Decisions"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-06" name="Implement AWS Network Firewall" issueId="" issueLink="" platform="" cost="2" risk="46" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy AWS Network Firewall to protect your Amazon VPC from external and internal threats by filtering traffic at the network level. AWS Network Firewall provides stateful, managed network firewall and intrusion prevention services to safeguard your VPC from malicious activity. To implement it, create a firewall in the AWS Management Console, configure rules to control inbound and outbound traffic, and associate the firewall with your VPC subnets. Regularly update and monitor these rules to ensure they align with your security policies and threat landscape.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - What is AWS Network Firewall?" url="https://docs.aws.amazon.com/network-firewall/latest/developerguide/what-is-aws-network-firewall.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1031 - Network Intrusion Prevention"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-01" name="Implement security groups to control traffic to EC2 instances" issueId="" issueLink="" platform="" cost="2" risk="39" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Utilize security groups to manage inbound and outbound traffic to your EC2 instances within your VPC. Security groups act as virtual firewalls, allowing you to specify allowed protocols, ports, and source IP ranges. To implement, navigate to the EC2 section in the AWS Management Console, create or modify security groups, and associate them with your instances. Regularly review and update security group rules to align with your security requirements and minimize exposure to potential threats.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - Control traffic to your AWS resources using security groups" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-groups.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="1.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="10.8" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="11.4" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="2.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="467-784" supportedStandardRef="OpenCRE"/>
            <standard ref="6.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="DE.CM-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="DE.CM-1: The network is monitored to detect potential cybersecurity events" supportedStandardRef="nist-csf"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Low" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Opt-Out Preference Signals (b)" supportedStandardRef="ccpa"/>
            <standard ref="PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-02" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-10" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IR-01" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.PT-4: Communications and control networks are protected" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22 Architecture and Provisioning for Name/address Resolution Service" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-7 Boundary Protection" supportedStandardRef="NIST 800-53"/>
            <standard ref="Security of network services" supportedStandardRef="iso-27002-2022"/>
            <standard ref="Web filtering" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1037 - Filter Network Traffic"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="SC-7 Boundary Protection"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AMAZON-VPC-CNT-07" name="Manage access with IAM identity federation, users, and roles" issueId="" issueLink="" platform="" cost="1" risk="33" state="Recommended" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Utilize IAM identity federation, users, and roles to manage and secure access to AWS resources within your VPC. Identity federation allows you to leverage existing identities from your corporate directory or social identity provider, reducing the need to manage separate AWS identities. Create IAM users for individual access and roles for cross-account and service permissions. Implement least privilege principles by assigning users and roles only the permissions they need. Regularly review and update IAM policies to maintain security best practices and compliance.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS - Identity and access management for Amazon VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/security-iam.html"/>
          </references>
          <standards>
            <standard ref="10.6" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="123-124" supportedStandardRef="OpenCRE"/>
            <standard ref="6.4.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.1" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="7.2" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="8.7" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="9.3" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="AC-6 LEAST PRIVILEGE" supportedStandardRef="NIST 800-53"/>
            <standard ref="Hardware-based Process Isolation" supportedStandardRef="D3FEND"/>
            <standard ref="High" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Local Account Monitoring" supportedStandardRef="D3FEND"/>
            <standard ref="Local File Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="Mandatory Access Control" supportedStandardRef="D3FEND"/>
            <standard ref="Moderate" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AA-05" supportedStandardRef="NIST CSF v2.0"/>
            <standard ref="PR.AC-4: Access permissions and authorizations are managed, incorporating the principles of least privilege and separation of duties" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5: Protections against data leaks are implemented" supportedStandardRef="nist-csf"/>
            <standard ref="Personal Information Security Breaches (a)(1)(2)" supportedStandardRef="ccpa"/>
            <standard ref="Record-Keeping (d)" supportedStandardRef="ccpa"/>
            <standard ref="System Configuration Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Account Permissions" supportedStandardRef="D3FEND"/>
            <standard ref="User Behavior Analysis" supportedStandardRef="D3FEND"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management"/>
            <customField ref="SF-C-SCOPE" value="Cloud Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="NIST 800-53 v5"/>
            <customField ref="SF-C-STANDARD-SECTION" value="AC-6 LEAST PRIVILEGE"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-DENIAL-OF-SERVICE" name="Denial of Service" desc="Denial of Service attacks aim to disrupt the availability of services or resources to legitimate users. Attackers overwhelm systems with excessive traffic or requests, causing them to become unresponsive or unavailable to users." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AMAZON-VPC-T-VPC-06" name="Single point of failure" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A Single Point of Failure (SPOF) refers to a critical component or node within a system whose failure can cause the entire system to stop functioning. In a cloud environment like Amazon VPS, this can result from configuring all resources within a single Availability Zone (AZ), leading to potential outages if that zone experiences issues.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Natural disasters affecting a specific AZ.&lt;/li&gt;
 &lt;li&gt;Technical failures such as power outages, network issues, or hardware malfunctions within the AZ.&lt;/li&gt;
 &lt;li&gt;Cyberattacks targeting the infrastructure of a specific AZ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Downtime and service disruptions.&lt;/li&gt;
 &lt;li&gt;Loss of availability for applications and services.&lt;/li&gt;
 &lt;li&gt;Potential data loss or corruption.&lt;/li&gt;
 &lt;li&gt;Financial losses due to service outages and recovery costs.&lt;/li&gt;
 &lt;li&gt;Reputational damage due to service unreliability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Natural Disaster: A severe storm impacts the data center in a single AZ, causing all services hosted in that zone to become unavailable.&lt;/li&gt;
 &lt;li&gt;Technical Failure: A power outage in the data center leads to downtime for all resources configured solely in that AZ.&lt;/li&gt;
 &lt;li&gt;Cyberattack: A targeted DDoS attack overwhelms the infrastructure of a single AZ, resulting in service disruption for all resources within that zone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To mitigate this threat, it is recommended to distribute resources across multiple Availability Zones, ensuring redundancy and high availability.&lt;/p&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-08" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AMAZON-VPC-CNT-08" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1499 - Endpoint Denial of Service"/>
                <customField ref="SF-T-STRIDE-LM" value="Denial of Service"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-INFORMATION-DISCLOSURE" name="Information Disclosure" desc="Information disclosure occurs when sensitive data is exposed to unauthorized parties. This can include unauthorized access to confidential information, such as personal data, financial records, or intellectual property." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AMAZON-VPC-T-VPC-01" name="Unauthorized network access" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unauthorized network access occurs when individuals or entities gain access to a network without permission, potentially leading to data breaches, service disruption, and exploitation of resources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;External attackers using methods such as brute force or exploitation of vulnerabilities.&lt;/li&gt;
 &lt;li&gt;Internal malicious actors exploiting legitimate access.&lt;/li&gt;
 &lt;li&gt;Misconfigurations in security settings, such as overly permissive security groups or network ACLs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Data theft and loss of sensitive information.&lt;/li&gt;
 &lt;li&gt;Service disruptions and potential downtime.&lt;/li&gt;
 &lt;li&gt;Increased risk of further network and system exploitation.&lt;/li&gt;
 &lt;li&gt;Financial losses and reputational damage.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;External Attack: A hacker gains unauthorized access to an EC2 instance by exploiting a vulnerability in a web application and subsequently accessing the underlying network.&lt;/li&gt;
 &lt;li&gt;Internal Misuse: An employee uses their legitimate access to explore unauthorized network segments, leading to potential data exfiltration.&lt;/li&gt;
 &lt;li&gt;Misconfiguration: A misconfigured security group allows inbound traffic from any IP address, enabling an attacker to exploit services running within the VPC.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To mitigate this threat, enforce strict access controls using security groups and network ACLs, regularly review and update security configurations, and employ network monitoring tools to detect and respond to unauthorized access attempts promptly.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-02" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-01" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AMAZON-VPC-CNT-01" mitigation="50"/>
                <countermeasure ref="C-AMAZON-VPC-CNT-02" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1190 - Exploit Public-Facing Application"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
            <threat ref="T-AMAZON-VPC-T-VPC-02" name="Insufficient monitoring" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Insufficient monitoring refers to the lack of adequate surveillance and tracking mechanisms to detect, log, and analyze activities within a system. In Amazon VPS, this can lead to undetected security incidents, compliance issues, and operational inefficiencies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Hackers exploiting unmonitored vulnerabilities.&lt;/li&gt;
 &lt;li&gt;Internal malicious actors taking advantage of weak logging practices.&lt;/li&gt;
 &lt;li&gt;Unintended configuration changes going unnoticed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Delayed or missed detection of security breaches.&lt;/li&gt;
 &lt;li&gt;Increased risk of data theft or corruption.&lt;/li&gt;
 &lt;li&gt;Non-compliance with regulatory requirements.&lt;/li&gt;
 &lt;li&gt;Prolonged downtime and extended incident response times.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Data Breach: A hacker gains unauthorized access to a VPS due to a missed security patch, which goes unnoticed due to insufficient monitoring.&lt;/li&gt;
 &lt;li&gt;Internal Threat: An employee with elevated privileges accesses sensitive data without proper logging, making it difficult to trace the action.&lt;/li&gt;
 &lt;li&gt;Configuration Error: Misconfigurations in security groups or network ACLs are not detected, leading to potential exposure of resources.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To address this threat, it is crucial to implement comprehensive monitoring solutions like AWS CloudWatch and AWS CloudTrail, and to regularly review and analyze logs to identify and respond to potential security incidents promptly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AMAZON-VPC-CNT-03" mitigation="50"/>
                <countermeasure ref="C-AMAZON-VPC-CNT-04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1562 - Impair Defenses"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
            <threat ref="T-AMAZON-VPC-T-VPC-03" name="Unintended network access" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unintended network access occurs when resources within a network are inadvertently exposed to unauthorized entities due to misconfigurations or oversight, leading to potential data breaches, unauthorized modifications, and service disruptions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;External attackers exploiting exposed services.&lt;/li&gt;
 &lt;li&gt;Internal users accessing unintended resources due to misconfigured permissions.&lt;/li&gt;
 &lt;li&gt;Automated scripts or tools scanning for open ports and services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Unauthorized access to sensitive data.&lt;/li&gt;
 &lt;li&gt;Service disruptions and operational inefficiencies.&lt;/li&gt;
 &lt;li&gt;Increased risk of further exploitation and lateral movement within the network.&lt;/li&gt;
 &lt;li&gt;Financial and reputational damage due to data breaches and service outages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Exposed Services: A database is unintentionally left accessible from the internet due to misconfigured security groups, allowing an attacker to access and exfiltrate sensitive data.&lt;/li&gt;
 &lt;li&gt;Internal Access: An employee accesses confidential files stored in an improperly secured S3 bucket that should have been restricted.&lt;/li&gt;
 &lt;li&gt;Automated Scans: An automated tool finds an open management port on an EC2 instance, which is then exploited to gain unauthorized access.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To mitigate this threat, regularly review and update security group rules, network ACLs, and use tools like AWS Network Access Analyzer to identify and rectify unintended network exposures.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AMAZON-VPC-CNT-05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1046 - Network Service Discovery"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
            <threat ref="T-AMAZON-VPC-T-VPC-04" name="Unfiltered traffic" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unfiltered traffic refers to network traffic that is not adequately controlled or monitored, allowing potentially harmful data to enter or exit the network unchecked. This can lead to security vulnerabilities, data breaches, and network inefficiencies in an Amazon VPS environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;External attackers sending malicious data packets.&lt;/li&gt;
 &lt;li&gt;Internal users inadvertently or deliberately bypassing security measures.&lt;/li&gt;
 &lt;li&gt;Misconfigured security groups and network ACLs allowing all traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Exposure to malware and other malicious content.&lt;/li&gt;
 &lt;li&gt;Data exfiltration or loss of sensitive information.&lt;/li&gt;
 &lt;li&gt;Network congestion and reduced performance.&lt;/li&gt;
 &lt;li&gt;Increased risk of further network exploitation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Malware Infiltration: An attacker sends malicious traffic that goes unchecked into the network, infecting servers and spreading malware.&lt;/li&gt;
 &lt;li&gt;Data Exfiltration: An internal user sends sensitive data out of the network due to lack of outbound traffic filtering.&lt;/li&gt;
 &lt;li&gt;DoS Attack: Unfiltered inbound traffic leads to a Denial of Service attack, overwhelming the network and causing service outages.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To mitigate this threat, implement and regularly update security groups, network ACLs, and use AWS Network Firewall to filter and monitor inbound and outbound traffic.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-06" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AMAZON-VPC-CNT-06" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1046 - Network Service Discovery"/>
                <customField ref="SF-T-STRIDE-LM" value="Information Disclosure"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-SPOOFING" name="Spoofing" desc="Spoofing involves an attacker pretending to be someone else by falsifying data or identity. This can include spoofing email addresses, IP addresses, or user identities to gain unauthorized access to systems or information." library="amazon-web-services-components">
          <threats>
            <threat ref="T-AMAZON-VPC-T-VPC-05" name="Compromised IAM credentials" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="amazon-web-services-components" editable="true">
              <desc>&lt;p&gt;&lt;strong&gt;General Threat Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Compromised IAM (Identity and Access Management) credentials refer to instances where attackers gain unauthorized access to AWS resources by obtaining valid IAM credentials. This can lead to significant security breaches, unauthorized data access, and control over AWS services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Phishing attacks to trick users into revealing credentials.&lt;/li&gt;
 &lt;li&gt;Brute force attacks to guess passwords.&lt;/li&gt;
 &lt;li&gt;Exploitation of weak password policies.&lt;/li&gt;
 &lt;li&gt;Insider threats where employees misuse access privileges.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Unauthorized access to sensitive data and resources.&lt;/li&gt;
 &lt;li&gt;Potential data breaches and data loss.&lt;/li&gt;
 &lt;li&gt;Unauthorized modifications or deletions of resources.&lt;/li&gt;
 &lt;li&gt;Financial losses due to misuse of AWS services.&lt;/li&gt;
 &lt;li&gt;Reputational damage from security incidents.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Phishing Attack: An attacker sends a phishing email to an employee, tricking them into providing their IAM credentials, which are then used to access and extract data from S3 buckets.&lt;/li&gt;
 &lt;li&gt;Brute Force Attack: An attacker uses automated tools to repeatedly attempt logins until they successfully guess a weak password, gaining unauthorized access to critical resources.&lt;/li&gt;
 &lt;li&gt;Insider Threat: A disgruntled employee uses their IAM credentials to access sensitive information and leak it to external parties.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To mitigate this threat, enforce strong password policies, enable multi-factor authentication (MFA) for all IAM users, regularly rotate credentials, and monitor IAM activities using AWS CloudTrail and AWS Config for unusual access patterns.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="C-AMAZON-VPC-CNT-07" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AMAZON-VPC-CNT-07" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1110 - Brute Force"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="440cb60c-de5e-4d1e-9a93-a00aa53db374" diagramComponentId="df5fa85f-c4d7-4ba7-989b-8c2153681fbb" ref="8771303a-abc7-4e55-8e65-d242c64e000b" name="Microservice" desc="" library="" parentComponentRef="fc7037a6-cb6b-4f34-b911-df47698ef23c" componentDefinitionRef="microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="APP-AS-1" name="Application secrets at risk of exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that there is no sensitive data (such as credentials) in the application code or in configuration files is a challenge because the environments that containers run in have varying security controls and may provide access to unintended parties.&amp;nbsp; Developers need to consider the new threats brought about by multi-tenancy and shared platforms.&amp;nbsp; Not doing so can result in exposure of sensitive data.&amp;nbsp; 
&lt;/div&gt;Encryption methods are only useful if they are robust.&amp;nbsp; This is a particular challenge in container architectures as there are many competing interests and constraints which must be accounted for.&amp;nbsp; It is important that developers take ownership of encryption, while also working within the needs and requirements of the framework. Because of the complexity of containerized systems, and the general tendency of organizations to place security in the hands of operators, encryption of application secrets may be overlooked by developers.&amp;nbsp; This can result in exploitable vulnerabilities which administrators of the system are unaware of.&amp;nbsp;Some of the challenges of securing containerized systems include the variety of secrets which must be protected, and the fact that the available methods for protection may not be consistent between environments.&amp;nbsp; Organizations should be aware of these challenges and implement robust mechanisms which anticipate the problems inherent and provide mitigating strategies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.339">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-AA-1" name="Cloud-native environments may introduce risks to the microservice architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of cloud providers introduces many capabilities to container architectures, while also streamlining workflows and reducing the necessity of managing hardware.&amp;nbsp; However it also increases complexity, and this can make it more difficult to identify and mitigate vulnerabilities.&amp;nbsp; It can also result in a lack of ownership for security issues as developers assume that other parties are taking responsibility. Applications and containers which run or on otherwise access cloud providers must identify themselves.&amp;nbsp; Credentials and access control must be securely managed in order to prevent secret exposure and privilege escalation.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.338">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="IM-G-1" name="Code promotion across environments may introduce vulnerabilities" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Code and image provenance is a developer and application owner concern; verification requires certification and key management across the code promotion path. This can be a challenge as multiple parties and certificate owners may be involved. The absence can result in application version mismatches or running tampered images. 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.244">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-G-1" name="Contention issues arise due to the elasticity of workload and dynamic resource requests" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   Ensuring resource availability as needed to support workloads is a challenge.&amp;nbsp; This is because of the dynamic use and availability of resources in a potentially shared environment, combined with the possibly unpredictable use of an application. The absence can result in either the CMP being unable to allocate appropriate resources for an application container, or a resource shortage within the CMP. 
 &lt;/div&gt;&lt;div&gt;
  Resources usage which is not properly managed by developers will affect the usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.433">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="IM-G-2" name="Image contents may not be secure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Images must have no known vulnerabilities or malicious code. Developers must help to ensure images have not been tampered with as they move from development to production. Applications of this feature include scanning images for vulnerabilities and malicious code and using image signing and validation mechanisms. 
&lt;/div&gt;&lt;div&gt;
  Ensuring that only the required components are packaged inside the image can be a challenge due to the complexity of applications. If this is not carefully managed it can result in the compromise of an unnecessary component.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Ensuring third-party components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components.&amp;nbsp; OS package managers are a particular challenge in this regard due to the large number of updates and downloads they maintain, and the fact that they often have unrestricted access to systems.&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments.&amp;nbsp; Developers should not assume that system wide security settings will mitigate potential application vulnerabilities.&amp;nbsp; Rather, they should ensure that their images have no known vulnerabilities or malicious code, and that they have not been tampered with as they move from development to production. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.244">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-N-1" name="Insecure networking settings may be exploited to gain access to containers or hosts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the lack of network tooling and data storage. The absence can result in the exposure of sensitive information and diminished incident response and detection capabilities. 
&lt;/div&gt;&lt;div&gt;
  In container networking, communications between containers and hosts must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled.&amp;nbsp; In terms of applications, communications between containers affect access control, limiting access to network traffic, resources, and configurations (leveraging network namespace). Other outcomes include isolating the container interfaces, monitoring network activity, and securing communications between containers via SSL/TLS or VPN. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.433">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-D-1" name="Insufficient scaling of container resources may lead to inefficient resource utilization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring resource scaling requests take priority over other containers may provide a challenge.&amp;nbsp; This is due to complexity and implementation of the CMP to allow such prioritization. The absence can result in priority applications not being able to scale for user workloads. 
&lt;/div&gt;&lt;div&gt;
  It is a challenge for developers to define application performance profiles. Predictive application workload modeling is a complex task often substituted by a "common practice" or, equally precise, "by analogy".&amp;nbsp; This is largely due to lack of tooling in development environments. Both are likely to lead to inefficient resource utilization. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.433">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-LM-1" name="Lack of continuous monitoring can result in application version mismatches and system availability issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The ephemeral nature of application containers increases the necessity of reliable and centralized monitoring of platform, host, and containers.&amp;nbsp; It is essential to ensure that container runtime actions and events are monitored and logged in order to allow timely identification and mitigation of problems and threats. 
&lt;/div&gt;&lt;div&gt;
  There may be a challenge for developers to understand which container versions are running and where. This information needs to be easily and quickly digestible by appropriate parties. The absence can result in application version mismatches and system availability issues. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.339">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-G-1" name="Lifecycle events prevent secure startup and shutdown of applications" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Developing a containerized application that can be scaled up or down without notice is a challenge because of the extra effort required to design and implement the application in a manner where it can gracefully handle such scaling events while maintaining a secure state.&amp;nbsp; &amp;nbsp;It is a more robust approach to ensure that stateful containerized applications are aware of container scaling events to ensure transitions between secure states. 
&lt;/div&gt;&lt;div&gt;
  In an ideal world, either application containers are stateless, or the applications have been developed with clustering technologies to attach and release neighbors as they start and are terminated.&amp;nbsp; Some use cases, though, will have containers that have not been developed in such a manner, or which contain legacy applications that have migrated to containers. Such applications running inside a container may not be aware of pending lifecycle events issued by a CMP such as container start/stop/scale.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The containerized application should have an opportunity to be informed of the pending container's lifecycle events to manage its own lifecycle accordingly. This is essential to ensure the application's secure startup and shutdown.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.339">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-G-2" name="Mismanagement of container volumes can compromise underlying architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   In container volume management, it is essential to ensure the container has need-only access to data volumes and uses dedicated storage resources for runtime operations.&amp;nbsp; In the application, it is vital to ensure that access control exists for file system resources and raw storage devices, and that data is encrypted at rest in the data volumes.&amp;nbsp; Applications directly mounting a host directory should be avoided. 
 &lt;/div&gt;Building an image that minimizes using shared container volumes is imperative due to the risk of exposing sensitive data to the host or other containers, and the current reliance on sharing information with containers. This can result in exposure of sensitive data.&amp;nbsp;&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Building an image that does not share the host filesystem is equally crucial because exposing the host filesystem can result in compromising the underlying infrastructure, and other containers that share the same environment.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.433">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-LM-2" name="The complexity of container architectures can make logging and monitoring difficult to implement" state="0" impact="100" issueId="" issueLink="">
          <desc>Ensuring that coding policies include logging capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling.&amp;nbsp; In addition, there are many logging features which may be implemented in microservices and an absence of clear policies can result in lack of ownership from key parties, including developers.&amp;nbsp;&amp;nbsp;&lt;div&gt;
  Usually application logging is added after the fact as a response to an incident or audit.&amp;nbsp; Ensuring that application logs, starting with authentication logs, are captured for existing applications is a challenge due to lack of resources to modify the application and necessary guidance to do so.&amp;nbsp;&amp;nbsp;This will result in diminishing incident response and detection capabilities.&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.339">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSA-SACA-3.1.5:1" name="Applications must use secure network communication protocols" issueId="" issueLink="" platform="" cost="1" risk="35" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic generated by the containers should maintain confidentiality regarding the applications and management by utilizing proper encryption protocols (i.e., SSL/TLS, IPSec). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Selecting libraries that support secure communications to provide encryption and maintain confidentiality prevents information spillage and network traffic tampering. Tampering of network traffic may result in system compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify any communications in your application which will be sent as network traffic and ensure that encryption protocols have been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.2.1" name="Avoid using images with OS package managers" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images with OS package managers or shells could contain unknown vulnerabilities.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Package managers are normally run with unrestricted access in order to allow them to modify critical system software. The package manager's actions, therefore, affect the entire system.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you must include OS packages, remove the package manager before deploying the container.&amp;nbsp; The following steps may also help mitigate the risk: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use repositories you trust. Use only mirrors that belong to reputable organizations.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Manually update your systems (and local mirror caches).&lt;/li&gt; 
  &lt;li&gt;Use signed repository metadata.&lt;/li&gt; 
  &lt;li&gt;Use HTTPS for mirror communication.&lt;/li&gt; 
  &lt;li&gt;Use package managers that implement metadata expiration.&lt;/li&gt; 
  &lt;li&gt;Use distributions that properly make use of the package manager's security features.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="cs.arizona.edu: Attacks on Package Managers" url="https://www2.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the steps for your particular OS to identify if package managers are installed on the container.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:1" name="Create and follow coding policies to include logging capabilities" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An application should provide logs regarding authentication, authorization, actions, and failures. The developer should include this capability as part of planning and design phases. For new applications, the developer should create and follow coding policies to include logging capabilities at the planning and design stages.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been planned and designed in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:2" name="Create common libraries for developers to handle sensitive data and secrets in the backend application code" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable consistent ways of addressing the handling of sensitive data and secrets within backend application code, a common set of libraries should be provided to developers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Application developers are not necessarily security developers and should devote time to developing application features, not security. Security that is required within applications should be easy to use and made clear, so that minimum effort is spent and consistency across applications is achieved. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that libraries exist for securing sensitive data and that they have been applied to your applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.307">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:1" name="Developers should receive sufficient training on volume management" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should receive sufficient training to ensure development of applications that minimize the need to use shared container volumes and that do not require any access to host directories. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Shared volumes can result in exposure of sensitive data. Images which share the host volumes or filesystem can result in the compromise of the underlying infrastructure and other containers sharing the same environment. Avoiding these configurations is a challenge, which is why developer training is essential. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:3" name="Encrypt the sensitive application and create a container entry point application that decrypts and executes the main application" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By encrypting the sensitive application, the risk of unintended exposure of the sensitive application can be mitigated. This allows the container image (and sensitive application) to be stored, transmitted, or shared without unauthorized exposure. Encryption and decryption of the application should be treated as any other data encryption/decryption process. For sensitive applications, developers should encrypt the sensitive application, then create a container entry point application that decrypts and executes the main application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that an appropriate level of encryption has been applied to any sensitive data in the application.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:1" name="Ensure sustainable system performance by balancing system resources" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Working with the operator and architect, the developer should ensure that the binaries and libraries are optimized to operate in a containerized infrastructure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Default configurations or those that are suitable for non-containerized systems may conflict with the needs of container architectures.&amp;nbsp; Developers need to be aware of the environmental impacts on their applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review optimization configurations to ensure they are compliant with the needs or policies of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SAC-3.1.1:1" name="Establish a root of trust" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A public key infrastructure (PKI) allows creation and management of a hierarchy of digital certificates for encryption and digital signatures. A PKI may already exist in an organization-certificates from this new or existing system can be used to sign container images and later verify their provenance and integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the developer must have the ability to digitally sign and provide a digital signature for the code and/or binary artifacts that will be promoted between environments or to the next promotion phase. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By signing a container image with a certificate that is part of a PKI, container management platform (CMP), users can easily verify the source of an image. This is important as once the source of the image is determined, users can ensure that the image has been through appropriate scrutiny before being promoted for production use. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all existing images are appropriately signed or verified, using keys provided by your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.1" name="Harden all applications in an image" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;span style="line-height: 107%; font-size: 14.6667px;"&gt;&lt;font face="Times New Roman, serif"&gt; 
   &lt;div style=""&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Description:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Ensure that applications are secure and follow best practices. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Rationale:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      When deploying applications in a containerized system, vulnerabilities that compromise the application can in turn compromise the entire architecture.&amp;nbsp; This is a result of the way containers and pods communicate and access resources throughout the whole cluster. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Remediation:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Analyze source code regularly to ensure it is following best practices to avoid vulnerabilities.&amp;nbsp; &amp;nbsp;Continuously test your application against common attack practices, like SQL injection, DDoS attack, etc. There are various dynamic analysis tools available to assist.&amp;nbsp; 
    &lt;/div&gt; 
   &lt;/div&gt;&lt;/font&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="font-family: &amp;quot;Times New Roman&amp;quot;, serif; font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="The New Stack: A Security Checklist for Cloud Native Kubernetes Environments" url="https://thenewstack.io/a-security-checklist-for-cloud-native-kubernetes-environments/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a reliable tool such as Veracode or Synopsys to analyze source code for vulnerabilities before deploying.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:2" name="Identify a data at rest (DAR) solution" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer should utilize a DAR solution, if at all possible, that has been FIPS 140-2 validated. The developer should also analyze the application programming interface (API) and a compatible key management system (KMS).&amp;nbsp; The developer should also utilize the latest advanced encryption standard (AES) with the highest possible key length. Developers also have to take into account if the solution has been validated by an impartial third party and if the solution is viable in the intended operational environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With a FIPS-validated solution and a compatible KMS, there is some third party validation that the solution is secure and thus a higher level of assurance.&amp;nbsp; Robust use of AES will ensure data confidentiality. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that encryption is included and that the level is appropriate to the application security needs and the wider system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:2" name="Implement plans to capture application logs" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An existing application should provide logs regarding authentication, authorization, actions, and failures. If any of these logging items have not been implemented, developers should provide these capabilities as part of the maintenance phase. For existing applications, the developer should implement plans to capture application logs, starting with authentication logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been applied in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:3" name="Include only necessary components inside the image" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should trim down images to include only necessary components. It is preferred to use a baseline image with minimal set of packages over a full OS distribution.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Removing unnecessary components from the image will reduce the number of potentially outdated or unpatched packages and therefore reduce the number of security vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.11:1" name="Left the application in an unknown state if a containerized application is unaware of the container's transitions" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CMP should provide the encapsulated application an opportunity to perform a graceful transition to a known secure state. The conventional solution is to allow an application to be notified of the container lifecycle events. Resources, freed after container's removal, should be released back to the pool in a well known state and containers should be allowed to log any state changing events. The container's lifecycle (start/stop/scaled) is managed by CMP. From a developer's perspective, the application could be left in an unknown state if a containerized application is unaware of the container's transitions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is essential to inform the application of the container's lifecycle events, so that it may take appropriate action to ensure a secure startup and shutdown. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.11" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the container's stop start process and ensure that any related and relevant configurations have been applied to your applications.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.2" name="Limit credential exposure" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Harden credentials before deploying applications 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Plain text (non-encrypted) credentials (account passwords, SSH Keys, DevOps secrets, etc.) may be embedded into source code because it helps to simplify deployments at scale.&amp;nbsp; This poses formidable security risks that are routinely exploited by malware and hackers. In some cases, a threat actor may insert hardcoded credentials to create a backdoor, allowing them persistent access to a device, application, or system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Hardcoded credentials are favored cyberattack targets for password guessing exploits, allowing hackers and malware to hijack systems, and software. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't define credentials in your application code. Use managed identities for cloud resources to let your pod request access to cloud provider.&amp;nbsp; Avoid the use of fixed or shared credentials. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="BeyondTrust: Hardcoded and Embedded Credentials are an IT Security Hazard" url="https://www.beyondtrust.com/blog/entry/hardcoded-and-embedded-credentials-are-an-it-security-hazard-heres-what-you-need-to-know"/>
            <reference name="Microsoft docs: Best practices for pod security in Azure Kubernetes Service" url="https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review application code before deployment for embedded credentials.&amp;nbsp; Carry out pen testing of applications to find overlooked credential vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.307">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:1" name="Provide training and best practices guidance to developers" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers should be informed and trained on threats arising from multi-tenancy on public clouds.&amp;nbsp; They also need to be trained and provided with templates for how to use the secret management feature within their apps so they avoid the practice of hard-coding static secrets within application code. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers are accustomed to the practice of baking sensitive information into server code from the days when server-side was considered trusted environment. Raising the awareness of the nuances and threats present in current public cloud environments helps drive in the need to avoid such practices 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.307">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.1" name="Remove components which are only required for development" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tools that are essential during application development can create security risks in deployment 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Any unnecessary component is another potential entrance point for an attacker.&amp;nbsp; Debuggers and common tools like Curl that are useful to attackers should not be included in images in deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Perform an analysis of the entire container before deployment and remove any components or functions you do not need. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.2" name="Secure any dependencies" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that any dependencies used by applications are also secure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is hard to keep to track of all the packages an application uses and to make sure they are not vulnerable.&amp;nbsp; Even if you ensure that your own application is free of vulnerabilities, if the base packages and dependencies are not secure, the container could still be vulnerable to attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Regularly perform a full dependency analysis for code to uncover your open source and other dependencies for any vulnerabilities they contain. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a suitable vulnerability scanner to carry out a full dependency analysis for code to uncover your dependencies and any vulnerabilities they contain.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.2" name="Secure the container base image" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;b&gt;Description: &lt;/b&gt;&lt;br&gt;Ensure that container images are built using secure and approved base images&lt;br&gt;&lt;br&gt;&lt;b&gt;Rationale:&lt;/b&gt;&lt;br&gt;Vulnerabilities in software packages can be exploited by hackers or malicious users to obtain unauthorized access to local or cloud resources. &lt;br&gt;&lt;br&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;br&gt;Select minimal base images, add only what you require, and scan them for vulnerabilities.&amp;nbsp; &amp;nbsp;Ideally, the tool you choose for this function should be aware of your base image choice and alert you when there is an updated version of your base image, or if there are alternate base images that can reduce vulnerabilities.&lt;br&gt;&lt;br&gt;Only deploy authorized container images that you've analyzed, scanned, and signed (i.e. Software Supply Chain Security). Grafeas, TUF, and Notary can help here.&lt;br&gt;&lt;br&gt;Ensure that only images from image registries on allow lists are used to launch containers in your Kubernetes environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Peter Benjamin: Kubernetes Security Best-Practices" url="https://dev.to/petermbenjamin/kubernetes-security-best-practices-hlk"/>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;font face="Times New Roman, serif"&gt;Please follow your 3rd party image scanning provider's guidelines for enabling Image Scanning.&lt;/font&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:1" name="Sign images as part of the image build process and validate images before use" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images should be signed as part of the build process and validated before used. Signing and validation can be achieved through GNU Privacy Guard (GPG) signatures on image contents or through similar methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered with between build and run time. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your applications to ensure that the appropriate signing has taken place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.3:1" name="Use clear versioning schemes to identify application versions running in containers" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By defining and using an accepted versioning scheme, a development team can have version numbers automatically implemented as part of a build process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By applying versions either to a container name, tag, or label, the developer is then able to easily identify application versions running in containers. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.3" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review container names, tags, or labels to check that they contain version numbers in line with your organizational or system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.1" name="Use IAM for access control" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Description:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Implement authentication and access control with the Identity and Access Management (IAM) service provided by the cloud provider. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Rationale:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Applications which have access to the full scope of the cloud provider may perform actions outside of their scope.&amp;nbsp; This can be exploited by attackers to gain access to large areas of the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use IAM roles to provide fine-grained access.&amp;nbsp; Assign roles only the specific amount of resources they need, or allow them&amp;nbsp; to perform only a particular amount of activities. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="we45: Security Essentials for a Developer - Kubernetes" url="https://we45.com/blog/security-essentials-for-a-developer-kubernetes/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use the relevant tools for your cloud provider to audit the use of IAM roles in applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.307">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:1" name="Use standard, commonly available authentication systems" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When either data or applications are encrypted within a container, having a reliable method to authorize use of encryption keys is required. Alternatively, applications must be written to support multiple authentication methods, introducing unnecessary complexity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using common authentication methods, this ensures a predictable ability to authenticate and authorize the use of encryption keys across CMPs.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that an encryption policy or standard exists for your organization, and that it has been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:2" name="Use vulnerability scanning tools as part of the development process" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should use vulnerability scanning tools as part of the development process and the CI pipeline, and integrate a vulnerability assessment into the build process. They will also want to consider failing a build if the vulnerability assessment fails. Once a vulnerability is identified, apply security patches to the vulnerable component and rebuild the image. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A vulnerability scanner will identify and alert on the use of third-party components with known security vulnerabilities. Applying vulnerability scanning as part of the development cycle improves the security quality of the images, since well-known vulnerabilities are identified and patched before software gets into runtime environment. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if a protocol exists for vulnerability scanning in your organization and, if so, that it has been utilized.&amp;nbsp; If one does not exist, use one of the recommended tools to ensure that your own applications and containers do not contain vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.215">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.14:1" name="Utilize resource control features to orchestrate intra-container resource utilization, prioritization and allocation thresholds" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should expect the presence of horizontal infrastructure scaling capability but should avoid the need for vertical scaling by ensuring that the application can function within the parameters established by the configuration management team. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer must obtain the resource utilization and hardening parameters and incorporate those configurations into the software development environment and testing scripts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The application developer must accept that the application under development will not have on-hand the entirety of computing resources available in the production environment. Even in the presence of auto-scale, auto-scaling capability has limits and does not scale out infinitely.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Without testing application functions within defined production parameters, the risk of poor application performance goes up, not down. Proper configuration of resource and security functionality as appropriate to the CMP in use ensures that a resource consumption fault or runaway container processes do not affect adjacent containers.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.14" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the capabilities of the CMP in terms of the relevant thresholds and ensure your application is compliant.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-CONTAINER-VOLUMES" name="Sensitive data is compromised by unauthorized access to container volumes" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>An attacker find flaws to access container volumes without permission</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="IMAGE-MODIFICATION" name="Attackers compromise images by modifying their content" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>An attacker modifies/forges a microservices image to introduce vulnerabilities in the system</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                    <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                    <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="OWASP A1:2017" name="Attackers gain access to the sensitive data through injecting code in the repositories" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Almost any source of data can be an injection vector: environment variables,
                                parameters, external and internal web services, and all types of users. Injection flaws
                                occur when an attacker can send hostile data to an interpreter.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                    <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="SCALABILITY-ISSUES" name="Availability is compromised through attacks against scalability configuration" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>An attacker compromise the availability of a system by exploiting scalability configurations in order to consume resources</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CO-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY-DATA" name="Sensitive data is exposed through weak security configurations" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Weak security configurations make possible for an attacker to access sensitive data like API keys, credentials, etc.</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AS-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CLOUD-VULNERABILITIES" name="Attackers use known cloud vulnerabilities to access unauthorized data" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Known vulnerabilities in a specific cloud environment are used to exploit a system, allowing an attacker to access unauthorized data</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AA-1">
                  <countermeasures>
                    <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                    <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-LM-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="APP-LM-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses>
                <weakness ref="CO-D-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-N-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="25e58a58-30f2-4f3d-88eb-17786b57fc9e" diagramComponentId="f5642d0a-3b3b-4cef-a759-ed460c55bef7" ref="c001a04f-8741-4992-b310-7e85b5725772" name="Microservice" desc="" library="" parentComponentRef="fc7037a6-cb6b-4f34-b911-df47698ef23c" componentDefinitionRef="microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="APP-AS-1" name="Application secrets at risk of exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that there is no sensitive data (such as credentials) in the application code or in configuration files is a challenge because the environments that containers run in have varying security controls and may provide access to unintended parties.&amp;nbsp; Developers need to consider the new threats brought about by multi-tenancy and shared platforms.&amp;nbsp; Not doing so can result in exposure of sensitive data.&amp;nbsp; 
&lt;/div&gt;Encryption methods are only useful if they are robust.&amp;nbsp; This is a particular challenge in container architectures as there are many competing interests and constraints which must be accounted for.&amp;nbsp; It is important that developers take ownership of encryption, while also working within the needs and requirements of the framework. Because of the complexity of containerized systems, and the general tendency of organizations to place security in the hands of operators, encryption of application secrets may be overlooked by developers.&amp;nbsp; This can result in exploitable vulnerabilities which administrators of the system are unaware of.&amp;nbsp;Some of the challenges of securing containerized systems include the variety of secrets which must be protected, and the fact that the available methods for protection may not be consistent between environments.&amp;nbsp; Organizations should be aware of these challenges and implement robust mechanisms which anticipate the problems inherent and provide mitigating strategies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.708">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-AA-1" name="Cloud-native environments may introduce risks to the microservice architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of cloud providers introduces many capabilities to container architectures, while also streamlining workflows and reducing the necessity of managing hardware.&amp;nbsp; However it also increases complexity, and this can make it more difficult to identify and mitigate vulnerabilities.&amp;nbsp; It can also result in a lack of ownership for security issues as developers assume that other parties are taking responsibility. Applications and containers which run or on otherwise access cloud providers must identify themselves.&amp;nbsp; Credentials and access control must be securely managed in order to prevent secret exposure and privilege escalation.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.708">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="IM-G-1" name="Code promotion across environments may introduce vulnerabilities" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Code and image provenance is a developer and application owner concern; verification requires certification and key management across the code promotion path. This can be a challenge as multiple parties and certificate owners may be involved. The absence can result in application version mismatches or running tampered images. 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.028">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-G-1" name="Contention issues arise due to the elasticity of workload and dynamic resource requests" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   Ensuring resource availability as needed to support workloads is a challenge.&amp;nbsp; This is because of the dynamic use and availability of resources in a potentially shared environment, combined with the possibly unpredictable use of an application. The absence can result in either the CMP being unable to allocate appropriate resources for an application container, or a resource shortage within the CMP. 
 &lt;/div&gt;&lt;div&gt;
  Resources usage which is not properly managed by developers will affect the usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.140">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="IM-G-2" name="Image contents may not be secure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Images must have no known vulnerabilities or malicious code. Developers must help to ensure images have not been tampered with as they move from development to production. Applications of this feature include scanning images for vulnerabilities and malicious code and using image signing and validation mechanisms. 
&lt;/div&gt;&lt;div&gt;
  Ensuring that only the required components are packaged inside the image can be a challenge due to the complexity of applications. If this is not carefully managed it can result in the compromise of an unnecessary component.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Ensuring third-party components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components.&amp;nbsp; OS package managers are a particular challenge in this regard due to the large number of updates and downloads they maintain, and the fact that they often have unrestricted access to systems.&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments.&amp;nbsp; Developers should not assume that system wide security settings will mitigate potential application vulnerabilities.&amp;nbsp; Rather, they should ensure that their images have no known vulnerabilities or malicious code, and that they have not been tampered with as they move from development to production. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.029">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-N-1" name="Insecure networking settings may be exploited to gain access to containers or hosts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the lack of network tooling and data storage. The absence can result in the exposure of sensitive information and diminished incident response and detection capabilities. 
&lt;/div&gt;&lt;div&gt;
  In container networking, communications between containers and hosts must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled.&amp;nbsp; In terms of applications, communications between containers affect access control, limiting access to network traffic, resources, and configurations (leveraging network namespace). Other outcomes include isolating the container interfaces, monitoring network activity, and securing communications between containers via SSL/TLS or VPN. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.140">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-D-1" name="Insufficient scaling of container resources may lead to inefficient resource utilization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring resource scaling requests take priority over other containers may provide a challenge.&amp;nbsp; This is due to complexity and implementation of the CMP to allow such prioritization. The absence can result in priority applications not being able to scale for user workloads. 
&lt;/div&gt;&lt;div&gt;
  It is a challenge for developers to define application performance profiles. Predictive application workload modeling is a complex task often substituted by a "common practice" or, equally precise, "by analogy".&amp;nbsp; This is largely due to lack of tooling in development environments. Both are likely to lead to inefficient resource utilization. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.140">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-LM-1" name="Lack of continuous monitoring can result in application version mismatches and system availability issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The ephemeral nature of application containers increases the necessity of reliable and centralized monitoring of platform, host, and containers.&amp;nbsp; It is essential to ensure that container runtime actions and events are monitored and logged in order to allow timely identification and mitigation of problems and threats. 
&lt;/div&gt;&lt;div&gt;
  There may be a challenge for developers to understand which container versions are running and where. This information needs to be easily and quickly digestible by appropriate parties. The absence can result in application version mismatches and system availability issues. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.709">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-G-1" name="Lifecycle events prevent secure startup and shutdown of applications" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Developing a containerized application that can be scaled up or down without notice is a challenge because of the extra effort required to design and implement the application in a manner where it can gracefully handle such scaling events while maintaining a secure state.&amp;nbsp; &amp;nbsp;It is a more robust approach to ensure that stateful containerized applications are aware of container scaling events to ensure transitions between secure states. 
&lt;/div&gt;&lt;div&gt;
  In an ideal world, either application containers are stateless, or the applications have been developed with clustering technologies to attach and release neighbors as they start and are terminated.&amp;nbsp; Some use cases, though, will have containers that have not been developed in such a manner, or which contain legacy applications that have migrated to containers. Such applications running inside a container may not be aware of pending lifecycle events issued by a CMP such as container start/stop/scale.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The containerized application should have an opportunity to be informed of the pending container's lifecycle events to manage its own lifecycle accordingly. This is essential to ensure the application's secure startup and shutdown.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.708">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CO-G-2" name="Mismanagement of container volumes can compromise underlying architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   In container volume management, it is essential to ensure the container has need-only access to data volumes and uses dedicated storage resources for runtime operations.&amp;nbsp; In the application, it is vital to ensure that access control exists for file system resources and raw storage devices, and that data is encrypted at rest in the data volumes.&amp;nbsp; Applications directly mounting a host directory should be avoided. 
 &lt;/div&gt;Building an image that minimizes using shared container volumes is imperative due to the risk of exposing sensitive data to the host or other containers, and the current reliance on sharing information with containers. This can result in exposure of sensitive data.&amp;nbsp;&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Building an image that does not share the host filesystem is equally crucial because exposing the host filesystem can result in compromising the underlying infrastructure, and other containers that share the same environment.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.140">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="APP-LM-2" name="The complexity of container architectures can make logging and monitoring difficult to implement" state="0" impact="100" issueId="" issueLink="">
          <desc>Ensuring that coding policies include logging capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling.&amp;nbsp; In addition, there are many logging features which may be implemented in microservices and an absence of clear policies can result in lack of ownership from key parties, including developers.&amp;nbsp;&amp;nbsp;&lt;div&gt;
  Usually application logging is added after the fact as a response to an incident or audit.&amp;nbsp; Ensuring that application logs, starting with authentication logs, are captured for existing applications is a challenge due to lack of resources to modify the application and necessary guidance to do so.&amp;nbsp;&amp;nbsp;This will result in diminishing incident response and detection capabilities.&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.709">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSA-SACA-3.1.5:1" name="Applications must use secure network communication protocols" issueId="" issueLink="" platform="" cost="1" risk="35" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic generated by the containers should maintain confidentiality regarding the applications and management by utilizing proper encryption protocols (i.e., SSL/TLS, IPSec). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Selecting libraries that support secure communications to provide encryption and maintain confidentiality prevents information spillage and network traffic tampering. Tampering of network traffic may result in system compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify any communications in your application which will be sent as network traffic and ensure that encryption protocols have been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.2.1" name="Avoid using images with OS package managers" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images with OS package managers or shells could contain unknown vulnerabilities.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Package managers are normally run with unrestricted access in order to allow them to modify critical system software. The package manager's actions, therefore, affect the entire system.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you must include OS packages, remove the package manager before deploying the container.&amp;nbsp; The following steps may also help mitigate the risk: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use repositories you trust. Use only mirrors that belong to reputable organizations.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Manually update your systems (and local mirror caches).&lt;/li&gt; 
  &lt;li&gt;Use signed repository metadata.&lt;/li&gt; 
  &lt;li&gt;Use HTTPS for mirror communication.&lt;/li&gt; 
  &lt;li&gt;Use package managers that implement metadata expiration.&lt;/li&gt; 
  &lt;li&gt;Use distributions that properly make use of the package manager's security features.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="cs.arizona.edu: Attacks on Package Managers" url="https://www2.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the steps for your particular OS to identify if package managers are installed on the container.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:1" name="Create and follow coding policies to include logging capabilities" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An application should provide logs regarding authentication, authorization, actions, and failures. The developer should include this capability as part of planning and design phases. For new applications, the developer should create and follow coding policies to include logging capabilities at the planning and design stages.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been planned and designed in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:2" name="Create common libraries for developers to handle sensitive data and secrets in the backend application code" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable consistent ways of addressing the handling of sensitive data and secrets within backend application code, a common set of libraries should be provided to developers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Application developers are not necessarily security developers and should devote time to developing application features, not security. Security that is required within applications should be easy to use and made clear, so that minimum effort is spent and consistency across applications is achieved. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that libraries exist for securing sensitive data and that they have been applied to your applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:1" name="Developers should receive sufficient training on volume management" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should receive sufficient training to ensure development of applications that minimize the need to use shared container volumes and that do not require any access to host directories. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Shared volumes can result in exposure of sensitive data. Images which share the host volumes or filesystem can result in the compromise of the underlying infrastructure and other containers sharing the same environment. Avoiding these configurations is a challenge, which is why developer training is essential. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:3" name="Encrypt the sensitive application and create a container entry point application that decrypts and executes the main application" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By encrypting the sensitive application, the risk of unintended exposure of the sensitive application can be mitigated. This allows the container image (and sensitive application) to be stored, transmitted, or shared without unauthorized exposure. Encryption and decryption of the application should be treated as any other data encryption/decryption process. For sensitive applications, developers should encrypt the sensitive application, then create a container entry point application that decrypts and executes the main application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that an appropriate level of encryption has been applied to any sensitive data in the application.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:1" name="Ensure sustainable system performance by balancing system resources" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Working with the operator and architect, the developer should ensure that the binaries and libraries are optimized to operate in a containerized infrastructure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Default configurations or those that are suitable for non-containerized systems may conflict with the needs of container architectures.&amp;nbsp; Developers need to be aware of the environmental impacts on their applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review optimization configurations to ensure they are compliant with the needs or policies of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SAC-3.1.1:1" name="Establish a root of trust" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A public key infrastructure (PKI) allows creation and management of a hierarchy of digital certificates for encryption and digital signatures. A PKI may already exist in an organization-certificates from this new or existing system can be used to sign container images and later verify their provenance and integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the developer must have the ability to digitally sign and provide a digital signature for the code and/or binary artifacts that will be promoted between environments or to the next promotion phase. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By signing a container image with a certificate that is part of a PKI, container management platform (CMP), users can easily verify the source of an image. This is important as once the source of the image is determined, users can ensure that the image has been through appropriate scrutiny before being promoted for production use. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all existing images are appropriately signed or verified, using keys provided by your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.986">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.1" name="Harden all applications in an image" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;span style="line-height: 107%; font-size: 14.6667px;"&gt;&lt;font face="Times New Roman, serif"&gt; 
   &lt;div style=""&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Description:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Ensure that applications are secure and follow best practices. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Rationale:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      When deploying applications in a containerized system, vulnerabilities that compromise the application can in turn compromise the entire architecture.&amp;nbsp; This is a result of the way containers and pods communicate and access resources throughout the whole cluster. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Remediation:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Analyze source code regularly to ensure it is following best practices to avoid vulnerabilities.&amp;nbsp; &amp;nbsp;Continuously test your application against common attack practices, like SQL injection, DDoS attack, etc. There are various dynamic analysis tools available to assist.&amp;nbsp; 
    &lt;/div&gt; 
   &lt;/div&gt;&lt;/font&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="font-family: &amp;quot;Times New Roman&amp;quot;, serif; font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="The New Stack: A Security Checklist for Cloud Native Kubernetes Environments" url="https://thenewstack.io/a-security-checklist-for-cloud-native-kubernetes-environments/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a reliable tool such as Veracode or Synopsys to analyze source code for vulnerabilities before deploying.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:2" name="Identify a data at rest (DAR) solution" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer should utilize a DAR solution, if at all possible, that has been FIPS 140-2 validated. The developer should also analyze the application programming interface (API) and a compatible key management system (KMS).&amp;nbsp; The developer should also utilize the latest advanced encryption standard (AES) with the highest possible key length. Developers also have to take into account if the solution has been validated by an impartial third party and if the solution is viable in the intended operational environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With a FIPS-validated solution and a compatible KMS, there is some third party validation that the solution is secure and thus a higher level of assurance.&amp;nbsp; Robust use of AES will ensure data confidentiality. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that encryption is included and that the level is appropriate to the application security needs and the wider system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:2" name="Implement plans to capture application logs" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An existing application should provide logs regarding authentication, authorization, actions, and failures. If any of these logging items have not been implemented, developers should provide these capabilities as part of the maintenance phase. For existing applications, the developer should implement plans to capture application logs, starting with authentication logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been applied in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:3" name="Include only necessary components inside the image" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should trim down images to include only necessary components. It is preferred to use a baseline image with minimal set of packages over a full OS distribution.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Removing unnecessary components from the image will reduce the number of potentially outdated or unpatched packages and therefore reduce the number of security vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.11:1" name="Left the application in an unknown state if a containerized application is unaware of the container's transitions" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CMP should provide the encapsulated application an opportunity to perform a graceful transition to a known secure state. The conventional solution is to allow an application to be notified of the container lifecycle events. Resources, freed after container's removal, should be released back to the pool in a well known state and containers should be allowed to log any state changing events. The container's lifecycle (start/stop/scaled) is managed by CMP. From a developer's perspective, the application could be left in an unknown state if a containerized application is unaware of the container's transitions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is essential to inform the application of the container's lifecycle events, so that it may take appropriate action to ensure a secure startup and shutdown. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.11" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the container's stop start process and ensure that any related and relevant configurations have been applied to your applications.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.2" name="Limit credential exposure" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Harden credentials before deploying applications 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Plain text (non-encrypted) credentials (account passwords, SSH Keys, DevOps secrets, etc.) may be embedded into source code because it helps to simplify deployments at scale.&amp;nbsp; This poses formidable security risks that are routinely exploited by malware and hackers. In some cases, a threat actor may insert hardcoded credentials to create a backdoor, allowing them persistent access to a device, application, or system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Hardcoded credentials are favored cyberattack targets for password guessing exploits, allowing hackers and malware to hijack systems, and software. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't define credentials in your application code. Use managed identities for cloud resources to let your pod request access to cloud provider.&amp;nbsp; Avoid the use of fixed or shared credentials. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="BeyondTrust: Hardcoded and Embedded Credentials are an IT Security Hazard" url="https://www.beyondtrust.com/blog/entry/hardcoded-and-embedded-credentials-are-an-it-security-hazard-heres-what-you-need-to-know"/>
            <reference name="Microsoft docs: Best practices for pod security in Azure Kubernetes Service" url="https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review application code before deployment for embedded credentials.&amp;nbsp; Carry out pen testing of applications to find overlooked credential vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:1" name="Provide training and best practices guidance to developers" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers should be informed and trained on threats arising from multi-tenancy on public clouds.&amp;nbsp; They also need to be trained and provided with templates for how to use the secret management feature within their apps so they avoid the practice of hard-coding static secrets within application code. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers are accustomed to the practice of baking sensitive information into server code from the days when server-side was considered trusted environment. Raising the awareness of the nuances and threats present in current public cloud environments helps drive in the need to avoid such practices 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.1" name="Remove components which are only required for development" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tools that are essential during application development can create security risks in deployment 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Any unnecessary component is another potential entrance point for an attacker.&amp;nbsp; Debuggers and common tools like Curl that are useful to attackers should not be included in images in deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Perform an analysis of the entire container before deployment and remove any components or functions you do not need. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.2" name="Secure any dependencies" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that any dependencies used by applications are also secure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is hard to keep to track of all the packages an application uses and to make sure they are not vulnerable.&amp;nbsp; Even if you ensure that your own application is free of vulnerabilities, if the base packages and dependencies are not secure, the container could still be vulnerable to attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Regularly perform a full dependency analysis for code to uncover your open source and other dependencies for any vulnerabilities they contain. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a suitable vulnerability scanner to carry out a full dependency analysis for code to uncover your dependencies and any vulnerabilities they contain.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.2" name="Secure the container base image" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;b&gt;Description: &lt;/b&gt;&lt;br&gt;Ensure that container images are built using secure and approved base images&lt;br&gt;&lt;br&gt;&lt;b&gt;Rationale:&lt;/b&gt;&lt;br&gt;Vulnerabilities in software packages can be exploited by hackers or malicious users to obtain unauthorized access to local or cloud resources. &lt;br&gt;&lt;br&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;br&gt;Select minimal base images, add only what you require, and scan them for vulnerabilities.&amp;nbsp; &amp;nbsp;Ideally, the tool you choose for this function should be aware of your base image choice and alert you when there is an updated version of your base image, or if there are alternate base images that can reduce vulnerabilities.&lt;br&gt;&lt;br&gt;Only deploy authorized container images that you've analyzed, scanned, and signed (i.e. Software Supply Chain Security). Grafeas, TUF, and Notary can help here.&lt;br&gt;&lt;br&gt;Ensure that only images from image registries on allow lists are used to launch containers in your Kubernetes environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Peter Benjamin: Kubernetes Security Best-Practices" url="https://dev.to/petermbenjamin/kubernetes-security-best-practices-hlk"/>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;font face="Times New Roman, serif"&gt;Please follow your 3rd party image scanning provider's guidelines for enabling Image Scanning.&lt;/font&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:1" name="Sign images as part of the image build process and validate images before use" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images should be signed as part of the build process and validated before used. Signing and validation can be achieved through GNU Privacy Guard (GPG) signatures on image contents or through similar methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered with between build and run time. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your applications to ensure that the appropriate signing has taken place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.986">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.3:1" name="Use clear versioning schemes to identify application versions running in containers" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By defining and using an accepted versioning scheme, a development team can have version numbers automatically implemented as part of a build process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By applying versions either to a container name, tag, or label, the developer is then able to easily identify application versions running in containers. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.3" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review container names, tags, or labels to check that they contain version numbers in line with your organizational or system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.1" name="Use IAM for access control" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Description:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Implement authentication and access control with the Identity and Access Management (IAM) service provided by the cloud provider. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Rationale:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Applications which have access to the full scope of the cloud provider may perform actions outside of their scope.&amp;nbsp; This can be exploited by attackers to gain access to large areas of the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use IAM roles to provide fine-grained access.&amp;nbsp; Assign roles only the specific amount of resources they need, or allow them&amp;nbsp; to perform only a particular amount of activities. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="we45: Security Essentials for a Developer - Kubernetes" url="https://we45.com/blog/security-essentials-for-a-developer-kubernetes/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use the relevant tools for your cloud provider to audit the use of IAM roles in applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.526">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:1" name="Use standard, commonly available authentication systems" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When either data or applications are encrypted within a container, having a reliable method to authorize use of encryption keys is required. Alternatively, applications must be written to support multiple authentication methods, introducing unnecessary complexity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using common authentication methods, this ensures a predictable ability to authenticate and authorize the use of encryption keys across CMPs.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that an encryption policy or standard exists for your organization, and that it has been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:2" name="Use vulnerability scanning tools as part of the development process" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should use vulnerability scanning tools as part of the development process and the CI pipeline, and integrate a vulnerability assessment into the build process. They will also want to consider failing a build if the vulnerability assessment fails. Once a vulnerability is identified, apply security patches to the vulnerable component and rebuild the image. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A vulnerability scanner will identify and alert on the use of third-party components with known security vulnerabilities. Applying vulnerability scanning as part of the development cycle improves the security quality of the images, since well-known vulnerabilities are identified and patched before software gets into runtime environment. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if a protocol exists for vulnerability scanning in your organization and, if so, that it has been utilized.&amp;nbsp; If one does not exist, use one of the recommended tools to ensure that your own applications and containers do not contain vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:36.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.14:1" name="Utilize resource control features to orchestrate intra-container resource utilization, prioritization and allocation thresholds" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should expect the presence of horizontal infrastructure scaling capability but should avoid the need for vertical scaling by ensuring that the application can function within the parameters established by the configuration management team. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer must obtain the resource utilization and hardening parameters and incorporate those configurations into the software development environment and testing scripts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The application developer must accept that the application under development will not have on-hand the entirety of computing resources available in the production environment. Even in the presence of auto-scale, auto-scaling capability has limits and does not scale out infinitely.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Without testing application functions within defined production parameters, the risk of poor application performance goes up, not down. Proper configuration of resource and security functionality as appropriate to the CMP in use ensures that a resource consumption fault or runaway container processes do not affect adjacent containers.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.14" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the capabilities of the CMP in terms of the relevant thresholds and ensure your application is compliant.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY-DATA" name="Sensitive data is exposed through weak security configurations" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Weak security configurations make possible for an attacker to access sensitive data like API keys, credentials, etc.</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AS-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CLOUD-VULNERABILITIES" name="Attackers use known cloud vulnerabilities to access unauthorized data" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Known vulnerabilities in a specific cloud environment are used to exploit a system, allowing an attacker to access unauthorized data</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AA-1">
                  <countermeasures>
                    <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                    <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="SCALABILITY-ISSUES" name="Availability is compromised through attacks against scalability configuration" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>An attacker compromise the availability of a system by exploiting scalability configurations in order to consume resources</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CO-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="IMAGE-MODIFICATION" name="Attackers compromise images by modifying their content" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>An attacker modifies/forges a microservices image to introduce vulnerabilities in the system</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                    <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                    <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="OWASP A1:2017" name="Attackers gain access to the sensitive data through injecting code in the repositories" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Almost any source of data can be an injection vector: environment variables,
                                parameters, external and internal web services, and all types of users. Injection flaws
                                occur when an attacker can send hostile data to an interpreter.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                    <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-CONTAINER-VOLUMES" name="Sensitive data is compromised by unauthorized access to container volumes" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>An attacker find flaws to access container volumes without permission</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-LM-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="APP-LM-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses>
                <weakness ref="CO-D-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="microservices-library-dev" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-N-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="2a9f3bdf-6087-4562-bac9-4a13fedd5d9b" diagramComponentId="061d9897-3b5c-477f-b015-70075f2bb02f" ref="d1a1b0f7-5b99-4ca2-af67-9e71088c8410" name="Web Application - Server side" desc="" library="" parentComponentRef="fc7037a6-cb6b-4f34-b911-df47698ef23c" componentDefinitionRef="web-application-server-side">
      <tags/>
      <questions>
        <question ref="2FAuth" answer="true" manuallyModified="false"/>
        <question ref="encryptedTransport" answer="true" manuallyModified="false"/>
        <question ref="server.authentication.building.yes" answer="true" manuallyModified="false"/>
      </questions>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets>
        <asset name="Credit Card Data" accessType="40"/>
        <asset name="Credit Card Data" accessType="50"/>
        <asset name="Customer Data" accessType="40"/>
        <asset name="Customer Data" accessType="50"/>
        <asset name="Personally Identifiable Information" accessType="40"/>
        <asset name="Personally Identifiable Information" accessType="50"/>
      </assets>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.835">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-603" name="Authentication controls are enforced on the client side but not on server side" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Open authenticated endpoints that rely on authentication performed by a client are easily identifiable and exploitable by accessing them directly. Clients may be subverted by an attacker who could have full control over them so they must be treated as an untrusted element.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;A client/server product that performs authentication within client code but not in server code, potentially allows server-side authentication to be bypassed via a modified client that bypasses the authentication check. Client-side only authentication is considered extremely weak and may be breached easily. Any attacker may read the source code and reverse-engineer the authentication mechanism to access parts of the application which would otherwise be protected.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.266">
              <output/>
            </source>
            <references>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-639" name="Authorization Bypass Through User-Controlled Key" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Retrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user related record stored in the system and would be used to look up that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks present in the system. One manifestation of this weakness would be if a system used sequential or otherwise easily guessable session ids that would allow one user to easily switch to another user's session and read/modify their data.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.499">
              <output/>
            </source>
            <references>
              <reference name="CWE-639: Authorization Bypass Through User-Controlled Key" url="https://cwe.mitre.org/data/definitions/639.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.962">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-352" name="Cross Site Request Forgery" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application does not, or can not, sufficiently verify whether a well-formed, valid,
                        consistent request was intentionally provided by the user who submitted the request.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;When a web server is designed to receive a request from a client without any
                        mechanism for verifying that it was intentionally sent, then it might be possible for an
                        attacker to trick a client into making an unintentional request to the web server which will be
                        treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc.
                        and can result in exposure of data or unintended code execution.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references>
              <reference name="CWE-352: Cross-Site Request Forgery (CSRF)" url="https://cwe.mitre.org/data/definitions/352.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-502" name="Deserialization of Untrusted Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The application deserializes untrusted data without sufficiently verifying that the resulting
                        data will be valid.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.835">
              <output/>
            </source>
            <references>
              <reference name="CWE-502: Deserialization of Untrusted Data" url="https://cwe.mitre.org/data/definitions/502.html"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-15" name="External Control of System or Configuration Setting" state="0" impact="100" issueId="" issueLink="">
          <desc>One or more system settings or configuration elements can be externally controlled by a user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.243">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.670">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-460" name="Improper Cleanup on Thrown Exception" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.835">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-116" name="Improper Encoding or Escaping of Output" state="0" impact="100" issueId="" issueLink="">
          <desc>The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.243">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-841" name="Improper Enforcement of Behavioral Workflow" state="0" impact="100" issueId="" issueLink="">
          <desc>The software supports a session in which more than one behavior
                        must be performed by an actor, but it does not properly ensure that the actor
                        performs the behaviors in the required sequence.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.835">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-173" name="Improper Handling of Alternative Encoding" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software does not properly handle cases in which the input uses an alternative encoding scheme that is valid for the control sphere to which the input is being sent.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.042">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-235" name="Improper Handling of Extra Parameters" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-22" name="Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Many file operations are intended to take place within a restricted directory. By using special elements such as ".." and "/" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the "../" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Path traversal also covers the use of absolute pathnames such as "/usr/local/bin", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal. In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add ".txt" to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references>
              <reference name="CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" url="https://cwe.mitre.org/data/definitions/22.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-915" name="Improperly Controlled Modification of Dynamically-Determined Object Attributes" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;If the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability. This weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, auto-binding, or object injection.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references>
              <reference name="CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes" url="https://cwe.mitre.org/data/definitions/915.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-95" name="Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. "eval").</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.243">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-78" name="Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component. This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There are at least two subtypes of OS command injection:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(&amp;quot;nslookup [HOSTNAME]&amp;quot;) to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.The application accepts an input that it uses to fully select which program to run, as well as which commands to use.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The application simply redirects this entire command to the operating system. For example, the program might use &amp;quot;exec([COMMAND])&amp;quot; to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line. From a weakness standpoint, these variants represent distinct programmer errors.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;In the first variant, the programmer clearly intends input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.243">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes
                        output that is written to logs.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.670">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-923" name="Improper Restriction of Communication Channel to Intended Endpoints" state="0" impact="75" issueId="" issueLink="">
          <desc>The software establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.266">
              <output/>
            </source>
            <references>
              <reference name="CWE-923: Improper Restriction of Communication Channel to Intended Endpoints" url="https://cwe.mitre.org/data/definitions/923.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.161">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software generates an error message that includes sensitive information about its environment, users, or associated data.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;This sensitive information may be valuable on its own (such as a password), or it may be useful for launching other deadlier attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.498">
              <output/>
            </source>
            <references>
              <reference name="CWE-209: Information Exposure Through an Error Message" url="https://cwe.mitre.org/data/definitions/209.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-524" name="Information Exposure Through Caching" state="0" impact="100" issueId="" issueLink="">
          <desc>The application uses a cache to maintain a pool of objects, threads, connections, pages, or
                        passwords to minimize the time it takes to access them or the resources to which they connect.
                        If implemented improperly, these caches can allow access to unauthorized information or cause a
                        denial of service vulnerability.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.161">
              <output/>
            </source>
            <references>
              <reference name="CWE-524: Information Exposure Through Caching" url="https://cwe.mitre.org/data/definitions/524.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-548" name="Information Exposure Through Directory Listing" state="0" impact="100" issueId="" issueLink="">
          <desc>A directory listing is inappropriately exposed, yielding
                        potentially sensitive information to attackers.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Information Exposure Through Log Files" state="0" impact="100" issueId="" issueLink="">
          <desc>Information written to log files can be of a sensitive nature
                        and give valuable guidance to an attacker or expose sensitive user
                        information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.669">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.042">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.670">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.612">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-272" name="Least Privilege Violation" state="0" impact="100" issueId="" issueLink="">
          <desc>The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.835">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-779" name="Logging of Excessive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software logs too much information, making log files hard
                        to process and possibly hindering recovery efforts or forensic analysis after an
                        attack.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.670">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.161">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-370" name="Missing Check for Certificate Revocation after Initial Check" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not check the revocation status of a
                        certificate after its initial revocation check, which can cause the software to
                        perform privileged actions even after the certificate is revoked at a later
                        time.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.062">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.266">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-275" name="Permission Issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Weaknesses in this category are related to improper assignment - or handling - of permissions.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.498">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-485-PREPROD" name="Production data used in pre-production system" state="0" impact="100" issueId="" issueLink="">
          <desc>Production data used in pre-production system might not be properly protected as applications
                        in pre-production are not usually well tested. pre-production environments usually lack the
                        strong Countermeasures that are set for production environments.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.962">
              <output/>
            </source>
            <references>
              <reference name="CWE-485: Production data used in pre-production system" url="https://cwe.mitre.org/data/definitions/485.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-350" name="Reliance on Reverse DNS Resolution for a Security-Critical Action" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.722">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-226" name="Sensitive information is not cleared from memory" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not fully clear previously used information in a data structure, file, or
                        other resource, before making that resource available to a party in another control sphere.

                        This typically results from new data that is not as long as the old data, which leaves portions
                        of the old data still available. Equivalent errors can occur in other situations where the
                        length of data is variable but the associated data structure is not. If memory is not cleared
                        after use, it may allow unintended actors to read the data when the memory is reallocated.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.161">
              <output/>
            </source>
            <references>
              <reference name="CWE-226: Sensitive information is not cleared from memory" url="https://cwe.mitre.org/data/definitions/226.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.243">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DOS-APP" name="The application exposes high resource consuming functions without any protection (Layer 7 attacks)" state="0" impact="100" issueId="" issueLink="">
          <desc>A highly resource consuming function could be exploited by an attacker to bring the service down.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.540">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-598" name="The application sends sensitive information using the URL query string" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application uses the GET method to process requests that contain sensitive
                        information, which can expose that information through the browser's history, Referers, web
                        logs, and other sources.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.804">
              <output/>
            </source>
            <references>
              <reference name="CWE-598: Information Exposure Through Query Strings in GET Request" url="https://cwe.mitre.org/data/definitions/598.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L3" name="There is no network protection to protect against Layer 3" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no measures in place to mitigate (D)DoS at a network level.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.541">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L4" name="There is no network protection to protect against Layer 4" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.541">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-TLS" name="There is no protection against Layer 6 attacks (SSL/TLS)" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.541">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="2FA-Token-compromise" name="There is no quick revocation mechanism in place" state="0" impact="100" issueId="" issueLink="">
          <desc>When using a second factor authentication, an attacker who gains access to this second factor
                        and could guess the first one could gain persistent access to the system if there are no
                        mechanisms in place to avoid this.&amp;nbsp;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.358">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-541" name="The service returns back-end source code without interpreting it" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;If an include file source is accessible, the file may contain usernames and passwords, as well as sensitive information pertaining to the application and system. The source code can also be sent back to a client because of an error condition or an improperly configured handler.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.835">
              <output/>
            </source>
            <references>
              <reference name="CWE-541: Information Exposure Through Include Source Code" url="https://cwe.mitre.org/data/definitions/541.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-367" name="Time-of-check Time-of-use (TOCTOU) Race Condition" state="0" impact="75" issueId="" issueLink="">
          <desc>The software checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the software to perform invalid actions when the resource is in an unexpected state.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;h2&gt;&lt;span class="mw-headline"&gt;&lt;font size="4"&gt;Black Box testing and example&lt;/font&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Testing for race conditions is problematic due to their nature, and external influences on testing including server load, network latency, etc. will all play a part in the presence and detection of the condition. &lt;/p&gt;
&lt;p&gt;However, testing can be focused on specific transactional areas of the application, where time-of-read to time-of-use of specific data variables could be adversely affected by concurrency issues. &lt;/p&gt;
&lt;p&gt;Black Box testing attempts to force a race condition may include the ability to make multiple simultaneous requests while observing the outcome for unexpected behavior. &lt;/p&gt;
&lt;p&gt;Examples of such areas are illustrated in the paper &amp;quot;On Race Vulnerabilities in Web Applications&amp;quot;, cited in the further reading section. The authors suggest that it may be possible in certain circumstances to: &lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt; Create multiple user accounts with the same username.&lt;/li&gt;
 &lt;li&gt; Bypass account lockouts against brute forcing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testers should be aware of the security implications of race conditions and their factors surrounding their difficulty of testing. &lt;/p&gt;
&lt;h2&gt;&lt;span class="mw-headline"&gt;&lt;font size="4"&gt;Gray Box testing and example&lt;/font&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Code review may reveal likely areas of concern for concurrency issues. More information on reviewing code for concurrency issues can be seen at OWASP Code Review Guide's &lt;a href="https://www.owasp.org/index.php/Reviewing_Code_for_Race_Conditions" title="Reviewing Code for Race Conditions"&gt;Reviewing Code for Race Conditions&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.266">
              <output/>
            </source>
            <references>
              <reference name="Reviewing Code for Race Conditions" url="https://www.owasp.org/index.php/Reviewing_Code_for_Race_Conditions"/>
              <reference name="Testing for Race Conditions (OWASP-AT-010)" url="https://www.owasp.org/index.php/Testing_for_Race_Conditions_(OWASP-AT-010)"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-650" name="Trusting HTTP Permission Methods on the Server Side" state="0" impact="100" issueId="" issueLink="">
          <desc>The server contains a protection mechanism that assumes that
                        any URI that is accessed using HTTP GET will not cause a state change to the
                        associated resource. This might allow attackers to bypass intended access
                        restrictions and conduct resource modification and deletion attacks, since some
                        applications allow GET to modify state.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-2" name="Unexpected Environment Condition" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;This is a generic weakness which includes several different situations that are all connected to unexpected environmental conditions and could be related to:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify the areas of the application that can be affected by the following causes:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Misconfiguration.&lt;/li&gt;
                            &lt;li&gt;Uncleared buffers, shared memory, files, etc.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Problems between the interaction of two different entities that cause unexpected
                            behavior.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;div&gt;
                            Perform testing on them to look for a security problem.&amp;nbsp;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.043">
              <output/>
            </source>
            <references>
              <reference name="CWE-2: Unexpected Environment Condition" url="https://cwe.mitre.org/data/definitions/2.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-523" name="Unprotected Transport of Credentials" state="0" impact="100" issueId="" issueLink="">
          <desc>Login pages not using adequate measures to protect the user name and password while they are in transit from the client to the server.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.266">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;A web application accepts a user-controlled input specifying a link to an external site, and uses this link in a Redirect. This functionality aids phishing attacks.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.804">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.962">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-330" name="Use of Insufficiently Random Values" state="0" impact="100" issueId="" issueLink="">
          <desc>The software may use insufficiently random numbers or values in a security context that depends on unpredictable numbers.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.498">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-308" name="Use of Single-factor Authentication" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of single-factor authentication can lead to unnecessary risk of compromise when
                        compared with the benefits of a dual-factor authentication scheme.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.498">
              <output/>
            </source>
            <references>
              <reference name="CWE-308: Use of Single-factor Authentication" url="https://cwe.mitre.org/data/definitions/308.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-285" name="Apply authorization checks to segregate and control access to user data" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications protecting sensitive or otherwise restricted resources must ensure that only appropriate and authorized users can access the application data. It is important that an application prevent unauthorized users gaining inappropriate access to each other's data. Although user A and user B may both be trusted to access data within the application, they may be only authorized to access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are the manipulation of an ID value or other object reference sent in the URL or body of an HTTP request).&lt;/p&gt;&lt;p&gt;It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this is done by checking the validity of the session token issued after login.&lt;/li&gt;&lt;li&gt;Confirm the user is authorized to access the data or resource they are requesting. E.g. their confirmed identify is checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt;&lt;li&gt;Access controls should be granular and make it possible to issue to individual resources to individual users or roles.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework.&lt;/p&gt;&lt;p&gt;Object-level authorization checks should be considered in every function that accesses a data source using input from the user.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Favor not using an ID that has been sent from the client, but instead use an ID that is stored in the session object when accessing a database record by the record ID.&lt;/li&gt;&lt;li&gt;Use an authorization mechanism to check if the logged-in user has access to perform the requested action on the record in every function that uses an input from the client to access a record in the database.&lt;/li&gt;&lt;li&gt;Use random and unpredictable values as GUIDs for records' IDs.&lt;/li&gt;&lt;li&gt;Write tests to evaluate the authorization mechanism. Do not deploy vulnerable changes that break these tests.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA CM-07 Least Functionality" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/158-08_02_CM-07"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="5.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.18" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Using two different browsers configured with an intercepting proxy:&lt;/li&gt;&lt;li&gt;Login as user A in browser A.&lt;/li&gt;&lt;li&gt;Login as user B in browser B.&lt;/li&gt;&lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;ol&gt;&lt;li&gt;Perform the operation as user A and view their sensitive data.&lt;/li&gt;&lt;li&gt;Obtain the session ID of user B.&lt;/li&gt;&lt;li&gt;Configure the proxy to intercept.&lt;/li&gt;&lt;li&gt;Perform the operation as user A again, but this time intercept all the requests and replace user A's session ID with that of user B.&lt;/li&gt;&lt;li&gt;Ensure that user A's sensitive data is &lt;strong&gt;not &lt;/strong&gt;visible.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To ensure object-level authorization checks are in place:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Map out all locations in the application in which user input is used to reference objects directly. For example, locations where user input is used to access a database row, a file, application page, etc.&lt;/li&gt;&lt;li&gt;Modify the value of the parameter used to reference objects to see if the application raises an authorization error.&lt;/li&gt;&lt;li&gt;Assess whether it is possible to retrieve objects belonging to other users or otherwise bypass authorization.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.397">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="dyn-exec" name="Assure that the application avoids the use of eval() or other dynamic code execution features" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Assure that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for scripts that do not properly validate user inputs in the page parameter. A remote user can supply a specially crafted URL to pass arbitrary code to an eval() statement, which results in code execution.&lt;/p&gt;&lt;p&gt;Note 1: This attack will execute the code with the same permissions, potentially including operation system commands.&lt;/p&gt;&lt;p&gt;Note 2: Eval injection is prevalent in handler/dispatch procedures that want to invoke a large number of functions, or set a large number of variables.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.185">
              <output/>
            </source>
            <references>
              <reference name="Direct Dynamic Code Evaluation (Eval Injection)" url="https://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection"/>
              <reference name="[SCRIPT_ENGINE_INJECTION] Potential code injection when using Script Engine" url="https://find-sec-bugs.github.io/bugs.htm"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-639" name="Avoid using direct references to files" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method. Many flaws in applications result from unsafe handling of filenames or path data, for example directory traversal and arbitrary file disclosure. Use of filenames or other direct references to objects such as files on the server-side increases the risk of compromise of the system or unauthorized access to other files, content, or functionality.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Avoid using direct references to files or validate file name.&lt;/li&gt;&lt;li&gt;For example, instead of using:&amp;nbsp;www.example.com/open.jsp?file=details.txt&amp;nbsp;use:&amp;nbsp;www.example.com/open.jsp?file=[GUID]&amp;nbsp;and then use a lookup table on the server to associate the [GUID] value with file details.txt.&lt;/li&gt;&lt;li&gt;Files should be stored outside the web-root to prevent an attacker browsing directly to them.&lt;/li&gt;&lt;li&gt;Do not use obscurity to prevent access; for example do not rely on renaming a file to include a random string to prevent direct download or disclosure.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If direct references are used to access files from within the web-root deviating from recommended security practice, the following must be implemented:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String input validation must be applied.&amp;nbsp; Identify and filter for directory traversal meta-characters such as "../" or "..\" or "/", together with encoded variations and derivations.&lt;/li&gt;&lt;li&gt;Use of a strict white-list of files that may be downloaded.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;When a parameter that represents a file or a file path is found in the application:&lt;/li&gt;&lt;li&gt;For each of them try to change this parameter to gain access to unexpected files.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For example: www.example.com/open.jsp?file=details.txt&amp;nbsp;&lt;br&gt;Shouldn't be implemented that way and if so, it should not be possible to access locations outside of this domain (i.e. file=/etc/passwd or file= &lt;a href="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;, etc.).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-524" name="Clear caches of sensitive data" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications storing or caching data locally are at risk of attack and compromise of that data. Local temporary storage, thumbnail images, and configuration files often contain excerpts of sensitive information that may be left on the device during or after the application is used.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure all temporary files, caches, and storage are purged after use and when the application is closed.&lt;/li&gt;&lt;li&gt;Do not allow the application to cache sensitive information outside of the OS provided secure stores.&lt;/li&gt;&lt;li&gt;Use OS controls to restrict thumbnails of the application in cases where sensitive information is displayed.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check the application for the use of caching.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify they are periodically emptied.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.112">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="PROPER-REVOCATION-CERTIFICATE" name="Configure and enable appropriate certification revocation" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Configure and enable appropriate certification revocation for each certificate created, such as
                        Online Certificate Status Protocol (OCSP) Stapling.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        OCSP is a protocol to check if an SSL certificate has been revoked. Instead of the client
                        downloading a large list of revoked certificates, they can simply submit a request to a CA
                        server, which returns a signed response with the certificate current status.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Certificate revocation" url="https://medium.com/@alexeysamoshkin/how-ssl-certificate-revocation-is-broken-in-practice-af3b63b9cb3"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that appropriate certification revocation is enabled and configured.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.023">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.2" name="Deny access by default if a security control fails with an exception" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If a security control fails, the application should not allow the user access to the application.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Therefore, if in the security control an exception is launched the system should stay in a secure state, meaning access is denied to the user.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Conversely, access will only be granted if there is no security failure / exception.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Fail securely" url="https://www.owasp.org/index.php/Fail_securely"/>
            <reference name="OWASP Security by Design Principles: Fail securely" url="https://www.owasp.org/index.php/Security_by_Design_Principles#Fail_securely"/>
          </references>
          <standards>
            <standard ref="4.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if the security controls fail, access is denied to the application.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that if a security control fails or throws an exception access is denied to the application for that user&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.223">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-603" name="Deploy a robust server-side validation and authentication system" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When authentication is performed solely on the client-side, the user's credentials (e.g., username and password) are sent to the server for verification. However, an attacker can intercept and modify these credentials before they are sent to the server, allowing them to gain unauthorized access to the application.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Furthermore, client-side authentication does not provide any protection against attacks that target the server-side of the application. For example, an attacker could exploit a vulnerability in the server-side code to gain access to sensitive data or functionality without needing to authenticate at all.&lt;/p&gt;&lt;p&gt;All data on the client-side must be considered tainted. As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated on the server-side to prevent their subversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure credentials are passed securely from client to server.&lt;/li&gt;&lt;li&gt;The server should compare the credentials with those stored on the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt;&lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt;&lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt;&lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify which functions the service provides which are authenticated or performing a privileged action.&lt;/li&gt;&lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A clear example of what you should look for would be an API endpoint which allows a client to update a resource, you should ensure this call checks the authentication on the server side (by checking the session having validated the authentication credentials previously).&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.224">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC" name="Detect and notify the usage of automated tools or unusual behavior" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Don't allow users to manipulate a system or guess its behavior based on input or output timing and detect the usage of automated tools or unusual behavior, such as actions not performed in reasonable "human time" or other abnormal time patterns.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;When the usage of automated tools is detected, the application should respond by denying access and notifying the security group.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Use several automated tools to perform normal user actions.&lt;/li&gt;
                            &lt;li&gt;Check that the applications detects these actions, denies the users access and
                            notifies the security group.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection-against-data-mining" name="Detect and protect against data mining techniques" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data mining is an analytical process that attempts to find correlations or patterns in large data sets for the purpose of data or knowledge discovery. Data storage objects include database records and database fields. Sensitive information can be extracted from data mining operations. When information is personally identifiable information, it may lead to unanticipated revelations about individuals and give rise to privacy risks. Prior to performing data mining activities, organizations determine whether such activities are authorized. Organizations may be subject to applicable laws, executive orders, directives, regulations, or policies that address data mining requirements. Organizational personnel consult with the senior agency official for privacy and legal counsel regarding such requirements.&lt;/p&gt;&lt;p&gt;Data mining prevention and detection techniques include limiting the number and frequency of database queries to increase the work factor needed to determine the contents of databases, limiting types of responses provided to database queries, applying differential privacy techniques or homomorphic encryption, and notifying personnel when atypical database queries or accesses occur. Data mining protection focuses on protecting information from data mining while such information resides in organizational data stores. In contrast, AU-13 focuses on monitoring for organizational information that may have been mined or otherwise obtained from data stores and is available as open-source information residing on external sites, such as social networking or social media websites.&lt;/p&gt;&lt;p&gt;EO 13587 requires the establishment of an insider threat program for deterring, detecting, and mitigating insider threats, including the safeguarding of sensitive information from exploitation, compromise, or other unauthorized disclosure. Data mining protection requires organizations to identify appropriate techniques to prevent and detect unnecessary or unauthorized data mining. Data mining can be used by an insider to collect organizational information for the purpose of exfiltration.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
          </references>
          <standards>
            <standard ref="AC-23" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your system supports policies that protect against data mining such as filtering, throttling and anomaly detection.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DIRECTORY_LISTING" name="Disable web server directory listing and ensure file metadata (e.g. .git) and backup files are not present within web roots" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Indexable directories allow an attacker to easily discover the existence of content on your web server that should remain private.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Disable directory listings in the web - or application - server configuration by default.&lt;/li&gt;&lt;li&gt;Restrict access to unnecessary directories and files.&lt;/li&gt;&lt;li&gt;Create an index (default) file for each directory.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="Apache - auto index" url="https://httpd.apache.org/docs/trunk/mod/mod_autoindex.html"/>
            <reference name="Apache - directory listing" url="https://wiki.apache.org/httpd/DirectoryListings"/>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP Directory_Indexing" url="https://www.owasp.org/index.php/OWASP_Periodic_Table_of_Vulnerabilities_-_Directory_Indexing"/>
            <reference name="OWASP Insecure Indexing" url="https://www.owasp.org/index.php/File_System#Insecure_Indexing"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check that the directory listing is disabled on the web server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-11.5" name="Do not share system information in HTTP headers and responses" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should not share detailed version information of system components or other information that would assist attackers in the HTTP header or HTTP responses.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the HTTP responses and headers do not reveal sensitive data about the system.
                            Using a command line web client like telnet or netcat could help on this task.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-FILE-DATA" name="Do not use untrusted client-side data in server-side file operations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application may be required to perform server-side file operations based on client-side actions. This can expose the application to attack through remote or local file-inclusion, or remote code execution attacks if unsafe data is used in file inclusion, class loader, or reflection capabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tainted, untrusted, client-side data must not be used directly in server-side file load operations.&lt;/li&gt;&lt;li&gt;Where server-side operations are dependent on client-side input, this should be mapped to pre-defined operations on the server-side rather than using tainted client-side input directly.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify sources of data entering the application.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Classify them into trusted and untrusted.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;if they are untrusted, make sure there is a validation and sanitization mechanism before sending this data into another system (Database, Command, etc.).&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.184">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-532" name="Do not write secrets to the log files" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        The logs may be accessed by attackers and in order to protect sensitive data, no such sensitive
                        data should be included in the logs
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Review the logs.&lt;/li&gt;
                            &lt;li&gt;Check that no sensitive data is included in the logs.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="34" state="Implemented" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.1" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.6" supportedStandardRef="swift-cscf"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.869">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.&lt;/p&gt;&lt;p&gt;One of the ways to enforce this is by following the deny-by-default principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny-by-default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-485-PREPROD" name="Ensure personal and other sensitive data is not exposed in pre-production environments" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Pre-production environments should not expose personally identifiable information (PII) or other sensitive information. Often, such environments are populated with production data for testing or other purposes. &amp;nbsp;Security weaknesses, either in the software or controls around access to pre-production systems, can unnecessarily expose sensitive data. This is often a breach of legal and commercial requirements, including various governmental data protection standards and privacy acts, and industry regulations such as those required by the Payments Card Industry (PCI).&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Where test data is derived from production data, the following must be observed:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Data masking or obfuscation techniques must be leveraged to anonymize the data used in pre-production. &amp;nbsp;For example, all but the start and end of a credit card number must be removed/replaced&lt;/li&gt;&lt;li&gt;No real personally identifiable information (PII) or other sensitive data should be present in pre-production environments. &amp;nbsp;For example, names, dates of birth, and other personal information must be removed, randomized, or replaced.&lt;/li&gt;&lt;li&gt;Only data that has been processed and anonymized should be transferred into pre-production; ideally representative test data should be generated rather than relying on obfuscated production data.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the data used on the pre-production environment is not duplicated from production.&lt;/li&gt;&lt;li&gt;Where production data is modified for use in pre-production, review the transformations applied to ensure all PII and other sensitive data is removed, obfuscated, or otherwise scrubbed.&lt;/li&gt;&lt;li&gt;Verify that pre-production data is not real, and does not constitute PII data.&lt;/li&gt;&lt;li&gt;Consider use of 'canaries' or other deliberately injected values in production to perform random searches in pre-production environments for data that has been inappropriately migrated or used.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.397">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.396">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-367-TOCTOU" name="Ensure that all high-value business logic flows, including authentication, session management and access control are thread safe and resistant to time-of-check and time-of-use race conditions" issueId="" issueLink="" platform="" cost="1" risk="42" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;CWE-367 is a type of vulnerability known as "Time-of-Check Time-of-Use (TOCTOU)" race condition. This vulnerability occurs when a program checks the state of a resource (such as a file or a network connection) at one point in time, but then uses that resource at a later point in time without re-checking its state. This can allow an attacker to modify the resource in the time between the check and the use, potentially leading to unauthorized access, data corruption, or other security issues.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Do not perform a check before the use. This does not resolve the underlying issue of the execution of a function on a resource whose state and identity cannot be assured, but simply gives a false sense of security given by the check.&lt;/li&gt;&lt;li&gt;When the file being altered is owned by the current user and group, set the effective gid and uid to that of the current user and group when executing this statement.&lt;/li&gt;&lt;li&gt;Limit the interleaving of operations on files from multiple processes.&lt;/li&gt;&lt;li&gt;If you cannot perform operations atomically and you must share access to the resource between multiple processes or threads, then try to limit the amount of time (CPU cycles) between the check and use of the resource. This will not fix the problem, but it could make it more difficult for an attack to succeed.&lt;/li&gt;&lt;li&gt;Recheck the resource after the use call to verify that the action was taken appropriately.&lt;/li&gt;&lt;li&gt;Ensure that some environmental locking mechanism can be used to protect resources effectively. Ensure that locking occurs before the check, as opposed to afterwards, such that the resource, as checked, is the same as it is when in use.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.11.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API6:2023-Unrestricted Access to Sensitive Business Flows" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the areas of the application where concurrent access to resources can
                            happen.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that unexpected input, timing or action sequence is not causing unexpected
                            behavior on the system.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.224">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FEAT-ACC-CTRL" name="Ensure that attribute or feature-based access control is used" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that attribute or feature-based access control is used whereby the code checks the user's authorization for a feature/data item rather than just their role. Permissions should still be allocated using roles.
&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.397">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" name="Ensure that only strong algorithms, cyphers and protocols are used" issueId="" issueLink="" platform="" cost="0" risk="13" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Ensure that the application is using strong algorithms, cyphers and protocols. The general
                        practice and required minimum key lengths depend on the scenarios listed below.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Key exchange: Diffie-Hellman key exchange with minimum 2048 bits&lt;/li&gt;
                        &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                        &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                        &lt;li&gt;Asymmetric encryption: RSA 2048 bits&lt;/li&gt;
                        &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                        &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="NIST SP 800-175b" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-175b.pdf"/>
            <reference name="NIST SP 800-57" url="https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-5/final"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP cryptographic storage" url="https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet"/>
            <reference name="OWASP key management" url="https://www.owasp.org/index.php/Key_Management_Cheat_Sheet"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.9.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.9.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="6.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.2.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Cryptographic protocols comply to the best practices listed bellow:
                            &lt;br /&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Key exchange: Diffie-Hellman key exchange with minimum 2048
                            bits&lt;/li&gt;
                            &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                            &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                            &lt;li&gt;Asymmetric encryption: RSA 2048 bits&lt;/li&gt;
                            &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                            &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;br /&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-HTTP-METHODS" name="Ensure that the application accepts only a defined set of required HTTP request methods" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP offers a number of methods that can be used to perform actions on the web server. Many of theses methods are designed to aid developers in deploying and testing HTTP applications. These HTTP methods can be used for nefarious purposes if the web server is misconfigured. For example, Cross Site Tracing (XST), a form of cross site scripting using the server's HTTP TRACE method.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;While GET and POST are by far the most common methods that are used to access information provided by a web server, the Hypertext Transfer Protocol (HTTP) allows several other (and somewhat less known) methods. RFC 2616 (which describes HTTP version 1.1 which is the standard today) defines the following eight methods:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;HEAD&lt;/li&gt;&lt;li&gt;GET&lt;/li&gt;&lt;li&gt;POST&lt;/li&gt;&lt;li&gt;PUT&lt;/li&gt;&lt;li&gt;DELETE&lt;/li&gt;&lt;li&gt;TRACE&lt;/li&gt;&lt;li&gt;OPTIONS&lt;/li&gt;&lt;li&gt;CONNECT&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Some of these methods can potentially pose a security risk for a web application, as they allow an attacker to modify the files stored on the web server and, in some scenarios, steal the credentials of legitimate users. More specifically, the methods that should be disabled are the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;PUT: &lt;/strong&gt;This method allows a client to upload new files onto the web server. An attacker may exploit this by uploading malicious files (e.g.: an asp file that executes commands by invoking cmd.exe), or by simply using the victim's server as a file repository.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;DELETE:&lt;/strong&gt; This method allows a client to delete a file on the web server. An attacker may exploit it as a very simple and direct way to deface a web site or to mount a DoS attack.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CONNECT: &lt;/strong&gt;This method could allow a client to use the web server as a proxy.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;TRACE: &lt;/strong&gt;This method simply echoes back to the client whatever string has been sent to the server, and is used mainly for debugging purposes. This method, originally assumed harmless, can be used to mount an attack known as Cross Site Tracing, which was discovered by Jeremiah Grossman (see links at the bottom of the page).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If an application needs one or more of these methods, such as REST Web Services (which may require PUT or DELETE), it is important to check their usage is properly limited to trusted users and safe conditions.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure the application accepts only the HTTP requests GET and POST. The HTTP requests TRACE, PUT and DELETE are blocked.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP test HTTP methods" url="https://github.com/ManhNho/OWASP-Testing-Guide-v5/blob/master/document/4%20Web%20Application%20Security%20Testing/4.3%20Configuration%20and%20Deployment%20Management%20Testing/4.3.6%20Test%20HTTP%20Methods%20(OTG-CONFIG-006).md"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application only accepts the request with the following HTTP
                            methods: GET and POST.&lt;/li&gt;
                            &lt;li&gt;Check that the application rejects and blocks the following requests with the HTTP
                            methods: TRACE, PUT and DELETE.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-306-AUTH" name="Ensure the application uses a single vetted authentication mechanism that is known to be secure" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;
 &lt;li&gt;Ensure that the application uses a single vetted authentication mechanism that is known to be secure, can be extended to include strong authentication, and has sufficient logging and monitoring to detect account abuse or breaches.&lt;/li&gt;
 &lt;li&gt;Ensure that all authentication pathways and identity management APIs implement consistent authentication security control strength, such that there are no weaker alternatives per the risk of the application.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Testing the authentication schema means understanding how the authentication process works and using that information to circumvent the authentication mechanism.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  4.5.1 Testing for Credentials Transported over an Encrypted Channel (OTG-AUTHN-001)
&lt;/div&gt;
&lt;div&gt;
  4.5.2 Testing for default credentials (OTG-AUTHN-002)
&lt;/div&gt;
&lt;div&gt;
  4.5.3 Testing for Weak lock out mechanism (OTG-AUTHN-003)
&lt;/div&gt;
&lt;div&gt;
  4.5.4 Testing for bypassing authentication schema (OTG-AUTHN-004)
&lt;/div&gt;
&lt;div&gt;
  4.5.5 Test remember password functionality (OTG-AUTHN-005)
&lt;/div&gt;
&lt;div&gt;
  4.5.6 Testing for Browser cache weakness (OTG-AUTHN-006)
&lt;/div&gt;
&lt;div&gt;
  4.5.7 Testing for Weak password policy (OTG-AUTHN-007)
&lt;/div&gt;
&lt;div&gt;
  4.5.8 Testing for Weak security question/answer (OTG-AUTHN-008)
&lt;/div&gt;
&lt;div&gt;
  4.5.9 Testing for weak password change or reset functionalities (OTG-AUTHN-009)
&lt;/div&gt;
&lt;div&gt;
  4.5.10 Testing for Weaker authentication in alternative channel (OTG-AUTHN-010)&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;div&gt;
   Test For Authentication On All EndPoints. You can automate this process using DAST tools like OWASP ZAP. It includes an API scanning script to automate security scanning of APIs defined using OpenAPI/Swagger or SOAP.&amp;nbsp;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;br /&gt;
 &lt;/div&gt;
 &lt;div&gt;
   Usage: zap-api-scan.py -t &amp;lt;target&amp;gt; -f &amp;lt;format&amp;gt; [options]
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -t target&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;target API definition, currently only an OpenAPI URL, eg https://www.example.com/openapi.json
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -f format&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;either openapi or soap
 &lt;/div&gt;
 &lt;div&gt;
   Options:
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -h&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print this help message
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -c config_file&amp;nbsp; &amp;nbsp; config file to use to INFO, IGNORE or FAIL warnings
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -u config_url&amp;nbsp; &amp;nbsp; &amp;nbsp;URL of config file to use to INFO, IGNORE or FAIL warnings
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -g gen_file&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;generate default config file (all rules set to WARN)
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -r report_html&amp;nbsp; &amp;nbsp; file to write the full ZAP HTML report
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -w report_md&amp;nbsp; &amp;nbsp; &amp;nbsp; file to write the full ZAP Wiki (Markdown) report
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -x report_xml&amp;nbsp; &amp;nbsp; &amp;nbsp;file to write the full ZAP XML report
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -J report_json&amp;nbsp; &amp;nbsp; file to write the full ZAP JSON document
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -a&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; include the alpha passive scan rules as well
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -d&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; show debug messages
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -P&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; specify listen port
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -D&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; delay in seconds to wait for passive scanning&amp;nbsp;
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -i&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default rules not in the config file to INFO
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -l level&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; minimum level to show: PASS, IGNORE, INFO, WARN or FAIL, use with -s to hide example URLs
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -n context_file&amp;nbsp; &amp;nbsp;context file which will be loaded prior to scanning the target
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -p progress_file&amp;nbsp; progress file which specifies issues that are being addressed
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -s&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; short output format - don't show PASSes or example URLs
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -S&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; safe mode this will skip the active scan and perform a baseline scan
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -T&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; max time in minutes to wait for ZAP to start and the passive scan to run
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -O&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; the hostname to override in the (remote) OpenAPI spec
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; -z zap_options&amp;nbsp; &amp;nbsp; ZAP command line options e.g. -z &amp;quot;-config aaa=bbb -config ccc=ddd&amp;quot;
 &lt;/div&gt;
 &lt;div&gt;
   &amp;nbsp; &amp;nbsp; --hook&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; path to python file that define your custom hooks
 &lt;/div&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.224">
              <output/>
            </source>
            <references>
              <reference name="OWASP Testing Guide v4. Testing for authentication" url="https://www.owasp.org/index.php/Testing_for_authentication"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SEC-DEPLOY" name="Ensure the build pipeline contains a build step to automatically build and verify the secure deployment of the application" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the build pipeline contains a build step to automatically build and verify the secure deployment of the application, particularly if the application infrastructure is software defined, such as cloud environment build scripts.</desc>
          <implementations/>
          <references>
            <reference name="Secure development and deployment guidance" url="https://www.ncsc.gov.uk/collection/developers-collection?curPage=/collection/developers-collection/principles/secure-the-build-and-deployment-pipeline"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.14.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>
                            Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
                            &lt;br /&gt;
                            &lt;br /&gt;In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
                            &lt;br /&gt;
                            &lt;br /&gt;4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
                            &lt;br /&gt;4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
                            &lt;br /&gt;4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
                            &lt;br /&gt;4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
                            &lt;br /&gt;4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
                            &lt;br /&gt;4.3.6 Test HTTP Methods (OTG-CONFIG-006)
                            &lt;br /&gt;4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
                            &lt;br /&gt;4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
                            &lt;br /&gt;4.3.9 Test File Permission (OTG-CONFIG-009)
                            &lt;br /&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="configuration-integrity" name="Ensure the integrity of all security-relevant configurations to detect tampering" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Web server and application server configurations play a key role in the security of a web application. These servers are responsible for serving content and invoking applications that generate content. In addition, many application servers provide a number of services that web applications can use, including data storage, directory services, mail, messaging, and more. Failure to manage the proper configuration of your servers can lead to a wide variety of security problems.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation:&lt;/b&gt;
&lt;/div&gt;
&lt;div&gt;
  Authorized administrators need to ensure the integrity of all security-relevant configurations to detect tampering.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="14.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
&lt;/div&gt;
&lt;div&gt;
  4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
&lt;/div&gt;
&lt;div&gt;
  4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
&lt;/div&gt;
&lt;div&gt;
  4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
&lt;/div&gt;
&lt;div&gt;
  4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
&lt;/div&gt;
&lt;div&gt;
  4.3.6 Test HTTP Methods (OTG-CONFIG-006)
&lt;/div&gt;
&lt;div&gt;
  4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
&lt;/div&gt;
&lt;div&gt;
  4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
&lt;/div&gt;
&lt;div&gt;
  4.3.9 Test File Permission (OTG-CONFIG-009)&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.184">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOGS-INTEGRITY" name="Ensure the integrity of the logging system" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure Log integrity for the application generated logs, such as storing logs on write-once
                        media, forwarding a copy of the logs to a centralized SIEM or generating message digests for
                        each log file.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-04 Audit Storage Capacity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/173-08_02_AU-04"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the logs integrity is controlled by making daily backups or leveraging external
                            tools for log monitoring.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ENV-USE" name="Ensure there are no environmental security weaknesses" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Application security can be undermined by misconfiguration of the underlying server or
                        development environment.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Ensure that vendor and best-practice guidelines have been applied, in particular affecting areas
                        such as:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographic strength of elements such as session tokens, GUIDs, and protection of
                        data in transit and at rest.&lt;/li&gt;
                        &lt;li&gt;Removal of debugging and compiler options and artifacts used during development.&lt;/li&gt;
                        &lt;li&gt;Configuration of error trapping and use of generic error messages and pages (e.g.
                        stack traces should not be returned to users).&lt;/li&gt;
                        &lt;li&gt;Appropriate access controls over software components, variables (e.g. EJBs and
                        methods).&lt;/li&gt;
                        &lt;li&gt;Insecure or inappropriate storage of data in configuration files or other data
                        structures (e.g. passwords in configuration files).&lt;/li&gt;
                        &lt;li&gt;Use of compilation/build features or security enhancements provided by the IDE&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;&lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Vulnerable Components" url="https://pwning.owasp-juice.shop/part2/vulnerable-components.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A06:2021-Vulnerable and Outdated Components" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A9:2017-Using Components with Known Vulnerabilities" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;figure class="table"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Identify the areas of the application that could potentially be affected by the following:&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Verify they are correctly implemented.&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-923-SEGREG" name="Ensure the segregation of components of different trust levels" issueId="" issueLink="" platform="" cost="0" risk="52" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the segregation of components of different trust levels through well-defined security controls, firewall rules, API gateways, reverse proxies, cloud-based security groups, or similar mechanisms.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.14.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.224">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="harden-http-headers" name="Harden HTTP Headers" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP headers are a fundamental part of website security.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The Referrer-Policy HTTP header controls how much referrer information (sent via the Referrer header) should be included with requests. This security header was designed to prevent cross-domain Referrer leakage.&lt;/li&gt;&lt;li&gt;The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.&lt;/li&gt;&lt;li&gt;The Content-Disposition response header tells the browser to download a file rather than displaying it in the browser window.&lt;/li&gt;&lt;li&gt;If a response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Modern browsers support the Strict-Transport-Security HTTP header. This header instructs the browser to only communicate over HTTPS for all subsequent requests to the domain, mitigating a number of attacks designed to force users to switch to unencrypted transport in order to expose data.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Add HTTP Strict Transport Security (HSTS) for all the requests and all the subdomains&lt;/li&gt;&lt;li&gt;Preload the URLs of the applications to the Strict Transport Security domain lists maintained by participating vendors&lt;/li&gt;&lt;li&gt;Encourage users to access the site with patched versions of the participating vendors.&lt;/li&gt;&lt;li&gt;Consider creating and pre-loading subdomains for critical applications prior to release to gain maximum advantage from HSTS pre-loading.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use a suitable "Referrer-Policy" header, such as "no-referrer" or "same-origin".&lt;/li&gt;&lt;li&gt;Don't use the Origin header for authentication or access control decisions, as the Origin header can easily be changed by an attacker.&lt;/li&gt;&lt;li&gt;Use the Content-Disposition response header for file downloading in all API responses with the following directives: Content-Disposition: attachment; filename="api.json" (or other appropriate filename for the content type).&lt;/li&gt;&lt;li&gt;Use a content-type header specifying a safe character set (e.g., UTF-8, ISO 8859-1) in every HTTP response.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="HTML does not specify charset" url="https://portswigger.net/kb/issues/00800200_html-does-not-specify-charset"/>
            <reference name="OWASP Secure Headers Project" url="https://www.owasp.org/index.php/OWASP_Secure_Headers_Project"/>
            <reference name="Origin Header" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin"/>
            <reference name="Referrer-Policy" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"/>
            <reference name="Reflected File Download" url="https://www.owasp.org/index.php/Reflected_File_Download"/>
            <reference name="Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP)" url="https://tools.ietf.org/html/rfc6266"/>
          </references>
          <standards>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;An easy way to access your HTTP security headers, as part of your response headers, is to fire up Chrome DevTools. To run this click into the "Network" panel and press Ctrl + R (Cmd + R) to refresh the page. Click into your domain's request and you will see a section for response headers.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Check if "Referrer-Policy" header exists in HTTP responses and has the right directives to prevent cross-domain Referrer leakage.&lt;/li&gt;&lt;li&gt;From a penetration testing perspective you should look for insecure configurations; for example, when the server returns back the Origin header in the Access-Control-Allow-Origin without any additional checks AND returns Access-Control-Allow-Credentials: true, which can lead to access of sensitive data. Note that this configuration is very insecure, and is not acceptable in general terms, except in the case of a public API that is intended to be accessible by everyone.&lt;/li&gt;&lt;li&gt;Try Reflected File Download input payloads to launch commands on the client machine. Reflected File Download is an attack combining URL path segments (now deprecated) with pages that reflect user inputs in the response. Generally web services vulnerable to JSONP Injection are leveraged to deliver malware to end users.&lt;/li&gt;&lt;li&gt;Character encoding has a popular misuse; namely, being used for encoding malicious injection strings in a way that obfuscates them. Try different character encoding schemes (like UTF-7) to bypass input validation filters, or take advantage of particular ways in which browsers render encoded text.&lt;/li&gt;&lt;li&gt;Check that for every request to the service, the following header is returned: &lt;i&gt;Strict-Transport-Security: max-age=31536000; includeSubDomains&lt;/i&gt;. The attribute max-age should be of a reasonably long period (&amp;gt;1y).&amp;nbsp;The attribute includeSubDomains should also be present. &amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references>
              <reference name="A new security header: Referrer Policy" url="https://scotthelme.co.uk/a-new-security-header-referrer-policy/"/>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
              <reference name="Reflected File Download - A New Web Attack Vector" url="https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/reflected-file-download-a-new-web-attack-vector/"/>
              <reference name="Test Cross Origin Resource Sharing (OTG-CLIENT-007)" url="https://www.owasp.org/index.php/Test_Cross_Origin_Resource_Sharing_(OTG-CLIENT-007)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="identify-dns-domains" name="Identify the DNS domains periodically to update the information about them" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should have a protection from sub-domain takeovers if the application relies upon DNS entries or DNS sub-domains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (autogen-bucket-id.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify the forward and reverse DNS lookups.&lt;/li&gt;&lt;li&gt;Verify the connection to the DNS was authenticated successfully by username/password or certificate and that they are active.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.652">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="identify-sensitive-data" name="Identify the processed and stored sensitive data" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a mechanism or procedures to identify all created and processed data by the application and classify it to determine which level of sensitivity each piece of data belongs to. Each data category can then be mapped to security rules necessary for each level of sensitivity. Therefore, we should create a policy explaining how sensitive data should be managed and processed.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;For example, public marketing information that is not sensitive may be categorized as public data which is fine to place on the public website. Credit card numbers may be classified as private user data which may need to be encrypted whilst stored or in transit.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
          </references>
          <standards>
            <standard ref="8.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify all sensitive data created and processed by the application has been identified, and ensure that a policy is in place detailing how to best to deal with this data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.112">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-L7" name="Identity which functions of the application are resource consuming and protect and monitor them (optionally set up a WAF)" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DoS attacks against the application layer also aim to use up the memory and process time that the application requires to function properly while minimizing the resources employed by the attacker by using vulnerabilities or flaws in the application. The main characteristics of this type of attack are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The requirement for less bandwidth compared to other methods such as SYN Flood attacks, and as such, the infrastructure necessary to launch a successful attack is usually minor.&lt;/li&gt;&lt;li&gt;Greater difficulty in distinguishing between malicious and legitimate traffic. Many of the most common protection measures or systems focus on the network or transport layer, and as such, they would not be efficient when the target of the attack is the application layer. It is even difficult for the defense systems that monitor this layer to distinguish between malicious and legitimate traffic.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As we have indicated, this type of attack is very specific, and generally require fewer resources from the attacker to achieve devastating effects in the systems attacked. However, this type of attack requires more time to analyze the targeted system in order to discover vulnerabilities or bottlenecks that can be exploited during the attack.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Analyze weaknesses or bottlenecks in the design, the implementation, or even the functioning of the application to identify "heavy" requests that are resource consuming. For example, if the web application has a search engine, an attack could be to carry out searches that require a high level of resources to generate a bottleneck and eventually disable the service.&lt;/li&gt;&lt;li&gt;Implement a challenge to the device making the network request in order to test whether or not it is a bot. This is done through a test much like the CAPTCHA test commonly found when creating an account online. By giving a requirement such as a JavaScript computational challenge, many attacks can be mitigated.&lt;/li&gt;&lt;li&gt;Use of a web application firewall, managing and filtering traffic through an IP reputation database, and through on-the-fly network analysis by engineers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Layer 7 DDoS Attacks" url="https://owasp.org/www-pdf-archive/Layer_7_DDOS.pdf"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 7 DDoS PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space. One well-known application attack is Slowloris, which targets web servers. Verify that the implemented Layer 7 protection mechanisms (Javascript challenges, CAPTCHA tests, WAF) are effective.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.501">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="implement-monitoring-unusual-activities" name="Implement and monitor Business Logic Limits for actions and transactions" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement in the application the appropriate limits for specific business actions and transactions, to enforce the correct usage of the application for each user ensuring they cannot bypass important steps in the flow. This business logic limits provide us protection against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/p&gt;&lt;p&gt;All business actions or transactions that exceed the established limits, should be recorded in the logs and monitored as unusual events.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A04:2021-Insecure Design" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.&lt;/li&gt;
   &lt;li&gt;Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/li&gt;
  &lt;li&gt;Verify the application monitors for unusual events or activity from a business logic perspective.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="revoke-compromised-authentication-tokens" name="Implement an effective process to revoke compromised authentication tokens" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Theft or loss of an authentication token can undermine security in any multi-factor authentication process. Loss of a physical token or mobile device with soft-tokens, or compromise of a client-side certificate could mean an attacker has all of the factors required to authenticate to a system and bypass the protections provided by multi-factor authentication.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define an organization process to identify or report lost or compromised authentication tokens/factors&lt;/li&gt; 
 &lt;li&gt;Implement technical controls to suspend or revoke compromised tokens or accounts&lt;/li&gt; 
 &lt;li&gt;These processes should be implementable in a timely manner to reduce the attack window&lt;/li&gt; 
 &lt;li&gt;Implement mechanisms to renew authentication tokens/factors within a sufficient timeframe before they are revoked.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.4" supportedStandardRef="nist-800-63"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify there is a working process in place to revoke a given token in a timely manner.&lt;/li&gt;&lt;li&gt;Verify the renewal of authentication tokens/factors is completed in sufficient time.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.331">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="error-handling-centralized" name="Implement centralized mechanisms to manage errors and exceptions" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a functionality or a mechanism to manage exceptions in a centralized manner and avoid including duplicated try/catch blocks in the code.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;A well-planned error/exception handling strategy is important for three reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Good error handling does not give an attacker any information which can be leveraged for attacking the application.&lt;/li&gt;&lt;li&gt;A proper centralized error strategy is easier to maintain and reduces the chances of any uncaught errors "Bubbling up" to the front-end of an application.&lt;/li&gt;&lt;li&gt;Information leakages can lead to social engineering exploits.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Building an infrastructure for consistent error reporting proves more difficult than error handling. All exceptions should be caught as events with the severity of the error. These events will be logged.&lt;/p&gt;&lt;p&gt;The centralized system should reorganize all events and throw the corresponding error or system message in a consistent manner, depending on the severity of the error.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Code Review: Error Handling" url="https://www.owasp.org/index.php/Codereview-Error-Handling"/>
            <reference name="OWASP Error Handling" url="https://www.owasp.org/index.php/Error_Handling"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify that a centralized system is in place to catch errors and exceptions, and these errors are shown in a correct manner.&lt;/li&gt;&lt;li&gt;Verify all errors thrown from the centralized system are displayed in a correct fashion.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="look-up-secret-auth" name="Implement Look-Up Secret Authentication" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Verifiers of look-up secrets should prompt the claimant for the next secret from their authenticator or for a specific secret. A given secret from an authenticator must be used successfully only once. If the look-up secret is derived from a grid card, each cell of the grid shall be used only once.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Verifiers should store look-up secrets in a form that is resistant to offline attacks and have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;At least 112 bits entropy and hashed with an approved one-way function.&lt;/li&gt; 
 &lt;li&gt;With fewer than 112 bits of entropy, it should be salted and hashed using a suitable one-way key derivation function, and salt value of at least 32 bits in length and arbitrarily chosen so as to minimize salt value collisions among stored hashes.&lt;/li&gt; 
 &lt;li&gt;Less than 64 bits of entropy, the verifier must implement a rate limiting mechanisms that effectively limits the number of failed authentication attempts that can be made on the subscriber's account&lt;/li&gt; 
&lt;/ul&gt; 
 
&lt;div&gt; 
 &lt;div&gt;
   Look up secrets: pre-generated lists of secret codes, similar to Transaction Authorization Numbers (TAN), social media recovery codes, or a grid containing a set of random values. These are distributed securely to users. These lookup codes are used once, and once all used, the lookup secret list is discarded. This type of authenticator is considered "something you have". 
 &lt;/div&gt; 
 &lt;div&gt;
   https://pages.nist.gov/800-63-3/sp800-63b.html 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Verifier: An entity that verifies the claimant's identity by verifying the claimant's possession and control of a token using an authentication protocol. To do this, the Verifier may also need to validate credentials that link the token and identity and check their status. 
 &lt;/div&gt; 
 &lt;div&gt;
   https://csrc.nist.gov/glossary/term/verifier&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
          </references>
          <standards>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.6.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.2.2" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The look-up secret are only able to be used once.&lt;/li&gt;&lt;li&gt;The random generation of the look-up secrets has at least 112 bits of entropy.&lt;/li&gt;&lt;li&gt;If the entropy is lower than&amp;nbsp;112 but higher than 64 bits, it leverages a hashed with a one-way key derivation function and salted with at least 32 bits in length.&lt;/li&gt;&lt;li&gt;If the entropy is lower than 64 bits, a rate limiting mechanisms is in place to limit the number of failed authentication attempts.,&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.397">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-TLS" name="Inspect the TLS/SSL traffic on a capable device before sending the connection down on your infrastructure" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;TLS adds another vector for computational attacks since a client can easily (with little computational effort) force the server to expend relatively large computational work. If a web application is delivered over TLS, an attacker can also choose to attack the TLS negotiation process. TLS is computationally expensive so an attacker can reduce a server's availability by sending unintelligible data. In a variation of this attack, an attacker completes the TLS handshake but perpetually renegotiates the encryption method. Or an attacker can attempt to exhaust server resources by opening and closing many TLS sessions.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;To mitigate consider options like offloading the SSL from the origin infrastructure and inspecting the application traffic for signs of attack traffic or violations of policy at an application delivery platform (ADP).&lt;br&gt;A good ADP will also ensure that your traffic is then re-encrypted and forwarded back to the origin infrastructure with unencrypted content only ever residing in protected memory on a secure bastion host.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 6 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt;. It covers all the required tests for TLS &amp;amp; SSL assessments and is regularly updated.&lt;/p&gt;&lt;p&gt;There are many testing options that can be used with &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; and the options you should use will depend greatly on your testing requirements. Below are some useful examples, for an overview of &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; command-line options. run ./testssl.sh with no other options.&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to console&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Test all hosts on a Subnet and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Same as above, but only enumerate each servers supported ciphers:&lt;br&gt;./testssl.sh -E 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.501">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" name="Limit the number of accounts with privileges allowing modification and/or deletion of audit logs files" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit the number of accounts with privileges to modify and/or delete audit logs files.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the number of accounts with privileges to modify the logs is limited and
                            controlled.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-LOGGING" name="Logging the data access and the modification of personal data" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that every access and modification of personal data is logged (The log should be precise enough to know who changed what and when). This includes data access from the application as well as data access from privileged accounts, such as database admins. In practice, this means logging both on application, middleware and operating system (OS) level.
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="Art.5" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Test accessing and modifying user personal data as legitimate users, employees, administrators and malicious actors.&lt;/li&gt;
                &lt;li&gt;Verify appropriate logging of all the above activities are successful and sufficiently detailed.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-TLS-FAILURES" name="Log the backend TLS connection failures" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to record backend TLS connection failures and include these in the
                        logs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that backend TLS connection failures are recorded in the logs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-226" name="Overwrite data in memory before release" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Memory chunks released by an application are not actively overwritten, they are simply de-referenced with the data left until the memory is reallocated and used by another process. As such, sensitive data that is stored in memory may be exposed to an attacker with the ability to inspect that memory; for example through use of an uninitialized variable or other process.&amp;nbsp;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  Overwrite memory with zeros or random data before release.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  Pay particular attention to sensitive data, such as passwords or other credentials, or sensitive personal information.
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the parts of the code that handles authentication and very sensitive data
                            (i.e. credit card data).&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that the buffers holding that data are overwritten with zeros and freed as
                            soon as they are not needed anymore.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.112">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-541" name="Prevent unauthorised access to source code through the service" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to the source-code for the application can aid an attacker in determining bugs or vulnerabilities in the code or logic. For closed-source projects it is therefore important to control and restrict access to the source. Application services may unexpectedly expose code, for example a service providing files to a user could be manipulated to access source code if implemented insecurely.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure source code is not inadvertently disclosed through misconfiguration or vulnerabilities in the service.&lt;/li&gt;&lt;li&gt;Check configuration files are not downloadable directly from the service, and cannot be read and viewed through the service itself.&lt;/li&gt;&lt;li&gt;Ensure backups, operating systems, and version control artifacts do not expose code.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the source code of the application is never returned in cases in which it cannot be interpreted.&lt;/li&gt;&lt;li&gt;Web Servers have a concept called handlers which manage the source code interpretation before sending it to the client. If those handlers are not properly configured, the plain source code could be sent as a default.&lt;/li&gt;&lt;li&gt;Check the handlers are correctly configured to support the types of languages your server uses.&lt;/li&gt;&lt;li&gt;Check also that the source code is not leaked in case of failure.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent in both a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). Reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden headers list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-ICMP-Flooding" name="Rate-limit ICMP traffic and prevent the attack from impacting bandwidth and firewall performance" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Common attacks are ICMP Flooding, Ping flood and Ping of death - Layer 3 infrastructure DDoS attack methods that use ICMP messages to overload the targeted network's bandwidth. These kind of attacks can be prevented from taking place by rate-limiting ICMP traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;For example, iptables can be used on Linux systems as follows:&lt;/p&gt;&lt;p&gt;To protect against ping flood attacks the 'limit' module of iptables can be used:&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note that the above lines will protect only against ping request attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;To protect against generic ICMP flood attacks we can remove the constraint '--icmp-type echo-request'. This is only good enough to protect against PC to PC attacks. If flood is done using multiple sources or using hardware then this configuration may not be enough. The configuration will also cause denial of service to other users when under attack even from single source, as we are limiting based on protocol without considering the source address of the packet.&lt;/p&gt;&lt;p&gt;Iptables can also be used to prevent abuse of network resources by rate limiting them:&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 4/second --limit-burst 12 -j ACCEPT&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 1/minute --limit-burst 1 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;In the above example we are limiting outgoing connections to port 80. This is useful when we can't completely block outgoing connections but we do not want it to become channel from where people start browsing net or downloading. The limit module can also be used in rate limiting incoming traffic for performance reasons.&lt;/p&gt;&lt;p&gt;Disabling a ping flood is most easily accomplished by disabling the ICMP functionality of the targeted router, computer or other device. A network administrator can access the administrative interface of the device and disable its ability to send and receive any requests using the ICMP, effectively eliminating both the processing of the request and the Echo Reply. The consequence of this is that all network activities that involve ICMP are disabled, making the device unresponsive to ping requests, traceroute requests, and other network activities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Ping (ICMP) Flood DDoS Attack" url="https://www.cloudflare.com/learning/ddos/ping-icmp-flood-ddos-attack/"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="Rate limiting using iptables" url="https://www.sbarjatiya.com/notes_wiki/index.php/Rate_limiting_using_iptables"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can execute a Smurf attack (denial-of-service attack that floods a target system via spoofed broadcast ping messages) using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 -1 - flood -a VICTIM_IP BROADCAST_ADDRESS&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.501">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-18.8" name="Reject requests containing unexpected or missing content type headers" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Reject requests containing unexpected or missing content type headers with HTTP response status
                        &amp;quot;406 Unacceptable&amp;quot; or &amp;quot;415 Unsupported Media Type&amp;quot;.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Validate request content-type" url="https://www.owasp.org/index.php/REST_Security_Cheat_Sheet#Validate_request_content_types"/>
            <reference name="Spring docs: CSRF" url="https://docs.spring.io/spring-security/site/docs/current/reference/html/csrf.html"/>
          </references>
          <standards>
            <standard ref="13.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that HTTP requests with non-valid Content-type are rejected.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-SESS-REAUTH" name="Require additional authentication for sensitive operations / high value transactions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Having gained access to an account, for example through session hijacking or cross-site scripting, an attack may compromise data and functionality accessible to the victim. This may include elevating privileges or accessing sensitive data and functionality, such as changing passwords, creating accounts, or transferring funds.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;These critical functions and sensitive data should be further protected from attack using a risk-based authentication model requiring re-authentication via multi-factor authentication, or use of a token to sign transactions or operations.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement re-authentication on key functions (such as requiring the old password before setting a new one).&lt;/li&gt;&lt;li&gt;Use secondary authentication such as a transaction PIN to allow financial transfers.&lt;/li&gt;&lt;li&gt;Critical administrative functionality should require multi-factor authentication (such as a hard or soft token).&lt;/li&gt;&lt;li&gt;Consider use of signing technologies or tokens that enable the server-side to verify the authenticity of a request and mitigate Man in the Middle (MiTM) or Man in the Browser (MiTB) attacks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
          </references>
          <standards>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify critical functionalities of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the risk appetite for those functionalities.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Validate that re-authentication is required for those functions if deemed
                            necessary.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-306-SERVICE" name="Require authentication before presenting restricted data" issueId="" issueLink="" platform="" cost="0" risk="34" state="Required" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For less sensitive but still restricted data, simple verification of the location of the user may suffice (e.g. IP restrictions).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For non-sensitive but non-public data, access could be restricted by IP address, limiting access to internal networks, workstations, or gateways&lt;/li&gt;&lt;li&gt;For more sensitive data, TLS client-side certificates may be appropriate&lt;/li&gt;&lt;li&gt;Where secret or other sensitive data is handled, a full authentication process to identify and validate users with single or multi-factor authentication may be required&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-22" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Identify which parts of the service present sensitive data.&amp;nbsp;&lt;/li&gt;
                &lt;li&gt;Try to obtain access to this information without any type of authentication, for example, attempt to navigate directly to URLs that present sensitive data.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.112">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC-006" name="Restrict actions of users that follow unusual patterns" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict actions that users can do outside of the approved/required business process flow.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;This is important because without this safeguard in place attackers may be able to bypass or circumvent work-flows and checks allowing them to prematurely enter or skip required sections of the application potentially allowing actions/transactions to be completed without successfully completing the entire business process, leaving the system with incomplete back-end tracking information.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-02 Flaw Remediation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/40-08_02_SI-02"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
            <reference name="OWASP testing for the circumvention of work flows" url="https://www.owasp.org/index.php/Testing_for_the_Circumvention_of_Work_Flows_(OTG-BUSLOGIC-006)"/>
          </references>
          <standards>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application only processes business logic flows in sequential step order and in realistic human time.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.586">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-attributes-of-cookies" name="Secure Cookies with their attributes" issueId="" issueLink="" platform="" cost="0" risk="34" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID exchange mechanism based on cookies provides multiple security features in the form of cookie attributes that can be used to protect the exchange of the session ID:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Secure and HttpOnly Attribute:&lt;/strong&gt;&amp;nbsp;a secure cookie is only sent to the server with an encrypted request over the HTTPS protocol. Even with Secure, sensitive information should never be stored in cookies, as they are inherently insecure and this flag doesn't offer robust protection. Starting with Chrome 52 and Firefox 52, insecure sites (http:) can't set cookies with the Secure directive.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To mitigate cross-site scripting (XSS) attacks, HttpOnly cookies are inaccessible to JavaScript's Document.cookie API; they are only sent to the server. For example, cookies that persist server-side sessions don't need to be available to JavaScript, and so the HttpOnlyflag should be set.&lt;/p&gt;&lt;p&gt;Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;SameSite Attribute: &amp;nbsp;&lt;/strong&gt;The SameSite attribute should be configured to limit exposure against cross-site request forgery attacks. There are two possibilities:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Strict:&lt;/strong&gt; the browser will only send cookies if the request originated from the website that set the cookie. If the request originated from a different URL than the URL of the current location, none of the cookies tagged with the Strict attribute will be included.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Lax:&lt;/strong&gt; if the attribute is set to Lax, same-site cookies are withheld on cross-site subrequests, such as calls to load images or frames, but will be sent when a user navigates to the URL from an external site, for example, by following a link.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;By default SameSite is not configured, we need to configure it with one of the above types, as shown below:&lt;/p&gt;&lt;p&gt;Set-Cookie: key=value; SameSite=Strict&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Domain and Path Attributes:&lt;/strong&gt; The session token value issued after users have successfully identified and authenticated themselves is of equivalent value to the secrets the user presents to login, and must be protected accordingly.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If the cookie domain attribute is too liberal, the cookie may be accessible to other hosts within the parent domain. This is a particular issue in multi-tenanted hosting, or where applications are delivered as subdomains of a third party parent domain.&lt;/li&gt;&lt;li&gt;If the cookie path attribute is not appropriately restricted, the session token may be accessible from other applications or content on the server.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The domain and the path attributes for the session cookie should be restricted to the fully qualified hostname on which the application is running.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;For example:&lt;/p&gt;&lt;p&gt;Set-Cookie: session=token; Path=/theapp/; Domain=myapp.example.com; secure; HTTPOnly&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;__Host- prefix:&lt;/strong&gt; ensure that all Cookies with a name starting with __Host- are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;set with the secure flag,&lt;/li&gt;&lt;li&gt;from a secure page (HTTPS),&lt;/li&gt;&lt;li&gt;does not have a domain specified (and therefore aren't sent to subdomains)&lt;/li&gt;&lt;li&gt;and the path must be "/".&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="HttpOnly" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"/>
            <reference name="OWASP XSS (Cross Site Scripting) Prevention Cheat Sheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md"/>
            <reference name="Owasp Cheatsheet: Session Management" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
            <reference name="__Host-Prefix" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie"/>
          </references>
          <standards>
            <standard ref="3.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.4.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.4.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.4.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.4.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
            <standard ref="7.1.1" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Using a browser, open the Web Developer tools.&lt;/li&gt;&lt;li&gt;Load the Network inspection tab.&lt;/li&gt;&lt;li&gt;Load the endpoints of the application which set cookies (send the Set-Cookie HTTP header).&lt;/li&gt;&lt;li&gt;Check that within the HTTP response, the Set-Cookie has:&lt;ul&gt;&lt;li&gt;the path and domain attributes set to the most restrictive path and domain respectively.&lt;/li&gt;&lt;li&gt;'HttpOnly' and 'secure' flag set and configured&lt;/li&gt;&lt;li&gt;'SameSite' attribute configured.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check that all Cookies with a name starting with __Host- are:&lt;ul&gt;&lt;li&gt;set with the secure flag,&lt;/li&gt;&lt;li&gt;from a secure page (HTTPS),&lt;/li&gt;&lt;li&gt;does not have a domain specified (and therefore aren't sent to subdomains)&lt;/li&gt;&lt;li&gt;and the path is"/".&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.023">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-662" name="Use a synchronised time source" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to correlate logs and data from different internal and external systems, and to preserve forensic quality of the logs, it is important a unified and trusted synchronized time source is used throughout the environment.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Servers should synchronize to an internal or external NTP server&lt;/li&gt;&lt;li&gt;The centralized source should in turn use (or be) a trusted central time source.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This control is critical in identifying application events (including attacks) through logging, and in conducting post-event analysis, and in particular to track the entire user (or attacker) journey through the system should it be compromised.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;It is good practice to use the concept of Indicators of Compromise (IoC) which should be leveraged to detect possible situations in which the system has been compromised and give an appropriate response.&amp;nbsp; IoCs are often tracked through logs, and accurate time is essential.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-08 Time Stamps" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/177-08_02_AU-08"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA AU-11 Audit Record Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/180-08_02_AU-11"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AU-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that mechanisms are installed to keep the host's clock synchronized (i.e.
                            ntpd in Linux based systems).&lt;/li&gt;
                            &lt;li&gt;Inspect the logs created by the app and check they have the correct timestamp.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.592">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="55" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-BH" name="Use blackholing to mitigate L4 DDoS attacks" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DDoS attack blocking, commonly referred to as blackholing, is a method typically used by ISPs to stop a DDoS attack on one of its customers. This approach to block DDoS attacks makes the site in question completely inaccessible to all traffic, both malicious attack traffic and legitimate user traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Blackholing is typically deployed by the ISP to protect other customers on its network from the adverse effects of DDoS attacks such as slow network performance and disrupted service. Common attacks are SYN flood and Smurf attack. For Smurf attack a simple solution is to disable IP broadcasting addresses at each network router and firewall.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Older routers are likely to enable broadcasting by default, while newer routers will likely already have it disabled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Disable broadcasting by default on old routers.&lt;/p&gt;&lt;p&gt;To implement RTBH (Remote Triggered Black Hole) Network Operator sets up a null route for the 192.0.2.1 address on all the backbone routers which participate in BGP:&lt;/p&gt;&lt;p&gt;ip route 192.0.2.1 255.255.255.255 null 0 254&lt;/p&gt;&lt;p&gt;192.0.2.1 is part of 192.0.2.0/24, the TEST-NET, one of the reserved IPv4 address blocks.&lt;/p&gt;&lt;p&gt;Create a route-map to catch routes which need to be blackholed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static routes can be tagged in Cisco IOS - we will tag routes to be blackholed with the value of 66&lt;/li&gt;&lt;li&gt;Set origin to be iBGP&lt;/li&gt;&lt;li&gt;Set local-preference to be 150&lt;ul&gt;&lt;li&gt;higher than any other local-preference set in the backbone&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set community to be no-export and internal marker community (ASN:666)&amp;nbsp;&lt;ul&gt;&lt;li&gt;Don't want prefix to leak outside the AS&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set next-hop to 192.0.2.1 (IPv4) or 100::1 (IPv6)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Then introduce the route-map into the BGP configuration.&lt;/p&gt;&lt;p&gt;To implement the trigger, simply null route whatever address or address block needs to be blackholed:&lt;/p&gt;&lt;p&gt;ip route 50.62.124.1 255.255.255.255 null0 tag 66&amp;nbsp;&lt;/p&gt;&lt;p&gt;And this ensures that (for example) 50.62.124.1/32 is announced to the entire backbone with next-hop 192.0.2.1 set.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="RFC 4987 - TCP SYN Flooding Attacks and Common Mitigations" url="https://tools.ietf.org/html/rfc4987"/>
            <reference name="RFC 5635 - Remote Triggered Black Hole Filtering               with Unicast Reverse Path Forwarding (uRPF)" url="https://tools.ietf.org/html/rfc5635"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can simulate a TCP SYN DDoS Attack using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 VICTIM_IP -flood -rand-source -destport 80 -syn -d 120 -w 64&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.500">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="16" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="same-encoding-parsers" name="Use the same encodings and parsers in all application components" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Errors may occur when converting between differently coded character data.&amp;nbsp; There are two general types of encoding errors. If the byte sequence is not valid for the specified charset then the input is considered malformed. If the byte sequence cannot be mapped to an equivalent character sequence then an unmappable character has been encountered.&lt;/p&gt;&lt;p&gt;Special care should be taken when decoding untrusted byte data to ensure that malformed input or unmappable character errors do not result in defects and vulnerabilities.&amp;nbsp; Encoding errors can also occur, for example, encoding a cryptographic key containing malformed input for transmission will result in an error. Encoding and decoding errors typically result in data corruption.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the same encodings and parsers in all application components to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="STR51-J. Use the charset encoder and decoder classes when more control over the encoding process is required" url="https://wiki.sei.cmu.edu/confluence/display/java/STR51-J.+Use+the+charset+encoder+and+decoder+classes+when+more+control+over+the+encoding+process+is+required"/>
          </references>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all application components are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.185">
              <output/>
            </source>
            <references>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:40.184">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-147" name="Validate input parameters to prevent HTTP Parameter Pollution" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>All data received from external sources should be considered tainted and a potential risk, regardless of the source or transport method. HTTP Parameter Pollution attacks result when parameters are added or inserted into requests, and are inappropriately or unsafely handled by the server. For example, injection of parameters into strings or cookies sent to the application can result in the variables being interpreted out of sequence, exploiting flaws in the business logic and flow.
&lt;div&gt;
 &lt;div&gt;
  &lt;ul&gt;
  &lt;/ul&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;p&gt;For example, there was a bug in the Blogger platform which illustrates this vulnerability. The bug allowed malicious users to take ownership of the victim's blog by using the following HTTP request:&lt;/p&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;POST /add-authors.do HTTP/1.1&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;security_token=attackertoken&amp;amp;&lt;b&gt;blogID=attackerblogidvalue&lt;/b&gt;&amp;amp;&lt;b&gt;blogID=victimblogidvalue&lt;/b&gt;&amp;amp;authorsList=goldshlager19test%40gmail.com(attacker email)&amp;amp;ok=Invite&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;p&gt;The flaw resided in the authentication mechanism used by the web application, as the security check was performed on the first&amp;nbsp;&lt;code&gt;blogID&lt;/code&gt;&amp;nbsp;parameter, whereas the actual operation used the second occurrence.&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify parameters within the application used for authentication decisions, or critical business logic.&lt;/li&gt;&lt;li&gt;Send specially forged requests to the application in which those parameters are duplicated, or passed through other methods (e.g. POST parameters in the URL as GET fields, cookies as form fields etc.)&lt;ul&gt;&lt;li&gt;Review the application logic to ensure:&lt;/li&gt;&lt;li&gt;The same parameter is for all the decisions.&lt;/li&gt;&lt;li&gt;Parameters received over unexpected or non compliant methods result in a security exception.&lt;/li&gt;&lt;li&gt;Duplicate parameters are identified and result in a security exception.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should fail-safe; i.e. unexpected or suspicious behavior should result in termination of the user's session and a security event being logged.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A number of tools can be used to aid in testing:&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly inside your browser with the Developer Tools&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data)&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:39.955">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for HTTP Parameter Pollution" url="https://www.owasp.org/index.php/Testing_for_HTTP_Parameter_pollution_(OTG-INPVAL-004)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-601" name="Whitelist which URLs the application may redirect to" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="cdalrymple@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should maintain a list of URLs to which it may redirect users. This whitelisting can also be achieved by applying regular expressions. The application should only allow redirects to trusted URLS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-04 Information Flow Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/26-08_02_AC-04"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the points of the application in which a redirection takes place. Redirections are usually indicated by the use of the "Location" HTTP header along with the "3xx" code.&lt;/li&gt;&lt;li&gt;Verify if the value inside the Location header is coming from user input (URL string, Cookies, HTTP headers, forms, etc.).&lt;/li&gt;&lt;li&gt;Modify the input value which will be part of the Location header to redirect to domains which should not be permitted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:38.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="availability" name="Availability" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-607" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="AV-DOS-APP">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L3">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L4">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-TLS">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-272">
                  <countermeasures>
                    <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="SOURCE-LEAK" name="Attackers gain control of the system through a source code leakage" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Attackers gain unauthorized access to a service by reading raw source code returned by the service, and this code contains confidential information such as authentication credentials or other secrets that can be used to access the service.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Configuration files that can be downloaded from the service could also be leveraged to gain access to sensitive information.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-541">
                  <countermeasures>
                    <countermeasure ref="CWE-541" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-541" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                    <countermeasure ref="network-rate-limit" mitigation="34"/>
                    <countermeasure ref="protection-against-data-mining" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="protection-against-data-mining" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-172" name="Attackers subvert the intended workflow of the application in order to perform unauthorised operations" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;If an application enforces an order in workflows, then attackers could attempt to bypass this order so that they can perform operations for which they are not authorized. The technique can also be used to gain access to unauthorized data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-841">
                  <countermeasures>
                    <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                    <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-214" name="An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-460">
                  <countermeasures>
                    <countermeasure ref="error-handling-centralized" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="error-handling-centralized" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="hostile-subdomain-takeover" name="Attackers claim subdomains with the help of external services" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  This attack vector utilizes DNS entries pointing to Service Providers where the pointed sub-domain is currently not in use. Depending on the DNS-entry configuration and which Service Provider it points to, some of these services will allow unverified users to claim these sub-domains as their own.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In the not so rare case, the attacker can also "inherit" the Domain Owner's Wildcard SSL used inside the Service Provider.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;div&gt;
  &lt;b&gt;Attack Scenario&lt;/b&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;ol&gt;
   &lt;li&gt;Your company starts using a new service, eg an external Support Ticketing-service.&lt;/li&gt;
   &lt;li&gt;Your company points a sub-domain to the Support Ticketing-service, eg support.your-domain.com&lt;/li&gt;
   &lt;li&gt;Your company stops using this service but does not remove the sub-domain redirection pointing to the ticketing system.&lt;/li&gt;
   &lt;li&gt;Attacker signs up for the Service and claims the domain as theirs. No verification is done by the Service Provider, and the DNS-setup is already correctly setup.&lt;/li&gt;
   &lt;li&gt;Attacker can now build a complete clone of the real site, add a login form, redirect the user, steal credentials (e.g. admin accounts), cookies and/or completely destroy business credibility for your company.&lt;/li&gt;
  &lt;/ol&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Hostile Subdomain Takeover using Heroku/Github/Desk + more" url="https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-350">
                  <countermeasures>
                    <countermeasure ref="identify-dns-domains" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-dns-domains" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="ACCESS SENSITIVE DATA" name="Access sensitive data" desc="" library="CS-Default">
          <threats>
            <threat ref="PRE-PROD" name="Sensitive data is exposed to unauthorised personnel in a pre-production environment" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Pre-production environments are usually available to a wide group of developers and
                                testers who may not be authorized to view sensitive production data.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-485-PREPROD">
                  <countermeasures>
                    <countermeasure ref="CWE-485-PREPROD" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-485-PREPROD" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-37" name="An attacker examines a target system to find sensitive data that has been embedded within it" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="identify-sensitive-data" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-sensitive-data" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="WEB-QUERY-PARAM" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Sensitive data directly inserted as a parameters in the URL string could all too easily leak that data inside logs, browser history, etc.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Additionally this information could potentially be leveraged by an attacker to gain access to the entire system or user data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-598">
                  <countermeasures>
                    <countermeasure ref="CWE-598" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="open-redirect-threat" name="An attacker leverages the redirection functionality in the application to conduct more convincing phishing attacks" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An http parameter may contain a URL value for redirecting the request to another specified URL. By modifying this URL value to point towards a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy and convincing appearance.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="CWE-601" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-601" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-158" name="Sensitive data is compromised through network sniffing attacks" state="Partly-Mitigate" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker monitoring network traffic between nodes of a public or multicast network.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic.&lt;/li&gt;&lt;li&gt;The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="70"/>
                <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="vulnerable-session-management" name="An attacker can obtain a valid session identifier to impersonate legitimate users" state="Partly-Mitigate" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Session management for Web applications is an application layer responsibility. Session security is critical to the overall security of the application. Vulnerabilities that are specific to session management are great threats to any web application and are also among the most challenging to find and fix.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Sessions are targets for malicious users because they can be used to gain access to a system without having to authenticate.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="75"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1078.001" url="https://attack.mitre.org/techniques/T1078/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.002" url="https://attack.mitre.org/techniques/T1078/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.003" url="https://attack.mitre.org/techniques/T1078/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.004" url="https://attack.mitre.org/techniques/T1078/004"/>
                <reference name="Secure Session Management: Preventing Security Voids in Web Applications" url="https://www.sans.org/reading-room/whitepapers/webservers/paper/1594"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="34"/>
                    <countermeasure ref="secure-attributes-of-cookies" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-370">
                  <countermeasures>
                    <countermeasure ref="PROPER-REVOCATION-CERTIFICATE" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="34"/>
                <countermeasure ref="PROPER-REVOCATION-CERTIFICATE" mitigation="33"/>
                <countermeasure ref="secure-attributes-of-cookies" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-204" name="An attacker examines a target application's cache for sensitive information in order to get at sensitive data" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker examines a target application's cache for sensitive information. Many applications that communicate with remote entities or which perform intensive calculations utilize caches to improve efficiency. However, if the application computes or receives sensitive information and the cache is not appropriately protected, an attacker can browse the cache and retrieve this information. This can result in the disclosure of sensitive information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-226">
                  <countermeasures>
                    <countermeasure ref="CWE-226" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-524">
                  <countermeasures>
                    <countermeasure ref="CWE-524" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-226" mitigation="50"/>
                <countermeasure ref="CWE-524" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-115" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-275">
                  <countermeasures>
                    <countermeasure ref="FEAT-ACC-CTRL" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-639">
                  <countermeasures>
                    <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="34"/>
                    <countermeasure ref="CWE-285" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="34"/>
                <countermeasure ref="CWE-285" mitigation="33"/>
                <countermeasure ref="FEAT-ACC-CTRL" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-215" name="Attackers gain access to services or data by sending malformed, or otherwise unexpected messages to a target application" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's their desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. By observing logs and error messages, the attacker can potentially learn details about the configuration of the target application and might be able to cause the target to disclose sensitive information.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="50"/>
                <countermeasure ref="ASVS-8.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-232" name="Anonymous users could gain access to sensitive data" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Attackers could access data for which they are not authorized by connecting directly
                                to the resource, without authenticating. E.g.: GET /userdetails?ID=145 to gain direct
                                access to that user's personal information.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references>
                <reference name="OWASP Development Guide: Authorization" url="https://www.owasp.org/index.php/Guide_to_Authorization"/>
                <reference name="OWASP Top Ten" url="https://www.owasp.org/index.php/Top_10_2007-Failure_to_Restrict_URL_Access"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-285" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-308">
                  <countermeasures>
                    <countermeasure ref="look-up-secret-auth" mitigation="33"/>
                    <countermeasure ref="revoke-compromised-authentication-tokens" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-285" mitigation="34"/>
                <countermeasure ref="look-up-secret-auth" mitigation="33"/>
                <countermeasure ref="revoke-compromised-authentication-tokens" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="CS-Default">
          <threats>
            <threat ref="2FA-Token-compromise" name="Second authentication factor is compromised" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>The second authentication factor, such as the digital certificate or hardware or
                                software token is compromised by attackers. Attackers would additionally have to
                                compromise the first factor (e.g. the password) in order to completely compromise the
                                authentication system.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="2FA-Token-compromise">
                  <countermeasures>
                    <countermeasure ref="revoke-compromised-authentication-tokens" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="revoke-compromised-authentication-tokens" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="7k-CWE-TimeState" name="Attackers gain unauthorised access to the application because of time and state management issues" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This weakness is related to the&amp;nbsp;improper&amp;nbsp;management of time and state in an environment that supports simultaneous or near-simultaneous computation by multiple systems, processes, or threads.&lt;/p&gt;&lt;p&gt;Distributed computation is about time and state. That is, in order for more than one component to communicate, state must be shared, and all of this takes time. Most programmers anthropomorphize their work. They think about one thread of control carrying out the entire program in the same way they would if they had to do the job themselves. Modern computers, however, switch between tasks very quickly, and in multi-core, multi-CPU, or distributed systems, two events may take place at exactly the same time. Defects rush to fill the gap between the programmer's model of how a program executes and what happens in reality. These defects are related to&amp;nbsp;unexpected&amp;nbsp;interactions between threads, processes, time, and information. These interactions happen through shared state: semaphores, variables, the file system, and, basically, anything that can store information.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-367">
                  <countermeasures>
                    <countermeasure ref="CWE-367-TOCTOU" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-367-TOCTOU" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-102" name="Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Session side-jacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim.
&lt;br /&gt;This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token.
&lt;br /&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-523">
                  <countermeasures>
                    <countermeasure ref="CWE-603" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-603" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CSD-AUTH_BYPASS" name="Attackers gain access to user accounts by exploiting flaws in the authentication function" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The authentication mechanism itself can be attacked in order to exploit flaws in its design or implementation.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-AUTH" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-603">
                  <countermeasures>
                    <countermeasure ref="CWE-603" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.2" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.2" mitigation="34"/>
                <countermeasure ref="CWE-306-AUTH" mitigation="33"/>
                <countermeasure ref="CWE-603" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="SPOOF-ENDPOINT" name="Attackers might be able to spoof a component from a different system or process" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The vulnerability allows attackers to spoof a component from a different system or process, thereby gaining the same level of access as the intended endpoint. Spoofing refers to the act of falsifying or mimicking the identity of a legitimate user or system. This component can be also known as an endpoint. In IT, an endpoint is a remote computing device that communicates back and forth with a network to which it is connected, which should not be mistaken by an API endpoint, which is an URIs (Uniform Resource Identifiers) on an API that an application can access.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Attackers can use various techniques to spoof the identity of the intended endpoint, such as IP address spoofing or DNS spoofing. By spoofing the endpoint, attackers can trick the system into thinking that they have the same level of access as the intended endpoint. This vulnerability is a significant threat to the security of network-based communication systems. It can allow attackers to gain unauthorized access to sensitive data or systems, and even take control over the targeted device or network.&amp;nbsp;&lt;/p&gt;&lt;p&gt;For example, an attacker could use this vulnerability to gain access to a corporate network or steal sensitive information transmitted between two endpoints.&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-923">
                  <countermeasures>
                    <countermeasure ref="CWE-923-SEGREG" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-923-SEGREG" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-59" name="The session ID, and hence the users' session is compromised through brute force attack" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Attackers could use brute force techniques to attempt to guess valid session
                                IDs.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-330">
                  <countermeasures>
                    <countermeasure ref="look-up-secret-auth" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="look-up-secret-auth" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG-MANAGEMENT" name="Log Management" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-93" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.8" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                    <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-778-AUTH" name="Attacks against the authentication system may go undetected" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Automated attacks against many user accounts, or successful attacks against an account
                                require a response. &amp;nbsp;If audit logs are not kept of both successful and
                                unsuccessful authentication operations, then post attack forensics will be hampered.&amp;nbsp;&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Without a dynamic response to mass automated attacks against the
                                authentication system, attackers stand a greater chance of success.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1562.001" url="https://attack.mitre.org/techniques/T1562/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.002" url="https://attack.mitre.org/techniques/T1562/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.003" url="https://attack.mitre.org/techniques/T1562/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.004" url="https://attack.mitre.org/techniques/T1562/004"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.006" url="https://attack.mitre.org/techniques/T1562/006"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.007" url="https://attack.mitre.org/techniques/T1562/007"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.008" url="https://attack.mitre.org/techniques/T1562/008"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.009" url="https://attack.mitre.org/techniques/T1562/009"/>
                <reference name="Mitre ATT&amp;CK Technique T1562.010" url="https://attack.mitre.org/techniques/T1562/010"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="CDS-USER-TRACK" mitigation="20"/>
                    <countermeasure ref="CWE-662" mitigation="16"/>
                    <countermeasure ref="EU-GDPR-LOGGING" mitigation="16"/>
                    <countermeasure ref="LOG-TLS-FAILURES" mitigation="16"/>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="16"/>
                    <countermeasure ref="security-logging" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="20"/>
                <countermeasure ref="CWE-662" mitigation="16"/>
                <countermeasure ref="EU-GDPR-LOGGING" mitigation="16"/>
                <countermeasure ref="LOG-TLS-FAILURES" mitigation="16"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="16"/>
                <countermeasure ref="security-logging" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="CWE-532" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-779">
                  <countermeasures>
                    <countermeasure ref="LOG-RETENTION" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-532" mitigation="70"/>
                <countermeasure ref="LOG-RETENTION" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-137-MASS" name="Functionality could be subverted through mass assignment" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>If the application binds parameters to back-end objects, then attackers could potentially set fields on those objects that were not designed to be modified by the user.</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-915">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-300" name="Attackers gain control of the connection through a Man In The Middle attack" state="Partly-Mitigate" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
                                This type of attack targets the communication between two components (typically client
                                and server). The attacker places himself in the communication channel between the two
                                components. Whenever one component attempts to communicate with the other (data flow,
                                authentication challenges, etc.), the data first goes to the attacker, who has the
                                opportunity to observe or alter it, and it is then passed on to the other component as
                                if it was never intercepted. This interposition is transparent leaving the two
                                compromised components unaware of the potential corruption or leakage of their
                                communications. The potential for Man-in-the-Middle attacks yields an implicit lack of
                                trust in communication or identify between two components.&amp;nbsp; &amp;nbsp;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-586-SER" name="An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-502">
                  <countermeasures>
                    <countermeasure ref="SER-UNTRUST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SER-UNTRUST" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-101" name="Unauthorised data could be accessed by manipulating parameters sent to the application" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>The application could be tricked into exposing data to unauthorized users by
                                manipulating the parameters it accepts. All data received from the client side could be
                                subject to manipulation, including fields like cookies and HTTP headers, if these are
                                used as inputs to the application.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-22">
                  <countermeasures>
                    <countermeasure ref="CWE-639" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-548">
                  <countermeasures>
                    <countermeasure ref="DIRECTORY_LISTING" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-650">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-HTTP-METHODS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="25"/>
                <countermeasure ref="CWE-639" mitigation="25"/>
                <countermeasure ref="DIRECTORY_LISTING" mitigation="25"/>
                <countermeasure ref="RESTRICT-HTTP-METHODS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-117" name="An attacker monitors HTTP headers from a target in order to gather information" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker monitors data streams to or from a target in order to gather information.
                                This attack may be undertaken in order to gather information to support a later attack,
                                or the data collected may be the end goal of the attack. This attack usually involves
                                sniffing network traffic, but may include observing other types of data streams, such as
                                radio. In most varieties of this attack, the attacker is passive and simply observes
                                regular communication, however in some variants the attacker may attempt to initiate the
                                establishment of a data stream or influence the nature of the data transmitted. However,
                                in all variants of this attack, and distinguishing this attack from other data
                                collection methods, the attacker is not the intended recipient of the data stream.
                                Unlike some other data leakage attacks, the attacker is observing explicit data channels
                                (e.g. network traffic) and reading the content. This differs from attacks that collect
                                more qualitative information, such as communication volume, or other information not
                                explicitly communicated via a data stream.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="ASVS-11.5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-11.5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-267" name="Attackers encode potentially harmful input and submit it to bypass input filtering protections" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This attack leverages the possibility of encoding potentially harmful input and submitting it to applications not expecting or effective at validating this encoding, thus, thwarting the validation.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-173">
                  <countermeasures>
                    <countermeasure ref="harden-http-headers" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-235">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="50"/>
                <countermeasure ref="harden-http-headers" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-62" name="An attacker crafts malicious web links and distributes them hoping to induce users to click on the link and execute a malicious action" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level.
&lt;br&gt;This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply "riding" the existing session cookie.
&lt;br&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-352">
                  <countermeasures>
                    <countermeasure ref="ASVS-18.8" mitigation="34"/>
                    <countermeasure ref="CSD-SESS-REAUTH" mitigation="33"/>
                    <countermeasure ref="cwe-352-csrf" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-18.8" mitigation="34"/>
                <countermeasure ref="CSD-SESS-REAUTH" mitigation="33"/>
                <countermeasure ref="cwe-352-csrf" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="open-redirect-threat" name="An attacker leverages the redirection functionality in the application to conduct more convincing phishing attacks" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An http parameter may contain a URL value for redirecting the request to another specified URL. By modifying this URL value to point towards a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy and convincing appearance.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="CWE-601" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-601" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="CS-Default">
          <threats>
            <threat ref="7k-CWE-Environment" name="Attackers gain unauthorised access to the application through an environment flaw" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This section includes everything that is outside of the source code but is still critical to the security of the product that is being created. Because the issues covered by this section are not directly related to source code, we separated it from the rest of the realms.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-2">
                  <countermeasures>
                    <countermeasure ref="ENV-USE" mitigation="50"/>
                    <countermeasure ref="SEC-DEPLOY" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ENV-USE" mitigation="50"/>
                <countermeasure ref="SEC-DEPLOY" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="post-data" name="Post data" desc="Data is received (posted) here" library="CS-Default">
          <threats>
            <threat ref="CAPEC-73" name="Attackers upload code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attack of this type involves an attacker inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to exploit these vulnerabilities.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-116">
                  <countermeasures>
                    <countermeasure ref="same-encoding-parsers" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="same-encoding-parsers" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="ssrf-threat" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                    <countermeasure ref="CWE-601" mitigation="25"/>
                    <countermeasure ref="DATA-VAL" mitigation="25"/>
                    <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                <countermeasure ref="CWE-601" mitigation="25"/>
                <countermeasure ref="DATA-VAL" mitigation="25"/>
                <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-94" name="Attackers gain access to the system through Server-Side Code Injection" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Server-Side Code Injection happens when an attacker is able to direct input under his control and mix it with executed code on the server side by modifying the logic executed on it.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Depending on the code isolation, this event could grant the user access to system resources and data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-78">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-176" name="Attackers can manipulate Configuration/Environment" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-15">
                  <countermeasures>
                    <countermeasure ref="configuration-integrity" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="configuration-integrity" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-35" name="Attackers can leverage Executable Code in Non-Executable Files" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attack of this type exploits a system's trust in configuration and resource files, when the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.
&lt;br /&gt;The attack can be directed at a client system, such as causing buffer overrun through loading seemingly benign image files, as in Microsoft Security Bulletin MS04-028 where specially crafted JPEG files could cause a buffer overrun once loaded into the browser. Another example targets clients reading pdf files. In this case the attacker simply appends javascript to the end of a legitimate url for a pdf (http://www.gnucitizen.org/blog/danger-danger-danger/)
&lt;br /&gt;http://path/to/pdf/file.pdf#whatever_name_you_want=javascript:your_code_here
&lt;br /&gt;The client assumes that they are reading a pdf, but the attacker has modified the resource and loaded executable javascript into the client's browser process.
&lt;br /&gt;The attack can also target server processes. The attacker edits the resource or configuration file, for example a web.xml file used to configure security permissions for a J2EE app server, adding role name &amp;quot;public&amp;quot; grants all users with the public role the ability to use the administration functionality.
&lt;br /&gt;The server trusts its configuration file to be correct, but when they are manipulated, the attacker gains full control.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-95">
                  <countermeasures>
                    <countermeasure ref="dyn-exec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="dyn-exec" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1b392ac2-35c6-4ef6-9def-37a48063ee1d" diagramComponentId="a0ca1e93-44ed-4a46-a0c9-acb5b429bceb" ref="92de7fbe-61ab-4134-a0c5-9c879d43bc80" name="Web UI" desc="" library="" parentComponentRef="" componentDefinitionRef="CD-V2-WEB-UI">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets>
        <asset name="Credit Card Data" accessType="40"/>
        <asset name="Credit Card Data" accessType="50"/>
        <asset name="Customer Data" accessType="40"/>
        <asset name="Customer Data" accessType="50"/>
        <asset name="Personally Identifiable Information" accessType="40"/>
        <asset name="Personally Identifiable Information" accessType="50"/>
      </assets>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-1021" name="CWE-1021" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-1021: Improper Restriction of Rendered UI Layers or Frames
The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.
A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.999">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1395" name="CWE-1395" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-1395: Dependency on Vulnerable Third-Party Component
The product has a dependency on a third-party component that contains one or more known vulnerabilities.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.999">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="CWE-287" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-287: Improper Authentication
When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.
</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.999">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="CWE-79" state="0" impact="75" issueId="" issueLink="">
          <desc>CWE:
CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.

				</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.999">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-WEB-UI-C2" name="Employ frame-busting scripts, set X-Frame-Options header, and enforce Content Security Policy" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="cdalrymple@iriusrisk.com" library="client-side-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To protect your web application from clickjacking and other iframe-based attacks, follow these steps to implement frame-busting scripts, set the X-Frame-Options HTTP header, and enforce Content Security Policy (CSP). These measures will prevent your web pages from being embedded within iframes on unauthorized websites, mitigating potential attacks.&lt;/p&gt;
&lt;p&gt;Step 1: Employ Frame-Busting Scripts&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Add Frame-Busting JavaScript:&lt;/strong&gt; Within the &lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt; section of your HTML pages, include a JavaScript snippet that prevents your website from being framed. A simple script like this can be used:&lt;/p&gt;
&lt;p&gt;This script checks if your page is being framed and, if so, redirects the top-level window to the current page, effectively "busting" out of the frame.&lt;/p&gt;
&lt;p&gt;Step 2: Set X-Frame-Options Header&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure Web Server:&lt;/strong&gt; Depending on your web server, add a configuration to include the &lt;strong&gt;X-Frame-Options&lt;/strong&gt; HTTP header in all responses. This header tells browsers not to embed your pages within frames or iframes. There are three options you can set:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;DENY&lt;/strong&gt; - No framing is allowed.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;SAMEORIGIN&lt;/strong&gt; - Only framing within the same domain is allowed.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;ALLOW-FROM uri&lt;/strong&gt; - Framing is allowed only by the specified &lt;strong&gt;uri&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step 3: Enforce Content Security Policy&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implement CSP Header:&lt;/strong&gt; Content Security Policy (CSP) is a powerful tool that helps prevent XSS attacks and other injection vulnerabilities. To prevent your pages from being framed, include the CSP &lt;strong&gt;frame-ancestors&lt;/strong&gt; directive in your responses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure Web Server to Include CSP:&lt;/strong&gt; Add a CSP header with a &lt;strong&gt;frame-ancestors&lt;/strong&gt; directive to define which origins can embed your content.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example for Apache:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example for Nginx:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This CSP directive prevents all framing of your content, except on the same origin. Adjust the directive according to your specific needs, replacing &lt;strong&gt;'self'&lt;/strong&gt; with the allowed origins if necessary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Regularly Update Your Security Measures:&lt;/strong&gt; Security threats evolve, so regularly review and update your security configurations.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Your Team:&lt;/strong&gt; Ensure that your development team is aware of the importance of web security and understands how to implement these measures.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Automated Tools:&lt;/strong&gt; Employ automated tools for security headers to ensure they are correctly set across your application.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Monitor for Security Flaws:&lt;/strong&gt; Regularly test your application for security vulnerabilities and address any issues promptly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing these steps will significantly increase the security of your web application against iframe-based attacks and contribute to a more robust overall security posture.&lt;/p&gt;
&lt;p&gt;nginxCopy code&lt;/p&gt;
&lt;p&gt;add_header Content-Security-Policy "frame-ancestors 'self'";&lt;/p&gt;
&lt;p&gt;apacheCopy code&lt;/p&gt;
&lt;p&gt;Header set Content-Security-Policy "frame-ancestors 'self'"&lt;/p&gt;
&lt;p&gt;javascriptCopy code&lt;/p&gt;
&lt;p&gt;if (window.top !== window.self) { &amp;nbsp;window.top.location = window.location; } &lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="273-600" supportedStandardRef="OpenCRE"/>
            <standard ref="923" supportedStandardRef="cwe-standard"/>
            <standard ref="Network Architecture Documentation" supportedStandardRef="cloud-control-matrix"/>
            <standard ref="V1.14.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1037 - Filter Network Traffic||ATT&amp;CK Enterprise - M1050 - Exploit Protection||ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content||ATT&amp;CK Enterprise - M1017 - User Training||ATT&amp;CK Enterprise - M1048 - Application Isolation and Sandboxing"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V1.14.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-WEB-UI-C4" name="Implement input validation, output encoding, and enforce Content Security Policy (CSP)" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="cdalrymple@iriusrisk.com" library="client-side-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing input validation, output encoding, and enforcing Content Security Policy (CSP) are crucial steps to securing your web UI against a variety of common attacks, such as Cross-Site Scripting (XSS), SQL Injection, and others. Here's how to approach each countermeasure effectively:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implement Input Validation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Input validation ensures that only properly formatted data is entered into your system. Follow these steps:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Define Acceptable Input:&lt;/strong&gt; Clearly specify what constitutes valid input for each field (e.g., types, lengths, formats, and ranges) in your application. Use regular expressions for pattern matching where applicable.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Validate All Inputs:&lt;/strong&gt; Apply validation to all received data, whether from users, files, or other systems. This includes data from forms, query parameters, cookies, and any external sources.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Existing Libraries:&lt;/strong&gt; Leverage existing, well-tested validation libraries and frameworks for your programming language or platform, rather than writing your own validation code from scratch.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reject Invalid Input:&lt;/strong&gt; If input validation fails, reject the input, log the event for monitoring potential attacks, and provide user feedback that guides them toward correct input without revealing too much about the underlying validation logic or application architecture.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Implement Output Encoding&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Output encoding transforms special characters into a safe format that prevents the browser from executing them as code. This is especially important to mitigate XSS attacks.&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Encode Data:&lt;/strong&gt; Encode all dynamic data displayed to users, especially data that comes from user input, external systems, or databases. Use HTML entity encoding for content displayed in HTML.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Context-Specific Encoding:&lt;/strong&gt; The encoding method should match the context where the data is displayed (e.g., HTML, JavaScript, CSS, URL). Libraries like OWASP's ESAPI provide context-specific encoding functions.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Adopt Secure Frameworks:&lt;/strong&gt; Modern web frameworks often provide automatic output encoding. Familiarize yourself with and enable these features in your framework.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Enforce Content Security Policy (CSP)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CSP is a browser feature that helps detect and mitigate certain types of attacks, including XSS and data injection attacks, by allowing web developers to declare which dynamic resources are allowed to load.&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Define a CSP Policy:&lt;/strong&gt; Create a CSP policy that specifies which sources your web application is allowed to load resources from. Start with a strict policy that only allows resources from your domain, and then incrementally allow additional sources as needed.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use CSP Directives:&lt;/strong&gt; Utilize directives like &lt;strong&gt;default-src&lt;/strong&gt;, &lt;strong&gt;script-src&lt;/strong&gt;, &lt;strong&gt;img-src&lt;/strong&gt;, &lt;strong&gt;style-src&lt;/strong&gt;, and others to control specific resources. Use the &lt;strong&gt;nonce&lt;/strong&gt; attribute for inline scripts and styles if they are necessary.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Test Your Policy:&lt;/strong&gt; Before deploying, test your CSP policy to ensure it doesn't break your web application's functionality. Tools like Google Chrome's Developer Tools can help identify and debug CSP violations.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Implement Reporting:&lt;/strong&gt; CSP can be configured to send reports of policy violations to a server endpoint. This is invaluable for detecting and responding to attacks in real-time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;References and Good Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;OWASP (Open Web Application Security Project):&lt;/strong&gt; Refer to OWASP's guides and cheat sheets for detailed best practices on input validation, output encoding, and implementing CSP.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Web Framework Security Features:&lt;/strong&gt; Use security features built into your web development framework. Frameworks like Django, Ruby on Rails, and ASP.NET have built-in protections against many common web vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Continuous Education:&lt;/strong&gt; Stay updated on the latest security practices and vulnerabilities affecting web applications. Regularly update your skills and your application's libraries and frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these guidelines, developers can significantly enhance the security of their web UI components against a range of common web vulnerabilities.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="235" supportedStandardRef="cwe-standard"/>
            <standard ref="743-237" supportedStandardRef="OpenCRE"/>
            <standard ref="Input Validation Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Mass Assignment Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V5.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-INPV-04" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1021 - Restrict Web-Based Content||ATT&amp;CK Enterprise - M1050 - Exploit Protection||ATT&amp;CK Enterprise - M1048 - Application Isolation and Sandboxing||ATT&amp;CK ICS - M0818 - Validate Program Inputs"/>
            <customField ref="SF-C-SCOPE" value="Application Security||Data Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V5.1.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-WEB-UI-C1" name="Implement strong authentication mechanisms and follow the least privilege principle" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="cdalrymple@iriusrisk.com" library="client-side-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To enhance the security of your web UI, implementing strong authentication mechanisms is crucial. Follow these steps to ensure that access to your system is securely controlled.&lt;/p&gt;
&lt;p&gt;Step 1: Use Multi-Factor Authentication (MFA)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enable MFA:&lt;/strong&gt; Ensure your authentication system supports Multi-Factor Authentication. MFA requires users to provide two or more verification factors to gain access, significantly increasing security.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Integrate with Trusted Providers:&lt;/strong&gt; Use well-established MFA providers or frameworks that support various verification methods, such as SMS codes, email verification, authenticator apps, or hardware tokens.&lt;/p&gt;
&lt;p&gt;Step 2: Enforce Strong Password Policies&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Set Complexity Requirements:&lt;/strong&gt; Define password policies that require a mix of upper and lower case letters, numbers, and special characters. Ensure passwords are of a minimum length (e.g., 12 characters).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implement Account Lockout Mechanisms:&lt;/strong&gt; To prevent brute force attacks, temporarily lock accounts after several unsuccessful login attempts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use Password Alternatives:&lt;/strong&gt; Where possible, encourage or enforce the use of passphrase alternatives, biometrics, or other more secure authentication methods.&lt;/p&gt;
&lt;p&gt;Step 3: Regularly Update Authentication Systems&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Patch and Update:&lt;/strong&gt; Keep your authentication systems up-to-date with the latest security patches and updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audit and Review:&lt;/strong&gt; Regularly audit authentication mechanisms for vulnerabilities. Use security scanning tools and consider external security audits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Follow the Least Privilege Principle&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The principle of least privilege ensures that users and systems have only the minimum levels of access—or permissions—needed to perform their tasks. This reduces the potential impact of a compromise.&lt;/p&gt;
&lt;p&gt;Step 1: Define Access Levels&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Identify Roles:&lt;/strong&gt; Define clear roles within your application (e.g., user, admin, moderator) and specify the access level for each.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Assign Permissions:&lt;/strong&gt; Assign permissions based on roles. Ensure that each role has the least amount of privilege necessary to perform its functions.&lt;/p&gt;
&lt;p&gt;Step 2: Implement Role-Based Access Control (RBAC)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use RBAC Systems:&lt;/strong&gt; Implement or utilize an existing RBAC system that allows for easy management of roles and permissions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Regularly Review Access:&lt;/strong&gt; Periodically review roles and permissions to ensure they are still appropriate for each user’s needs.&lt;/p&gt;
&lt;p&gt;Step 3: Monitor and Audit Access&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Logging:&lt;/strong&gt; Ensure that access and activities are logged. Keep an audit trail that can be reviewed in the event of a security incident.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alerts:&lt;/strong&gt; Set up alerts for unusual access patterns or administrative actions, which can help in early detection of security breaches.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional Good Security Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Security Training:&lt;/strong&gt; Regularly train developers and users on the importance of strong authentication practices and the principle of least privilege.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Secure Communication:&lt;/strong&gt; Ensure that authentication data, such as passwords and tokens, are always transmitted over secure channels (e.g., HTTPS).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Periodic Security Assessments:&lt;/strong&gt; Conduct periodic security assessments and penetration testing to identify and mitigate potential vulnerabilities in your authentication mechanism and access control policies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing these measures will significantly strengthen the security of your web UI by ensuring that only authorized users can access sensitive information and functionality, and that they can only perform actions necessary for their role.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="270-634" supportedStandardRef="OpenCRE"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="640" supportedStandardRef="cwe-standard"/>
            <standard ref="C6" supportedStandardRef="owasp-proactive-controls"/>
            <standard ref="Choosing and Using Security Questions Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="Forgot Password Cheat Sheet" supportedStandardRef="owasp-cheat-sheets"/>
            <standard ref="V2.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="WSTG-ATHN-01" supportedStandardRef="owasp-wstg"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1026 - Privileged Account Management||ATT&amp;CK Enterprise - M1032 - Multi-factor Authentication||ATT&amp;CK Enterprise - M1047 - Audit||ATT&amp;CK Enterprise - M1018 - User Account Management||ATT&amp;CK Enterprise - M1030 - Network Segmentation"/>
            <customField ref="SF-C-SCOPE" value="Data Security||Operational Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V2.5.1"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-WEB-UI-C3" name="Regularly update dependencies, use dependency scanning tools, and follow best practices for secure coding" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="cdalrymple@iriusrisk.com" library="client-side-components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing a process to regularly update dependencies, utilize dependency scanning tools, and follow best practices for secure coding is essential in maintaining the security and integrity of your software. This proactive approach helps mitigate vulnerabilities, reduce the attack surface, and ensure the application remains robust against emerging threats. Here's how to approach each aspect effectively:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Regularly Update Dependencies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Dependencies, such as libraries and frameworks, are often updated to patch security vulnerabilities, fix bugs, and add new features. Keeping these dependencies up to date is crucial.&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Automate Updates:&lt;/strong&gt; Use tools like Dependabot (GitHub), Renovate, or npm audit (for Node.js projects) to automate the detection of outdated dependencies. These tools can be configured to automatically create pull requests for updates.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Subscribe to Vulnerability Alerts:&lt;/strong&gt; Many platforms offer vulnerability alerts for project dependencies. Enable these alerts to be notified when a dependency needs to be updated due to a security issue.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Review:&lt;/strong&gt; Schedule regular intervals (e.g., monthly or quarterly) to review and update dependencies, even if automated tools are in place. This ensures that updates don't introduce breaking changes or new vulnerabilities.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Use Dependency Scanning Tools&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Dependency scanning tools analyze your project's dependencies for known vulnerabilities, licensing issues, and sometimes even code quality.&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Integrate Scanning into CI/CD Pipeline:&lt;/strong&gt; Tools like Snyk, OWASP Dependency-Check, and SonarQube can be integrated into your Continuous Integration/Continuous Deployment (CI/CD) pipeline. This allows for automatic scanning of dependencies whenever code is committed or before deployment.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Act on Findings:&lt;/strong&gt; Prioritize and address the vulnerabilities found by scanning tools based on their severity. Some tools provide recommendations or even automated fixes for vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Audit Dependencies:&lt;/strong&gt; Regularly audit your project's dependency tree to identify and remove unused or unnecessary dependencies, reducing potential attack vectors.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Follow Best Practices for Secure Coding&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Adhering to secure coding practices is fundamental in developing resilient software that is resistant to attacks.&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;Adopt a Security Coding Standard:&lt;/strong&gt; Follow a coding standard focused on security, such as the OWASP Secure Coding Practices, to minimize the introduction of new vulnerabilities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Perform Code Reviews:&lt;/strong&gt; Implement a peer review process where code is examined by one or more developers other than the author. This helps catch security flaws, bugs, and ensures adherence to coding standards.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Educate Your Team:&lt;/strong&gt; Regularly train developers on secure coding practices, emerging vulnerabilities, and defensive programming techniques. Consider conducting security awareness sessions and workshops.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Use Static Analysis Security Testing (SAST):&lt;/strong&gt; Integrate SAST tools into your development process to automatically analyze source code for potential security issues.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Dynamic Analysis Security Testing (DAST):&lt;/strong&gt; Use DAST tools to test your applications in runtime, simulating attacks on live applications to identify vulnerabilities that static analysis might miss.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;References and Good Practices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;OWASP:&lt;/strong&gt; Utilize resources from the Open Web Application Security Project (OWASP) for the latest in web application security, including the OWASP Top Ten, which outlines the most critical web application security risks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Keep Documentation:&lt;/strong&gt; Document your security practices, dependency management policies, and update procedures. This helps maintain consistency and ensures new team members can follow established protocols.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Regular Security Assessments:&lt;/strong&gt; Beyond just dependency management and secure coding, conduct regular security assessments, including penetration testing, to identify and mitigate risks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By systematically updating dependencies, using dependency scanning tools, and adhering to secure coding practices, you can significantly enhance the security posture of your software projects, protecting both your data and your users.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="053-751" supportedStandardRef="OpenCRE"/>
            <standard ref="1104" supportedStandardRef="cwe-standard"/>
            <standard ref="7.2.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="V1.14.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value="ATT&amp;CK Enterprise - M1054 - Software Configuration||ATT&amp;CK Enterprise - M1051 - Update Software||ATT&amp;CK Enterprise - M1050 - Exploit Protection||ATT&amp;CK Enterprise - M1038 - Execution Prevention||ATT&amp;CK Enterprise - M1016 - Vulnerability Scanning||ATT&amp;CK Enterprise - M1048 - Application Isolation and Sandboxing"/>
            <customField ref="SF-C-SCOPE" value="Application Security"/>
            <customField ref="SF-C-STANDARD-BASELINE" value="ASVS"/>
            <customField ref="SF-C-STANDARD-SECTION" value="V1.14.3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2025-03-10T10:18:37.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="UC-STRIDE-ELEVATION-OF-PRIVILEGE" name="Elevation of Privilege" desc="Elevation of privilege involves an attacker gaining higher levels of access or permissions than intended. By exploiting vulnerabilities, attackers can escalate their privileges within a system to perform unauthorized actions or access sensitive data." library="client-side-components">
          <threats>
            <threat ref="T-WEB-UI-T1" name="Attackers may exploit weaknesses in authentication and authorization mechanisms" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="client-side-components" editable="true">
              <desc>&lt;p&gt;Weaknesses in authentication and authorization mechanisms represent significant security vulnerabilities within web-based user interfaces. These weaknesses can allow unauthorized access to sensitive information and systems. Authentication weaknesses pertain to flaws in verifying the identity of users attempting to access a service. Authorization weaknesses involve inadequacies in controlling what authenticated users are allowed to do. Together, these vulnerabilities can be exploited to gain unauthorized access or escalate privileges within a system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents:&lt;/strong&gt; The agents can range from automated scripts (bots) scanning the internet for vulnerabilities to exploit, to malicious insiders with legitimate access trying to elevate their privileges. External attackers, including cybercriminals and state-sponsored actors, may also exploit these weaknesses for various purposes.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors:&lt;/strong&gt; Common attack vectors include credential stuffing, where attackers use previously breached username and password pairs to gain unauthorized access; phishing attacks aimed at tricking users into disclosing their credentials; and exploitation of implementation flaws in authentication mechanisms (e.g., bypassing multi-factor authentication) or authorization schemes (e.g., exploiting insecure direct object references to access unauthorized resources).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The exploitation of weaknesses in authentication and authorization mechanisms can lead to several adverse impacts, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach:&lt;/strong&gt; Unauthorized access to sensitive personal or business data, leading to loss of confidentiality.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Privilege Escalation:&lt;/strong&gt; Attackers gaining higher-level access than what is authorized, potentially leading to full system compromise.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputation Damage:&lt;/strong&gt; The loss of customer trust and damage to the organization's reputation following a security breach.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Financial Loss:&lt;/strong&gt; Direct financial loss from theft or fraud, and indirect costs associated with incident response, legal fees, and potential fines for regulatory non-compliance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1:&lt;/strong&gt; An attacker discovers a web application does not properly enforce password complexity requirements. They use a brute-force attack to guess weak passwords and gain unauthorized access to multiple user accounts.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2:&lt;/strong&gt; A web application uses predictable resource IDs for user profiles. An authenticated attacker modifies the URL to an ID they do not own, directly accessing and altering another user’s profile due to improper authorization checks.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3:&lt;/strong&gt; An attacker performs a phishing campaign, sending emails to users of a web application, tricking them into clicking a link that leads to a fake login page designed to steal their credentials. Once successful, the attacker uses these credentials to gain unauthorized access to the web application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mitigating these threats requires implementing robust authentication mechanisms, such as multi-factor authentication, enforcing strong password policies, and regularly auditing and updating authorization logic to ensure that users can only access resources appropriate for their privilege level. Regular security assessments and awareness training for users can also significantly reduce the risk of such attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="C-WEB-UI-C1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-WEB-UI-C1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1078 - Valid Accounts||ATT&amp;CK Enterprise - T1203 - Exploitation for Client Execution||ATT&amp;CK Enterprise - T1199 - Trusted Relationship||ATT&amp;CK Enterprise - T1110 - Brute Force||ATT&amp;CK Enterprise - T1068 - Exploitation for Privilege Escalation"/>
                <customField ref="SF-T-STRIDE-LM" value="Elevation of Privilege"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-SPOOFING" name="Spoofing" desc="Spoofing involves an attacker pretending to be someone else by falsifying data or identity. This can include spoofing email addresses, IP addresses, or user identities to gain unauthorized access to systems or information." library="client-side-components">
          <threats>
            <threat ref="T-WEB-UI-T2" name="Attackers can deceive users into clicking on hidden elements" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="client-side-components" editable="true">
              <desc>&lt;p&gt;This threat involves manipulating the web user interface (UI) to deceive users into clicking on elements that are not what they appear to be. This form of attack, often referred to as "clickjacking," uses various techniques to trick a user into clicking on a concealed or disguised element. These elements, when clicked, can trigger unauthorized actions, such as liking a page, sharing sensitive information, or granting permissions to access data or perform actions on the user's behalf. The attack leverages the trust a user has in the visible UI, exploiting it to facilitate actions unintended by the user and unauthorized by the system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents:&lt;/strong&gt; The primary agents behind these attacks are often cybercriminals aiming to exploit user trust for malicious purposes, ranging from spreading malware to executing phishing campaigns or stealing credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors:&lt;/strong&gt; Common vectors include: 
  &lt;ul&gt;
   &lt;li&gt;&lt;strong&gt;UI Redressing:&lt;/strong&gt; Overlaying transparent or cleverly disguised iframes over seemingly benign web pages.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Click Transparent Layer:&lt;/strong&gt; Placing a transparent layer over a web page so that clicks intended for visible elements beneath are hijacked.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Cursor Hijacking:&lt;/strong&gt; Altering the appearance or behavior of the cursor to deceive users about the actual point of click.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The impacts of deceiving users into clicking on hidden elements can be widespread, affecting both individual users and organizations, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Privacy Violations:&lt;/strong&gt; Unauthorized sharing of personal or sensitive information without the user's knowledge.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Account Compromise:&lt;/strong&gt; Unintentional granting of access or permissions to attackers, leading to account takeover or data breaches.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Malware Infection:&lt;/strong&gt; Users might inadvertently download and install malware, leading to further exploitation.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Reputational Damage:&lt;/strong&gt; Organizations may suffer reputational damage due to the exploitation of their platforms for such attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1:&lt;/strong&gt; A user visits a seemingly harmless website that has been compromised with a clickjacking script. The script overlays a transparent iframe over a "Play" button for a video. Instead of playing the video, clicking the button unknowingly shares a malicious link on the user's social media profile.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2:&lt;/strong&gt; An attacker designs a webpage that mimics a popular game. However, hidden within the game's UI is a disguised button that, when clicked, triggers the download of a piece of malware. The malware is executed unwittingly by the user, compromising their system.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3:&lt;/strong&gt; On a compromised e-commerce site, attackers overlay a transparent layer over the entire webpage. When users attempt to click on legitimate items, they instead click on this invisible layer, which redirects them to a phishing site designed to steal their credentials.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To mitigate these threats, developers can employ various strategies, such as implementing frame-busting scripts, enabling Content Security Policy (CSP) headers to prevent unauthorized framing, and educating users about the risks of clickjacking and similar deceptive practices. Additionally, regular security assessments of web applications can help identify and rectify vulnerabilities that could be exploited in such attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1021">
                  <countermeasures>
                    <countermeasure ref="C-WEB-UI-C2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-WEB-UI-C2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1189 - Drive-by Compromise||ATT&amp;CK Enterprise - T1566.002 - Spearphishing Link||ATT&amp;CK Enterprise - T1562 - Impair Defenses||ATT&amp;CK Enterprise - T1566 - Phishing||ATT&amp;CK Enterprise - T1564.003 - Hidden Window||ATT&amp;CK Enterprise - T1564 - Hide Artifacts||ATT&amp;CK Enterprise - T1204 - User Execution"/>
                <customField ref="SF-T-STRIDE-LM" value="Spoofing"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="UC-STRIDE-TAMPERING" name="Tampering" desc="Tampering refers to unauthorized modification of data or systems. Attackers may alter data in transit or modify software components to introduce vulnerabilities or compromise the integrity of the system." library="client-side-components">
          <threats>
            <threat ref="T-WEB-UI-T3" name="Attackers can exploit vulnerabilities in third-party dependencies leading to security breaches" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="client-side-components" editable="true">
              <desc>&lt;p&gt;The exploitation of vulnerabilities in third-party dependencies is a significant threat in software development, particularly in web UI components that rely heavily on external libraries and frameworks. These dependencies can include everything from frontend libraries for UI elements to backend frameworks for data processing. If any of these third-party components are found to have security vulnerabilities, attackers can exploit them to compromise the security of the entire application. This can lead to unauthorized access, data breaches, and a range of other security incidents. The challenge is exacerbated by the complex dependency trees common in modern web development, where a single project might include hundreds of nested third-party dependencies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents:&lt;/strong&gt; Both opportunistic hackers and targeted attackers can exploit vulnerabilities in third-party dependencies. They might scan a wide range of websites and applications for known vulnerabilities or target specific high-value applications using intelligence gathered about the software stack they rely on.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors:&lt;/strong&gt; Common vectors include: 
  &lt;ul&gt;
   &lt;li&gt;&lt;strong&gt;Exploiting Known Vulnerabilities:&lt;/strong&gt; Using known vulnerabilities in public databases like CVE (Common Vulnerabilities and Exposures) to attack widely used dependencies.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Supply Chain Attacks:&lt;/strong&gt; Compromising a third-party library or tool directly to inject malicious code, affecting all downstream applications that use that dependency.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Dependency Confusion:&lt;/strong&gt; Trick developers into downloading and using malicious versions of dependencies that mimic legitimate packages.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The exploitation of vulnerabilities in third-party dependencies can have a range of impacts, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Data Breach:&lt;/strong&gt; Unauthorized access to sensitive personal and business data, potentially leading to financial loss and damage to reputation.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;System Compromise:&lt;/strong&gt; Full or partial control over the application or underlying systems, allowing for further attacks or persistent access.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Denial of Service (DoS):&lt;/strong&gt; Disabling the application or making it unavailable to legitimate users, possibly as a smokescreen for other malicious activities.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Compliance Violations:&lt;/strong&gt; Breaches may result in violations of regulatory requirements, leading to fines and legal action.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1:&lt;/strong&gt; An attacker discovers that a popular web UI framework has a known cross-site scripting (XSS) vulnerability. They craft a payload that, when executed, steals session cookies from users of all websites that use the vulnerable version of the framework.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2:&lt;/strong&gt; A widely used open-source logging library is found to have a remote code execution (RCE) vulnerability. Before the vulnerability is widely known and patched, attackers exploit it to execute arbitrary code on servers running the vulnerable library, leading to data breaches at multiple organizations.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3:&lt;/strong&gt; Through a sophisticated supply chain attack, malicious code is inserted into a minor update of a common dependency used by e-commerce platforms. This code silently exfiltrates credit card information entered by shoppers on sites using the compromised version of the dependency.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mitigating these threats involves implementing a robust security process for managing third-party dependencies. This includes regularly auditing and updating dependencies, using automated tools to identify known vulnerabilities, employing software composition analysis (SCA) tools, and adopting a secure software development lifecycle (SDLC) that incorporates security considerations from the initial design phase through to deployment and beyond. Additionally, developers should be wary of adding unnecessary dependencies to projects and consider the security posture of any third-party code they incorporate into their applications.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1395">
                  <countermeasures>
                    <countermeasure ref="C-WEB-UI-C3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-WEB-UI-C3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1195 - Supply Chain Compromise||ATT&amp;CK Enterprise - T1203 - Exploitation for Client Execution||ATT&amp;CK Enterprise - T1210 - Exploitation of Remote Services||ATT&amp;CK Enterprise - T1199 - Trusted Relationship"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
            <threat ref="T-WEB-UI-T4" name="Attackers can inject malicious scripts into web pages viewed by other users" state="Expose" source="RULES" edited="false" owner="cdalrymple@iriusrisk.com" library="client-side-components" editable="true">
              <desc>&lt;p&gt;The injection of malicious scripts into web pages viewed by other users, commonly known as Cross-Site Scripting (XSS), is a prevalent threat in web application security. XSS attacks involve the insertion of malicious scripts into the output of a web application, which are then executed in the browser of the user viewing the web page. These attacks exploit vulnerabilities in web applications that fail to adequately sanitize user input or content that is displayed to users. The consequences of XSS attacks can range from minor nuisances to significant security breaches, including theft of session tokens, cookies, personal data, and even the delivery of malware.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Threat Agents/Attack Vectors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Threat Agents:&lt;/strong&gt; XSS attacks can be launched by anyone with basic knowledge of HTML and JavaScript, ranging from individual hobbyist hackers to sophisticated cybercriminal groups. The goal might be to target a specific user, a particular organization, or any users of a vulnerable web application.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Attack Vectors:&lt;/strong&gt; There are several vectors through which XSS attacks can be carried out: 
  &lt;ul&gt;
   &lt;li&gt;&lt;strong&gt;Stored XSS:&lt;/strong&gt; Malicious scripts are permanently stored on the target server (e.g., in a database, message forum, visitor log, or comment field), and the script is executed whenever the compromised data is viewed.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;Reflected XSS:&lt;/strong&gt; The malicious script is part of the request sent to the web server, which is then reflected back in such a way that the web server sends the script to the user’s browser, where it is executed.&lt;/li&gt;
   &lt;li&gt;&lt;strong&gt;DOM-based XSS:&lt;/strong&gt; The vulnerability exists in the client-side code rather than the server-side code. The attacker manipulates the Document Object Model (DOM) of the web page and injects a script that is executed by the user’s browser.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impacts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The impacts of XSS attacks can be significant, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Session Hijacking:&lt;/strong&gt; Stealing or manipulating cookies to impersonate the victim.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Phishing:&lt;/strong&gt; Displaying fake login prompts to steal usernames and passwords.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Malware Distribution:&lt;/strong&gt; Spreading malware by including malicious scripts on web pages.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Credential Theft:&lt;/strong&gt; Capturing keystrokes or form input to steal user credentials.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Defacement:&lt;/strong&gt; Altering the appearance of the web page to spread misinformation or harm the organization's reputation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example Attack Scenarios&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 1:&lt;/strong&gt; An attacker discovers a vulnerability in a web application’s comment section that does not sanitize user input. They submit a comment containing a malicious script. When other users view the comment, the script executes, stealing their session cookies and sending them to the attacker.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 2:&lt;/strong&gt; A user receives an email with a link to a seemingly legitimate website but is actually a malicious URL containing a script. Clicking the link sends the user to the vulnerable website, where the script runs in their browser, displaying a fake login page that captures the user's credentials when entered.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Scenario 3:&lt;/strong&gt; An attacker injects a script into a poorly secured web application that rewrites the DOM to include a hidden iframe. This iframe then loads a phishing site or malware, compromising the user’s system or stealing sensitive information.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mitigation strategies against XSS include implementing robust input validation and output encoding to ensure that user-supplied data is sanitized before being returned to the user. Content Security Policy (CSP) can also be utilized to reduce the risk of XSS by specifying legitimate sources of executable scripts and effectively limiting where resources can be loaded from. Regular security testing, including automated scanning and manual code review, is crucial to identifying and fixing XSS vulnerabilities before attackers can exploit them.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="C-WEB-UI-C4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-WEB-UI-C4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value="ATT&amp;CK Enterprise - T1189 - Drive-by Compromise||ATT&amp;CK Enterprise - T1203 - Exploitation for Client Execution||ATT&amp;CK Enterprise - T1059 - Command and Scripting Interpreter||ATT&amp;CK Enterprise - T1059.007 - JavaScript||ATT&amp;CK Enterprise - T1219 - Remote Access Software||ATT&amp;CK Enterprise - T1210 - Exploitation of Remote Services||ATT&amp;CK Enterprise - T1566 - Phishing||ATT&amp;CK ICS - T0853 - Scripting"/>
                <customField ref="SF-T-STRIDE-LM" value="Tampering"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
</template>
